<?xml version="1.0" encoding="UTF-8"?> 
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ext="http://www.ibm.com/xmlns/dde/schema/annotation/ext"> 
    <xsd:complexType name="com.ibm.ws.app.manager.webappcfg"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the properties of a web application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
            </xsd:element> 
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
            </xsd:element> 
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"> 
            </xsd:element> 
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"> 
            </xsd:element> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
            <xsd:element name="appProperties" type="com.ibm.ws.appconfig.appProperties"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
            </xsd:element> 
            <xsd:element name="webservices-bnd" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd"> 
            </xsd:element> 
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
            </xsd:element> 
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextRoot" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Context root of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application context root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.webappcfg-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.app.manager.webappcfg"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.earappcfg"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the properties of an enterprise application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Enterprise Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
            </xsd:element> 
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
            </xsd:element> 
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"> 
            </xsd:element> 
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"> 
            </xsd:element> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
            <xsd:element name="appProperties" type="com.ibm.ws.appconfig.appProperties"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
            </xsd:element> 
            <xsd:element name="webservices-bnd" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd"> 
            </xsd:element> 
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
            </xsd:element> 
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"> 
            </xsd:element> 
            <xsd:element name="resourceAdapter" type="com.ibm.ws.jca.embeddedResourceAdapter"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultClientModule" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Default client module of an enterprise application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default client module</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.earappcfg-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.app.manager.earappcfg"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai.interceptor"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a trust association interceptor.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Trust Association Interceptor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>A reference to the ID of the shared library configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties" type="com.ibm.ws.security.authentication.tai.interceptor.properties"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables or disables the interceptor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable interceptor</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="className" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully-qualified package name of the interceptor class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="invokeBeforeSSO" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Invoke an interceptor before single sign-on (SSO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invoke an interceptor before SSO</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="invokeAfterSSO" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Invoke an interceptor after single sign-on (SSO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invoke an interceptor after SSO</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A reference to the ID of the shared library configuration.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai.interceptor-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.tai.interceptor"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the operation of the trust association interceptor (TAI).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Trust Association Interceptor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="interceptors" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.authentication.tai.interceptor-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="invokeForUnprotectedURI" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether the TAI is invoked for an unprotected URI.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invoke TAI for unprotected URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="failOverToAppAuthType" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow an interceptor to fall back to the application authentication mechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow fall back to application authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="continueAfterUnprotectedURI" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Reserved for the future use.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Continue after TAI for an unprotected URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.tai"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai.interceptor.properties"> 
        <xsd:annotation> 
            <xsd:documentation>Collection of properties for the interceptor.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Interceptor Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of properties for the interceptor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interceptor properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.tai.interceptor.properties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.tai.interceptor.properties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig.options"> 
        <xsd:annotation> 
            <xsd:documentation>Collection of login module options.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Login Module Options</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of login module options.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login module options</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig.options-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig.options"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
        <xsd:annotation> 
            <xsd:documentation>The JAAS login context entry configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JAAS Login Context Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a JAAS configuration entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Entry name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginModuleRef" use="optional" default="hashtable,userNameAndPassword,certificate,token" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>A reference to the ID of a JAAS login module.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login module reference</ext:label> 
                    <ext:reference>jaasLoginModule</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig"> 
        <xsd:annotation> 
            <xsd:documentation>A login module in the JAAS configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JAAS Login Module</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>A reference to the ID of the shared library configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="options" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig.options"> 
                <xsd:annotation> 
                    <xsd:documentation>A collection of JAAS Login module options</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Module Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="className" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully-qualified package name of the JAAS login module class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="controlFlag" use="optional" default="REQUIRED"> 
            <xsd:annotation> 
                <xsd:documentation>The login module's control flag.  Valid values are REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login module control flag</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="REQUIRED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>This LoginModule is REQUIRED as per the JAAS specification. The LoginModule is required to succeed.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REQUISITE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>This LoginModule is REQUISITE as per the JAAS specification. The LoginModule is required to succeed. If authentication fails, no other LoginModules will be called and control is returned to the caller.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SUFFICIENT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>This LoginModule is SUFFICIENT as per the JAAS specification. The LoginModule is not required to succeed. If authentication is successful, no other LoginModules will be called and control is returned to the caller.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="OPTIONAL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>This LoginModule is OPTIONAL as per the JAAS specification. The LoginModule is not required to succeed.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A reference to the ID of the shared library configuration.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.management"> 
        <xsd:annotation> 
            <xsd:documentation>Properties that control the behavior of the application manager</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Manager</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="autoExpand" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables automatic extraction of WAR files and EAR files</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically expand applications</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="startTimeout" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how long the server waits for an application to start before it considers it slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Start timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="stopTimeout" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how long the server waits for an application to stop before it considers it slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Stop timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.monitor"> 
        <xsd:annotation> 
            <xsd:documentation>Defines how the server responds to application additions, updates, and deletions.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Monitoring</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="pollingRate" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Rate at which the server checks for application additions, updates, and deletions. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application update polling rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dropins" use="optional" default="dropins" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Location of the application drop-in directory expressed as an absolute path or a path relative to the server directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application drop-in directory</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dropinsEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Monitor the drop-in directory for application additions, updates, and deletions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Monitor application drop-in directory</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="updateTrigger" use="optional" default="polled"> 
            <xsd:annotation> 
                <xsd:documentation>Application update method or trigger.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application update trigger</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="polled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will scan for application changes at the polling interval and update any applications that have detectable changes.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="mbean"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will only update applications when prompted by an MBean called by an external program such as an integrated development environment or a management application.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Disables all update monitoring. Application changes will not be applied while the server is running.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the properties of an application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
            </xsd:element> 
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
            </xsd:element> 
            <xsd:element name="application-client-bnd" type="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"> 
            </xsd:element> 
            <xsd:element name="web-ext" type="com.ibm.ws.javaee.dd.webext.WebExt"> 
            </xsd:element> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
            <xsd:element name="appProperties" type="com.ibm.ws.appconfig.appProperties"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
            </xsd:element> 
            <xsd:element name="webservices-bnd" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd"> 
            </xsd:element> 
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
            </xsd:element> 
            <xsd:element name="web-bnd" type="com.ibm.ws.javaee.dd.webbnd.WebBnd"> 
            </xsd:element> 
            <xsd:element name="resourceAdapter" type="com.ibm.ws.jca.embeddedResourceAdapter"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Type of application archive.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="context-root" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Context root of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application context root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.app.manager"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.global"> 
        <xsd:annotation> 
            <xsd:documentation>Global classloading</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Classloading</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="useJarUrls" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Whether to use jar: or wsjar: URLs for referencing files in archives</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use jar: URLs</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.audit.file.handler"> 
        <xsd:annotation> 
            <xsd:documentation>The default implementation of the audit file handler which emits audit events to a text file.   </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Default Audit File Handler</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="events" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.audit.event-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A definition of an audit event and audit outcome to emit an audit record for to an audit log.  If no events are specified, then all events and all outcomes will be emitted to the audit log.   </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Event</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="eventsRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>A definition of an audit event and audit outcome to emit an audit record for to an audit log.  If no events are specified, then all events and all outcomes will be emitted to the audit log.   </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Event</ext:label> 
                    <ext:reference>auditEvent</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxFileSize" use="optional" default="20"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum size, in MB, of each audit file log.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit file log size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxFiles" use="optional" default="100"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of audit file logs to save before the oldest audit file log is wrapped.  If an enforced maximum file size exists, this setting is used to determine how many of each of the logs files are kept.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum number of audit file logs</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="logDirectory" use="optional" default="${server.output.dir}/logs" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Location where the audit file log(s) will be written to.   If not specified, the audit logs are written to the default log location for the server, WLP_OUTPUT_DIR/serverName/logs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit file location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sign" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether the audit records in the audit file log will be signed.  Default behavior is to not sign the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sign the audit records in the audit log file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encrypt" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether the audit records in the audit file log will be encrypted.  Default behavior is to not encrypt the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encrypt the audit records in the audit file log</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encryptAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias name of the certificate used to encrypt the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alias name of certificate for encrypting</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encryptKeyStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Location of the keystore containing the certificate used to encrypt the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit encryption keystore reference</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signingAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias name of the personal certificate used to sign the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alias name of personal certificate for signing</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signingKeyStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Location of keystore that contains the personal certificate that is used to sign the audit records.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit signing keystore location</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="compact" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, the entire audit record, which is in JSON format, will be printed on one line within the audit log.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Compact json record format</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.audit.file.handler-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.audit.file.handler"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.audit.event"> 
        <xsd:annotation> 
            <xsd:documentation>An audit event</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Audit Event</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="eventName" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The unique name of the audit event.  For example: SECURITY_AUTHN or SECURITY_AUTHZ. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit event name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SECURITY_AUDIT_MGMT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record of the starting and stopping of audit services.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_MEMBER_MGMT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for all user and group management events, including creation, reading, updating and deleting of user and group records.                </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_API_AUTHN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any authentication which passes through the authentication API, excluding logouts.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_API_AUTHN_TERMINATE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any authentication logout which passes through the authentication API.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_AUTHN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any security authentication event, excluding logouts.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_AUTHN_TERMINATE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any authentication logout event.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_AUTHN_FAILOVER"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any authentication failover event.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_AUTHN_DELEGATION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any delegation, identify assertion, and runAS.  Used when switching user identities within a given session.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_AUTHZ"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any security authorization events.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JMX_MBEAN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any create, query, invoke MBean operations</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JMX_MBEAN_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any query, create or update to MBean attributes.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JMX_MBEAN_REGISTER"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any register or unregister MBean operations.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JMX_NOTIFICATION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record of any addition or removal of notification listeners.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_JMS_AUTHN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any JMS authentication events.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_JMS_AUTHZ"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for any JMS auhorization events.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_SAF_AUTHZ_DETAILS"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for SAF Authorization event when the SAF authorization service is configured to report additional information about authorization failures and a SAFAuthorizationException is thrown.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="APPLICATION_TOKEN_MANAGEMENT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for OAuth application token and password management</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SECURITY_SAF_AUTHZ"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit record for SAF Authorization event.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="outcome" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the outcome for an audit event to gather and report.  For example:  SUCCESS, FAILURE, or DENIED.  If no outcome is specified, then all outcomes for the particular audit event are emitted to the audit.log.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Audit outcome</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SUCCESS"> 
                                <xsd:annotation> 
                                    <xsd:documentation>success</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAILURE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>failure</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ERROR"> 
                                <xsd:annotation> 
                                    <xsd:documentation>error</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REDIRECT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>redirect</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="INFO"> 
                                <xsd:annotation> 
                                    <xsd:documentation>info</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="WARNING"> 
                                <xsd:annotation> 
                                    <xsd:documentation>warning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="DENIED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>denied</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CHALLENGE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>challenge</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.audit.event-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.audit.event"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.remoteAddress"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the remote host.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Remote Host</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="greaterThan"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Greater than</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="lessThan"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Less than</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="ip" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the IP address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IP address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.remoteAddress-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.remoteAddress"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.requestUrl"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the request URL.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Request URL</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="urlPattern" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the URL pattern.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL pattern</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.requestUrl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.requestUrl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.requestHeader"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the request header attribute name.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Request Header</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value attribute specifies the HTTP request header value. If the value is not specified, then matching is done with the name attribute, not the value attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.requestHeader-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.requestHeader"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.userAgent"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the user agent.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Agent</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="agent" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the user agent</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Agent</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.userAgent-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.userAgent"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.cookie"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the cookie name.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Cookie</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.cookie-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.cookie"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.webApp"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the web application name.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.webApp-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.webApp"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.host"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the host name.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Host</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="matchType" use="optional" default="contains"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the match type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Match type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="equals"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Equals</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="contains"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Contains</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="notContain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Not contain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter.host-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter.host"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies a selection rule that represents conditions that are matched against the HTTP request headers to determine whether or not the HTTP request is selected for the authentication.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Filter</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="webApp" type="com.ibm.ws.security.authentication.filter.webApp-factory"> 
            </xsd:element> 
            <xsd:element name="requestUrl" type="com.ibm.ws.security.authentication.filter.requestUrl-factory"> 
            </xsd:element> 
            <xsd:element name="remoteAddress" type="com.ibm.ws.security.authentication.filter.remoteAddress-factory"> 
            </xsd:element> 
            <xsd:element name="host" type="com.ibm.ws.security.authentication.filter.host-factory"> 
            </xsd:element> 
            <xsd:element name="userAgent" type="com.ibm.ws.security.authentication.filter.userAgent-factory"> 
            </xsd:element> 
            <xsd:element name="requestHeader" type="com.ibm.ws.security.authentication.filter.requestHeader-factory"> 
            </xsd:element> 
            <xsd:element name="cookie" type="com.ibm.ws.security.authentication.filter.cookie-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.filter-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.authentication.filter"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.request.timing.jdbc.metatype"> 
        <xsd:annotation> 
            <xsd:documentation>Overrides defaults that are specified in the root attributes of requestTiming for JDBC requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JDBC Timing</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="dataSourceName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the datasource that is being monitored. The datasource name is provided by the context information in the eventLogging-1.0 service. If this attribute is not provided, all datasource names are monitored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Datasource name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="query" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The SQL statement that is being monitored. The SQL statement is provided by the context information in the eventLogging-1.0 service. If this attribute is not provided, all SQL statements are monitored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="slowRequestThreshold" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a JDBC request can run before being considered slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Slow request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hungRequestThreshold" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a JDBC request can run before being considered hung. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hung request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="interruptHungRequests" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether a JDBC request that is hung is to be interrupted. A value of true causes the requestTiming-1.0 feature to attempt to interrupt the hung request. A value of false allows the request to continue to run.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interrupt hung requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.request.timing.jdbc.metatype-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.request.timing.jdbc.metatype"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.request.timing.servlet.metatype"> 
        <xsd:annotation> 
            <xsd:documentation>Overrides defaults that are specified in the root attributes of requestTiming for servlet requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Servlet Timing</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="appName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the application that is being monitored. The application name is provided by the context information in the eventLogging-1.0 service. If this attribute is not provided, all applications are monitored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="servletName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the servlet that is being monitored. The servlet name is provided by the context information in the eventLogging-1.0 service. If this attribute is not provided, all servlets are monitored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Servlet name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="slowRequestThreshold" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a servlet request can run before being considered slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Slow request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hungRequestThreshold" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a servlet request can run before being considered hung. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hung request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="interruptHungRequests" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether a servlet request that is hung is to be interrupted. A value of true causes the requestTiming-1.0 feature to attempt to interrupt the hung request. A value of false allows the request to continue to run.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interrupt hung requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.request.timing.servlet.metatype-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.request.timing.servlet.metatype"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.group.member"> 
        <xsd:annotation> 
            <xsd:documentation>A member of a Basic User Registry group.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group Member</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a user in a Basic User Registry group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.group.member-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.basic.config.group.member"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config"> 
        <xsd:annotation> 
            <xsd:documentation>A simple XML-based user registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Basic User Registry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.security.registry.basic.config.user-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A user in a Basic User Registry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.security.registry.basic.config.group-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A group in a Basic User Registry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="realm" use="optional" default="BasicRegistry" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The realm name represents the user registry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreCaseForAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow case-insensitive user name authentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Case-insensitive authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="certificateMapMode" use="optional" default="PRINCIPAL_CN"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the X.509 certificate authentication mapping mode for the basic registry: PRINCIPAL_CN, CUSTOM, or NOT_SUPPORTED.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate map mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="PRINCIPAL_CN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The basic registry attempts to authenticate the X.509 certificate by mapping the PrincipalName value in the X.509 certificate to the exact distinguished name (DN) in the repository. If a single matching entity is found, the authentication is successful. If a matching entity is not found or more than a single matching entity is found, authentication fails and the program returns an error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CUSTOM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The basic registry attempts to authenticate the X.509 certificate by using the custom X509CertificateMapper implementation that is specified by the certificateMapperId attribute. If a single matching entity is found, the authentication is successful. If a matching entity is not found or more than a single matching entity is found, authentication fails and the program returns an error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NOT_SUPPORTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The LDAP registry does not support X.509 certificate authentication. Attempts to authenticate with an X.509 certificate fail, and a CertificateMapNotSupportedException exception is thrown.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="certificateMapperId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the X509CertificateMapper to use when the X.509 certificate authentication mapping mode is CUSTOM. The value must match the value of the 'x509.certificate.mapper.id' property that is specified for the X509CertificateMapper implementation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate mapper ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.basic.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.group"> 
        <xsd:annotation> 
            <xsd:documentation>A group in a Basic User Registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="member" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.registry.basic.config.group.member-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A member of a Basic User Registry group.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group Member</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a group in a Basic User Registry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.group-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.basic.config.group"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.user"> 
        <xsd:annotation> 
            <xsd:documentation>A user in a Basic User Registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a user in a Basic User Registry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="required" type="passwordHash"> 
            <xsd:annotation> 
                <xsd:documentation>Password of a user in a Basic User Registry. The value can be stored in clear text or encoded form. It is recommended that you encode the password. To do so, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.basic.config.user-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.basic.config.user"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.container.persistence"> 
        <xsd:annotation> 
            <xsd:documentation>Configures the Batch persistence store.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Batch Persistence</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="jobStore" minOccurs="0" maxOccurs="1" type="com.ibm.ws.persistence.databaseStore"> 
                <xsd:annotation> 
                    <xsd:documentation>Persistent store for batch data.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Batch Persistent Store</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="jobStoreRef" use="optional" default="defaultDatabaseStore" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Persistent store for batch data.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch persistent store reference</ext:label> 
                    <ext:reference>databaseStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.joblog"> 
        <xsd:annotation> 
            <xsd:documentation>Configures Batch job logging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Batch Job Logging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables or disables batch job logging.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable batch job logging</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxRecords" use="optional" default="1000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of log records per job log file before rolling over to the next file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum log records per file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2147483647"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxTime" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of seconds allowed to elapse between publishes of job log events.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum number of seconds between log publishes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2147483647"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.dispatcher"> 
        <xsd:annotation> 
            <xsd:documentation>Configures the Batch JMS dispatcher.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Batch JMS Dispatcher</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="connectionFactory" type="com.ibm.ws.jca.jmsConnectionFactory"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS connection factory that the Batch dispatcher should use to obtain JMS connections.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Connection Factory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="queue" type="com.ibm.ws.jca.jmsQueue"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS queue that the Batch JMS dispatcher uses to send JMS messages.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Queue</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="connectionFactoryRef" use="optional" default="batchConnectionFactory" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS connection factory that the Batch dispatcher should use to obtain JMS connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch dispatcher connection factory reference</ext:label> 
                    <ext:reference>jmsConnectionFactory</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queueRef" use="optional" default="batchJobSubmissionQueue" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS queue that the Batch JMS dispatcher uses to send JMS messages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch dispatcher queue reference</ext:label> 
                    <ext:reference>jmsQueue</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.dispatcher-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jbatch.jms.dispatcher"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.executor"> 
        <xsd:annotation> 
            <xsd:documentation>Configures the Batch JMS executor.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Batch JMS Executor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="activationSpec" type="com.ibm.ws.jca.jmsActivationSpec"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS activation specification that the Batch executor uses to create JMS listeners.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Activation Specification</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="queue" type="com.ibm.ws.jca.jmsQueue"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS queue that the Batch activation specification uses to listen for batch JMS messages.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Queue</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="replyConnectionFactory" type="com.ibm.ws.jca.jmsConnectionFactory"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS connection factory that the Batch executor should user to obtain JMS connections.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Connection Factory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="operationGroup" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The name of the operation group</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="activationSpecRef" use="optional" default="batchActivationSpec" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS activation specification that the Batch executor uses to create JMS listeners.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch activation specification reference</ext:label> 
                    <ext:reference>jmsActivationSpec</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queueRef" use="optional" default="batchJobSubmissionQueue" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS queue that the Batch activation specification uses to listen for batch JMS messages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch executor queue reference</ext:label> 
                    <ext:reference>jmsQueue</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="replyConnectionFactoryRef" use="optional" default="batchConnectionFactory" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS connection factory that the Batch executor should user to obtain JMS connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch executor reply connection factory reference</ext:label> 
                    <ext:reference>jmsConnectionFactory</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.executor-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jbatch.jms.executor"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.events"> 
        <xsd:annotation> 
            <xsd:documentation>Configure the Batch JMS events.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Batch JMS Events</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="connectionFactory" minOccurs="0" maxOccurs="1" type="com.ibm.ws.jca.jmsConnectionFactory"> 
                <xsd:annotation> 
                    <xsd:documentation>The identifier of the JMS connection factory.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JMS Connection Factory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="connectionFactoryRef" use="optional" default="batchConnectionFactory" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the JMS connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch events connection factory reference</ext:label> 
                    <ext:reference>jmsConnectionFactory</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="topicRoot" use="optional" default="batch" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The root of the batch JMS event topic tree. The default topic tree root value is 'batch'.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JMS event topic root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jbatch.jms.events-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jbatch.jms.events"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.bell"> 
        <xsd:annotation> 
            <xsd:documentation>This feature enables the configuration of Basic Extensions using Liberty Libraries (BELL). A BELL enables the server runtime to be extended using shared libraries.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>BELL</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>The library to use for the BELL.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="service" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The name of the service that the system will look up in the /META-INF/services folder. If not specified, the system discovers all services located in the META-INF/services folder.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Service type</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The library to use for the BELL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.bell-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloading.bell"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.logging.binaryTrace"> 
        <xsd:annotation> 
            <xsd:documentation>Binary trace options.  The binary trace can be viewed using the logViewer command.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Binary Trace</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="purgeMaxSize" use="optional" default="50"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum size for the binary trace repository in megabytes.  When the value for purgeMaxSize is specified with a value of more than 0, cleanup based on repository size is enabled, otherwise it is disabled; a value of 0 means no limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum repository size</ext:label> 
                    <ext:variable>com.ibm.hpel.trace.purgeMaxSize</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="purgeMinTime" use="optional" default="0" type="hourDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the duration, in hours, after which a server can remove a trace record.  When the value for purgeMinTime is specified with a value of more than 0, cleanup based on trace record age is enabled, otherwise it is disabled; a value of 0 means no limit. Specify a positive integer followed by the unit of time, which can be hours (h). For example, specify 12 hours as 12h.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum retention time</ext:label> 
                    <ext:variable>com.ibm.hpel.trace.purgeMinTime</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fileSwitchTime" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Makes the server close the active trace file and start a new one at the specified hour of the day.  When the value for fileSwitchTime is specified, file switching is enabled, otherwise it is disabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hour of the day to switch file</ext:label> 
                    <ext:variable>com.ibm.hpel.trace.fileSwitchTime</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="23"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="bufferingEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to allow a small delay in saving records to the disk for improved performance.  When bufferingEnabled is set to true, records will be briefly held in memory before being written to disk.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable output buffering</ext:label> 
                    <ext:variable>com.ibm.hpel.trace.bufferingEnabled</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outOfSpaceAction" use="optional" default="StopLogging"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the action to perform when the file system where records are kept runs out of free space.  When outOfSpaceAction is set to "StopLogging" the server will stop tracing when records are not able to be written to disk.  When this attribute is set to "PurgeOld" the server will attempt to delete the oldest records from the binary trace repository to make space for new records.  When this attribute is set to "StopServer" binary trace will stop the server when records cannot be written.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Action if data can't be stored</ext:label> 
                    <ext:variable>com.ibm.hpel.trace.outOfSpaceAction</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="StopServer"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Stop Server</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="PurgeOld"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Remove old records</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="StopLogging"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Stop Logging</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.logging.binaryLog"> 
        <xsd:annotation> 
            <xsd:documentation>Binary logging options.  The binary log can be viewed using the logViewer command.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Binary Log</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="purgeMaxSize" use="optional" default="50"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum size for the binary log repository in megabytes.  When the value for purgeMaxSize is specified with a value of more than 0, cleanup based on repository size is enabled, otherwise it is disabled; a value of 0 means no limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum repository size</ext:label> 
                    <ext:variable>com.ibm.hpel.log.purgeMaxSize</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="purgeMinTime" use="optional" default="0" type="hourDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the duration, in hours, after which a server can remove a log record.  When the value for purgeMinTime is specified with a value of more than 0, cleanup based on log record age is enabled, otherwise it is disabled; a value of 0 means no limit. Specify a positive integer followed by the unit of time, which can be hours (h). For example, specify 12 hours as 12h.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum retention time</ext:label> 
                    <ext:variable>com.ibm.hpel.log.purgeMinTime</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fileSwitchTime" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Makes the server close the active log file and start a new one at the specified hour of the day.  When the value for fileSwitchTime is specified, file switching is enabled, otherwise it is disabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hour of the day to switch file</ext:label> 
                    <ext:variable>com.ibm.hpel.log.fileSwitchTime</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="23"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="bufferingEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to allow a small delay in saving records to the disk for improved performance.  When bufferingEnabled is set to true, records will be briefly held in memory before being written to disk.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable output buffering</ext:label> 
                    <ext:variable>com.ibm.hpel.log.bufferingEnabled</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outOfSpaceAction" use="optional" default="StopLogging"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the action to perform when the file system where records are kept runs out of free space.  When outOfSpaceAction is set to "StopLogging" the server will stop logging when records are not able to be written to disk.  When this attribute is set to "PurgeOld" the server will attempt to delete the oldest records from the binary log repository to make space for new records.  When this attribute is set to "StopServer" the binary log will stop the server when records cannot be written.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Action if data can't be stored</ext:label> 
                    <ext:variable>com.ibm.hpel.log.outOfSpaceAction</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="StopServer"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Stop Server</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="PurgeOld"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Remove old records</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="StopLogging"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Stop Logging</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the built-in authentication service configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="cacheEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables the authentication cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable authentication cache</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowHashtableLoginWithIdOnly" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow an application to login with just an identity in the hashtable properties. Use this option only when you have applications that require this and have other means to validate the identity.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow hashtable login with ID only</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.authentication.cache"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the operation of the authentication cache.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Cache</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="initialSize" use="optional" default="50"> 
            <xsd:annotation> 
                <xsd:documentation>Initial number of entries supported by the authentication cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initial cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxSize" use="optional" default="25000"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of entries supported by the authentication cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeout" use="optional" default="600s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time after which an entry in the cache will be removed. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache eviction timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowBasicAuthLookup" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow lookup by user ID and hashed password.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow lookup by user ID and hashed password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cdi12.cdiContainer"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the behavior of the Contexts and Dependency Injection (CDI) v1.2 or newer.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Contexts And Dependency Injection V1.2 Or Newer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enableImplicitBeanArchives" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The implicit bean archives are scanned for any bean discoveries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable scanning implicit bean archives</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.channelfw"> 
        <xsd:annotation> 
            <xsd:documentation>Defines channel and chain management settings. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Channel Framework</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="chainStartRetryInterval" use="optional" default="5s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Time interval between start retries. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Chain restart interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="chainStartRetryAttempts" use="optional" default="60"> 
            <xsd:annotation> 
                <xsd:documentation>Number of retry attempts to make per chain.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Chain restart attempts</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="chainQuiesceTimeout" use="optional" default="30s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Default amount of time to wait while quiescing chains. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Quiesce timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="warningWaitTime" use="optional" default="10s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait before notifying of a missing factory configuration. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Warning wait time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.tcpchannel.options"> 
        <xsd:annotation> 
            <xsd:documentation>Defines TCP protocol settings.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>TCP Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inactivityTimeout" use="optional" default="60s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait for a read or write request to complete on a socket. This value is overridden by protocol-specific timeouts. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Inactivity timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="soReuseAddr" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables immediate rebind to a port with no active listener.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SO_REUSEADDR socket option</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="addressIncludeList" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of addresses that are allowed to make inbound connections on this endpoint. You can specify IPv4 or IPv6 addresses. All values in an IPv4 or IPv6 address must be represented by a number or by an asterisk wildcard character.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address include list</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="addressExcludeList" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of addresses that are not allowed to make inbound connections on this endpoint. You can specify IPv4 or IPv6 addresses. All values in an IPv4 or IPv6 address must be represented by a number or by an asterisk wildcard character. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address exclude list</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameIncludeList" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of host names that are allowed to make inbound connections on this endpoint. Host names are not case-sensitive and can start with an asterisk, which is used as a wildcard character. However, asterisks cannot be elsewhere in the host name. For example, *.abc.com is valid, but *.abc.* is not valid. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name include list</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameExcludeList" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of host names that are not allowed to make inbound connections on this endpoint. Host names are not case-sensitive and can start with an asterisk, which is used as a wildcard character. However, asterisks cannot be elsewhere in the host name. For example, *.abc.com is valid, but *.abc.* is not valid.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name exclude list</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portOpenRetries" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>Number of retries to open a TCP/IP port during server startup.  There will be a one second delay between retries, until the opening is successful or the port open retry number is reached. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port open retries</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="100000"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="acceptThread" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If true, then listening ports do not share the same thread for accepting connections. Otherwise, they share the same thread.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Accept thread</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxOpenConnections" use="optional" default="128000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the maximum number of connections allowed to be open on this endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max open connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="waitToAccept" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Queries whether this TCP Channel will delay accepting connections until the server starts. If false, connections are closed until the server starts. If true, the value for the acceptThread tcpOption is also set to true, and connections are delayed until the server starts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Wait to accept</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.tcpchannel.options-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.tcpchannel.options"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloader.context"> 
        <xsd:annotation> 
            <xsd:documentation>Classloader context propagation configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Classloader Context</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloader.context-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloader.context"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.classloader"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the settings for an application classloader.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Classloader</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="privateLibrary" type="com.ibm.ws.classloading.sharedlibrary-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>List of library references. Library class instances are unique to this classloader, independent of class instances from other classloaders. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="commonLibrary" type="com.ibm.ws.classloading.sharedlibrary-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>List of library references. Library class instances are shared with other classloaders.  </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="delegation" use="optional" default="parentFirst"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether parent classloader is used before or after this classloader. If parent first is selected then delegate to immediate parent before searching the classpath. If parent last is selected then search the classpath before delegating to the immediate parent.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delegation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="parentFirst"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Parent first</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="parentLast"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Parent last</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="privateLibraryRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>List of library references. Library class instances are unique to this classloader, independent of class instances from other classloaders. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Library references</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="commonLibraryRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>List of library references. Library class instances are shared with other classloaders.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library references</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="classProviderRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>List of class provider references. When searching for classes or resources, this class loader will delegate to the specified class providers after searching its own class path.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Class provider references</ext:label> 
                    <ext:reference>resourceAdapter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="apiTypeVisibility" use="optional" default="spec,ibm-api,api,stable" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The types of API packages that this class loader supports. This value is a comma-separated list of any combination of the following API packages: spec, ibm-api, api, stable, third-party.  If a prefix of + or - is added to API types, those API types are added or removed, respectively, from the default set of API types. Common usage for the prefix, +third-party, results in "spec, ibm-api, api, stable, third-party". The prefix, -api, results in "spec, ibm-api, stable". </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allowed API types</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.classloader-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloading.classloader"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.folder"> 
        <xsd:annotation> 
            <xsd:documentation>Folder containing resources such as .properties and .class files</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Folder</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="dir" use="required" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Directory or folder to be included in the library classpath for locating resource files</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Folder</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.folder-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary.folder"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.file"> 
        <xsd:annotation> 
            <xsd:documentation>Add a file to be included in this library</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>File</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified filename</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary.file-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary.file"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary"> 
        <xsd:annotation> 
            <xsd:documentation>Shared Library</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Shared Library</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="fileset" type="com.ibm.ws.kernel.metatype.helper.fileset-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Id of referenced Fileset</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Fileset</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="folder" type="com.ibm.ws.classloading.sharedlibrary.folder-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Id of referenced folder</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Folder</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="file" type="com.ibm.ws.classloading.sharedlibrary.file-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Id of referenced File</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>File</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of shared library for administrators</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="description" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Description of shared library for administrators</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Description</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="filesetRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>Id of referenced Fileset</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fileset reference</ext:label> 
                    <ext:reference>fileset</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="apiTypeVisibility" use="optional" default="spec,ibm-api,api,stable" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The types of API packages that this class loader supports. This value is a comma-separated list of any combination of the following API packages: spec, ibm-api, api, stable, third-party.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allowed API types</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.classloading.sharedlibrary-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jca.internal.authdata.config"> 
        <xsd:annotation> 
            <xsd:documentation>Authentication alias for a connection to an Enterprise Information System (EIS) or database.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Data</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="user" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the user to use when connecting to the EIS.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password of the user to use when connecting to the EIS. The value can be stored in clear text or encoded form. It is recommended that you encode the password. To do so, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jca.internal.authdata.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cloudant.cloudantDatabase"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a Cloudant Database.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Cloudant Database</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="cloudant" minOccurs="0" maxOccurs="1" type="com.ibm.ws.cloudant.cloudant"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the builder for the Cloudant Client that will be used when connecting to this database.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Cloudant Builder</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="cloudantRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the builder for the Cloudant Client that will be used when connecting to this database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cloudant builder reference</ext:label> 
                    <ext:reference>cloudant</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="create" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates that the Cloudant Client should create the database if it does not already exist.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create database</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cloudant.cloudantDatabase-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cloudant.cloudantDatabase"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cloudant.cloudant"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a Cloudant Builder. A Cloudant Builder creates Cloudant Client instances, which can connect to a Cloudant Database.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Cloudant Builder</ext:label> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a library that contains the Cloudant Client library and its dependencies.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Cloudant Java Driver Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Default Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="ssl" type="com.ibm.ws.ssl.repertoire"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the SSL configuration that is needed to establish a secure connection.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Secure Socket Layer</ext:label> 
                        <ext:requires id="disableSSLAuthentication" value="false"/> 
                        <ext:group id="Advanced"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a library that contains the Cloudant Client library and its dependencies.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cloudant client java driver library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableSSLAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disables host name verification and certificate chain validation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable SSL authentication</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="url" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for the Cloudant server, which includes the host and port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="account" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Account name used to connect to a Cloudant database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Account name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default container managed authentication data</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The Cloudant user ID used to log in and access your databases.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cloudant user ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password corresponding to your Cloudant user ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectTimeout" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The timeout to establish a connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnections" use="optional" default="6"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of concurrent connections that a Cloudant Client can make to the host.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connections</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="proxyUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of a proxy server to use when connecting to a Cloudant server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy URL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyUser" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>User name for a proxy server to use when connecting to a Cloudant server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy user</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyPassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password corresponding to the user name for a proxy server to use when connecting to a Cloudant server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="readTimeout" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Timeout value to wait for a response from an established client connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the SSL configuration that is needed to establish a secure connection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure socket layer reference</ext:label> 
                    <ext:requires id="disableSSLAuthentication" value="false"/> 
                    <ext:group id="Advanced"/> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cloudant.cloudant-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cloudant.cloudant"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
        <xsd:annotation> 
            <xsd:documentation>A set of behaviors and constraints that are applied to tasks that are capable of asynchronous execution, such as maximum concurrency and maximum queue size.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Concurrency Policy</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="maxPolicy" use="optional" default="loose"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether to loosely or strictly enforce maximum concurrency for tasks that run on the task submitter's thread. Tasks can run on the task submitter's thread when using the untimed invokeAll method, or, if only invoking a single task, the untimed invokeAny method. If the run-if-queue-full attribute is configured, it is also possible for tasks to run the task submitter's thread when using the execute and submit methods. In all of these cases, this attribute determines whether or not running on the submitter's thread counts against the maximum concurrency.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="loose"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Maximum concurrency is loosely enforced. Tasks are allowed to run on the task submitter's thread without counting against maximum concurrency.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="strict"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Maximum concurrency is strictly enforced. Tasks that run on the task submitter's thread count towards maximum concurrency. This policy does not allow tasks to run on the task submitter's thread when already at maximum concurrency.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxWaitForEnqueue" use="optional" default="0" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum duration of time to wait for enqueuing a task. If unable to enqueue the task within this interval, the task submission is subject to the run-if-queue-full policy. When the maximum wait for enqueue is updated, the update applies only to tasks submitted after that point. Tasks submissions that were already waiting for a queue position continue to wait per the previously configured value. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum wait for enqueue</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="runIfQueueFull" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Applies when using the &lt;execute&gt; or &lt;submit&gt; methods. Indicates whether or not to run the task on the submitter's thread when the queue is full and the maximum wait for enqueue was exceeded. If the maximum policy is configured to strict, the ability to run on the submitter's thread is additionally contingent on the maximum concurrency constraint. If the task cannot run on the submitter's thread, the task submission is rejected after the maximum wait for enqueue elapses.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Run if queue full</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="max" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum number of tasks that can run simultaneously. The default is Integer.MAX_VALUE. Maximum concurrency can be updated while tasks are in progress. If the maximum concurrency is reduced below the number of concurrently running tasks, the update goes into effect gradually as in-progress tasks complete, rather than canceling them.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum concurrency</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxQueueSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum number of tasks that can be in the queue waiting for execution. As tasks are started, canceled, or aborted, they are removed from the queue. When the queue is at capacity and another task is submitted, the behavior is determined by the maximum wait for enqueue and run-if-queue-full attributes. To ensure that a specific number of tasks can be queued within a short interval of time, use a maximum queue size that is at least as large as that amount. The default maximum queue size is Integer.MAX_VALUE. Maximum queue size can be updated while tasks are both in progress or queued for execution. If the maximum queue size is reduced below the current number of queued tasks, the update goes into effect gradually rather than automatically canceling the excess queued tasks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum queue size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="startTimeout" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum amount of time that may elapse between the task submission and the task start. By default, tasks do not time out. If both a maximum wait for enqueue and a start timeout are enabled, configure the start timeout to be larger than the maximum wait for enqueue. When the start timeout is updated while in use, the new start timeout value applies to tasks submitted after the update occurs. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Start timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrency.policy.concurrencyPolicy-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedExecutorService"> 
        <xsd:annotation> 
            <xsd:documentation>Managed executor service</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Managed Executor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="concurrencyPolicy" type="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
                <xsd:annotation> 
                    <xsd:documentation>Concurrency policy for tasks that are submitted to this executor. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the collection of executors that specify the policy.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Concurrency Policy</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="contextService" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Thread Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="longRunningPolicy" type="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
                <xsd:annotation> 
                    <xsd:documentation>Concurrency policy for tasks that specify the LONGRUNNING_HINT execution property with value of 'true'. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the whole the collection of executors that specify the policy. If unspecified, the long running concurrency policy defaults to the executor's general concurrency policy.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Long Running Policy</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="concurrencyPolicyRef" use="optional" default="defaultConcurrencyPolicy" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Concurrency policy for tasks that are submitted to this executor. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the collection of executors that specify the policy.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Concurrency policy</ext:label> 
                    <ext:reference>concurrencyPolicy</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextServiceRef" use="optional" default="DefaultContextService" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="longRunningPolicyRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Concurrency policy for tasks that specify the LONGRUNNING_HINT execution property with value of 'true'. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the whole the collection of executors that specify the policy. If unspecified, the long running concurrency policy defaults to the executor's general concurrency policy.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Long running policy</ext:label> 
                    <ext:reference>concurrencyPolicy</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedExecutorService-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.concurrent.managedExecutorService"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedThreadFactory"> 
        <xsd:annotation> 
            <xsd:documentation>Managed thread factory</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Managed Thread Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="contextService" minOccurs="0" maxOccurs="1" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Thread Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="contextServiceRef" use="optional" default="DefaultContextService" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="createDaemonThreads" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether or not threads created by the managed thread factory should be daemon threads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create daemon threads</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultPriority" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Default priority for threads created by the managed thread factory. If unspecified, the priority of the creating thread is used. Priority cannot exceed the maximum priority for the managed thread factory, in which case the maximum priority is used instead.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default thread priority</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="10"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxPriority" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum priority for threads created by the managed thread factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum thread priority</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="10"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedThreadFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.concurrent.managedThreadFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.context.service"> 
        <xsd:annotation> 
            <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Thread Context Propagation</ext:label> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="baseContext" type="com.ibm.ws.context.service-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a base context service from which to inherit context that is not already defined on this context service.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Base Context</ext:label> 
                        <ext:group id="Advanced"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="classloaderContext" type="com.ibm.ws.classloader.context-factory"> 
            </xsd:element> 
            <xsd:element name="jeeMetadataContext" type="com.ibm.ws.javaee.metadata.context-factory"> 
            </xsd:element> 
            <xsd:element name="securityContext" type="com.ibm.ws.security.context-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="onError" use="optional" default="WARN"> 
            <xsd:annotation> 
                <xsd:documentation>Determines the action to take in response to configuration errors. For example, if securityContext is configured for this contextService, but the security feature is not enabled, then onError determines whether to fail, raise a warning, or ignore the parts of the configuration which are incorrect.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Action to take on error</ext:label> 
                    <ext:variable>onError</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="WARN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAIL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="baseContextRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a base context service from which to inherit context that is not already defined on this context service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base instance from which to inherit context</ext:label> 
                    <ext:group id="Advanced"/> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.context.service-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.context.service"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedScheduledExecutorService"> 
        <xsd:annotation> 
            <xsd:documentation>Managed scheduled executor service</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Managed Scheduled Executor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="concurrencyPolicy" type="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
                <xsd:annotation> 
                    <xsd:documentation>Concurrency policy for tasks that are submitted to this executor. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the collection of executors that specify the policy.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Concurrency Policy</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="contextService" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Thread Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="longRunningPolicy" type="com.ibm.ws.concurrency.policy.concurrencyPolicy"> 
                <xsd:annotation> 
                    <xsd:documentation>Concurrency policy for tasks that specify the LONGRUNNING_HINT execution property with value of 'true'. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the whole the collection of executors that specify the policy. If unspecified, the long running concurrency policy defaults to the executor's general concurrency policy.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Long Running Policy</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="concurrencyPolicyRef" use="optional" default="defaultConcurrencyPolicy" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Concurrency policy for tasks that are submitted to this executor. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the collection of executors that specify the policy.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Concurrency policy</ext:label> 
                    <ext:reference>concurrencyPolicy</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextServiceRef" use="optional" default="DefaultContextService" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures how context is propagated to threads</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="longRunningPolicyRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Concurrency policy for tasks that specify the LONGRUNNING_HINT execution property with value of 'true'. If multiple executors specify the same concurrency policy, then the policy's constraints are enforced across tasks that are submitted by the whole the collection of executors that specify the policy. If unspecified, the long running concurrency policy defaults to the executor's general concurrency policy.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Long running policy</ext:label> 
                    <ext:reference>concurrencyPolicy</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.managedScheduledExecutorService-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.concurrent.managedScheduledExecutorService"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.connectionManager"> 
        <xsd:annotation> 
            <xsd:documentation>Connection Manager configuration</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Connection Manager</ext:label> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="agedTimeout" use="optional" default="-1" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time before a connection can be discarded by pool maintenance. A value of -1 disables this timeout. A value of 0 discards every connection, which disables connection pooling. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Aged timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionTimeout" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time after which a connection request times out. A value of -1 disables this timeout, meaning infinite wait. A value of 0 is immediate, meaning no wait. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxIdleTime" use="optional" default="30m" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time a connection can be unused or idle until it can be discarded during pool maintenance, if doing so does not reduce the pool below the minimum size. A value of -1 disables this timeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum idle time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxPoolSize" use="optional" default="50"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of physical connections for a pool. A value of 0 means unlimited.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="minPoolSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Minimum number of physical connections to maintain in the pool. The pool is not pre-populated. Aged timeout can override the minimum.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="purgePolicy" use="optional" default="EntirePool"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies which connections to destroy when a stale connection is detected in a pool.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Purge policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="EntirePool"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When a stale connection is detected, all connections in the pool are marked stale, and when no longer in use, are closed.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FailingConnectionOnly"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When a stale connection is detected, only the connection which was found to be bad is closed.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ValidateAllConnections"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When a stale connection is detected, connections are tested and those found to be bad are closed.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="reapTime" use="optional" default="3m" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time between runs of the pool maintenance thread. A value of -1 disables pool maintenance. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reap time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnectionsPerThread" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Limits the number of open connections on each thread.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum open connections per thread</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="numConnectionsPerThreadLocal" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Caches the specified number of connections for each thread.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Number of cached connections per thread</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableSharingForDirectLookups" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If set to true, connections are shared. If set to false, connections are unshared.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable connection sharing for direct lookups</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.connectionManager-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.connectionManager"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.s4u2proxy.KerberosExtService"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the operation of constrained delegation. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Constrained Delegation</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="s4U2selfEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether s4U2self is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable s4U2self</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.couchdb.couchdb"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a CouchDB Connector.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>CouchDB</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="library" minOccurs="0" maxOccurs="1" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a library that contains the CouchDB Client library and its dependencies.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>CouchDB Client Java Driver Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a library that contains the CouchDB Client library and its dependencies.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>CouchDB client java driver library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="username" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The CouchDB User ID used to log-in and access your DBs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>CouchDB user id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password corresponding to your Couchdb User ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a CouchDB instance.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Jndi name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="url" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for the CouchDB server, which includes the host and port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Host name for the CouchDB server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="optional" default="5984" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port number for the CouchDB server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnections" use="optional" default="20" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of concurrent connections to the host.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionTimeout" use="optional" default="30s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The timeout to establish a connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="socketTimeout" use="optional" default="1m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The duration to wait for a response. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableSSL" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables SSL when connecting to CouchDB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable SSL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="relaxedSSLSettings" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables relaxed SSL settings which allows the trust manager to accept any host and certificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Relaxed ssl setting</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="caching" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allows loading documents from http client's cache if it exists and the revision has not changed since last access.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Caching</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxCacheEntries" use="optional" default="1000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of cache entries for the http client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum cache entries</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxObjectSizeBytes" use="optional" default="8192"> 
            <xsd:annotation> 
                <xsd:documentation>Sets the maximum size for a stored document.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum object size in bytes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useExpectContinue" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Use Expect Continue header in request when making requests to CouchDB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use expect continue</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cleanupIdleConnections" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Closes connections automatically when they are considered idle.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cleanup idle connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.couchdb.couchdb-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.couchdb.couchdb"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.transportLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Configure how to trust the client.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Transport Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sslEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether SSL is enabled for CSIv2 requests. Default is true and is the recommended value. If this attribute is set to false, sensitive information such as passwords and tokens are sent over unsecured channels when using IIOP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the SSL configuration needed to establish a secure connection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.transportLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.transportLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.security.IiopsOptions"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the port and SSL options for an IIOPS socket using the host of the enclosing iiopEndpoint element.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Secure IIOP Port Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="iiopsPort" use="required" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the port to be configured with the SSL options.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port to be secured</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sessionTimeout" use="optional" default="1d" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait for a read or write request to complete on a socket. This value is overridden by protocol-specific timeouts. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suppressHandshakeErrors" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disable logging of SSL handshake errors. SSL handshake errors can occur during normal operation, however these messages can be useful when SSL is behaving unexpectedly.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suppress SSL handshake errors</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The default SSL configuration repertoire. The default value is defaultSSLSettings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default SSL repertoire</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslSessionTimeout" use="optional" default="8640ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The timeout limit for an SSL session that is established by the SSL Channel. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL session timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.security.IiopsOptions-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.transport.iiop.security.IiopsOptions"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.serverPolicyLayers"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Layers</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="attributeLayer" type="com.ibm.ws.security.csiv2.attributeLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Determine the attribute layer options that are claimed by the server for incoming CSIv2 requests.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Attribute Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authenticationLayer" type="com.ibm.ws.security.csiv2.authenticationLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Determine the authentication mechanisms and association options that are claimed by the server for incoming CSIv2 requests.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="transportLayer" type="com.ibm.ws.security.csiv2.transportLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Configure how to trust the client.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Transport Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.serverPolicyLayers-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.serverPolicyLayers"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.attributeLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Determine the attribute layer options that are claimed by the server for incoming CSIv2 requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Attribute Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="identityAssertionTypes" minOccurs="0" maxOccurs="4" default="ITTAnonymous"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the supported identity token types for identity assertion.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Identity assertion token types</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="ITTAnonymous"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTAnonymous identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTPrincipalName"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTPrincipalName identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTX509CertChain"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTX509CertChain identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTDistinguishedName"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTDistinguishedName identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="identityAssertionEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether identity assertion is enabled. Default is false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Identity assertion enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedIdentities" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify a pipe (|)-separated list of server identities, which are trusted to perform identity assertion to this server. A value of “*” is also accepted to indicate implicit trust (trust anyone).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trusted identities</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.attributeLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.attributeLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyCSIV2"> 
        <xsd:annotation> 
            <xsd:documentation>Common Secure Interoperability Version 2 (CSIv2) for outgoing Internet Inter-ORB Protocol (IIOP) requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Client CSIv2</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="layers" minOccurs="0" maxOccurs="1" type="com.ibm.ws.security.csiv2.clientPolicyLayers"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Layers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyCSIV2-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientPolicyCSIV2"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyAttributeLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Determine the attribute layer options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Attribute Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="identityAssertionTypes" minOccurs="0" maxOccurs="4" default="ITTAnonymous"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the supported identity token types for identity assertion.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Identity assertion token types</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="ITTAnonymous"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTAnonymous identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTPrincipalName"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTPrincipalName identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTX509CertChain"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTX509CertChain identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ITTDistinguishedName"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>Assert an ITTDistinguishedName identity token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="identityAssertionEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether identity assertion is enabled. Default is false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Identity assertion enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedIdentity" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The trusted identity used to assert an entity to the remote server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trusted identity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedPassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the password that is used with the trusted identity.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyAttributeLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientPolicyAttributeLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyLayers"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Layers</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="attributeLayer" type="com.ibm.ws.security.csiv2.clientPolicyAttributeLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Determine the attribute layer options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Attribute Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authenticationLayer" type="com.ibm.ws.security.csiv2.clientPolicyAuthenticationLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Determine the authentication mechanisms and association options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="transportLayer" type="com.ibm.ws.security.csiv2.transportLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Configure how to trust the client.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Transport Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyLayers-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientPolicyLayers"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.serverPolicyCSIV2"> 
        <xsd:annotation> 
            <xsd:documentation>Common Secure Interoperability Version 2 (CSIv2) for incoming Internet Inter-ORB Protocol (IIOP) requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Server CSIv2</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="layers" minOccurs="0" maxOccurs="1" type="com.ibm.ws.security.csiv2.serverPolicyLayers"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Layers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.serverPolicyCSIV2-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.serverPolicyCSIV2"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.authenticationLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Determine the authentication mechanisms and association options that are claimed by the server for incoming CSIv2 requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="mechanisms" minOccurs="0" maxOccurs="3" default="LTPA" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies authentication mechanisms as a comma separated list. For example: GSSUP, LTPA</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication mechanisms</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="establishTrustInClient" use="optional" default="Required"> 
            <xsd:annotation> 
                <xsd:documentation>Specify if this association option is Supported, Required, or Never used for this layer. It indicates authentication requirements at the authentication layer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Establish trust in client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Required"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is required</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Supported"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is supported</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Never"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option must not be used</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.authenticationLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.authenticationLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyAuthenticationLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Determine the authentication mechanisms and association options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="mechanisms" minOccurs="0" maxOccurs="3" default="LTPA" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies authentication mechanisms as a comma separated list. For example: GSSUP, LTPA</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication mechanisms</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="establishTrustInClient" use="optional" default="Supported"> 
            <xsd:annotation> 
                <xsd:documentation>Specify if this association option is Supported, Required, or Never used for this layer. It indicates authentication requirements at the authentication layer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Establish trust in client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Required"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is required</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Supported"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is supported</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Never"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option must not be used</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientPolicyAuthenticationLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientPolicyAuthenticationLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyCSIV2"> 
        <xsd:annotation> 
            <xsd:documentation>Common Secure Interoperability Version 2 (CSIv2) for outgoing Internet Inter-ORB Protocol (IIOP) requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Client Container CSIv2</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="layers" minOccurs="0" maxOccurs="1" type="com.ibm.ws.security.csiv2.clientContainer.clientPolicyLayers"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Layers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyCSIV2-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientContainer.clientPolicyCSIV2"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.transportLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Configure how to trust the client.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Transport Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sslEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether SSL is enabled for CSIv2 requests. Default is true and is the recommended value. If this attribute is set to false, sensitive information such as passwords and tokens are sent over unsecured channels when using IIOP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the SSL configuration needed to establish a secure connection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.transportLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientContainer.transportLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyLayers"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the CSIv2 layers like transport, authentication, and attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Layers</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authenticationLayer" type="com.ibm.ws.security.csiv2.clientContainer.clientPolicyAuthenticationLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Determine the authentication mechanisms and association options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="transportLayer" type="com.ibm.ws.security.csiv2.clientContainer.transportLayer"> 
                <xsd:annotation> 
                    <xsd:documentation>Configure how to trust the client.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Transport Layer</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyLayers-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientContainer.clientPolicyLayers"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyAuthenticationLayer"> 
        <xsd:annotation> 
            <xsd:documentation>Determine the authentication mechanisms and association options to be performed by the client for outgoing CSIv2 requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Layer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="mechanisms" minOccurs="0" maxOccurs="2" default="GSSUP" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies authentication mechanisms as a comma separated list. For example: GSSUP</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication mechanisms</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="establishTrustInClient" use="optional" default="Supported"> 
            <xsd:annotation> 
                <xsd:documentation>Specify if this association option is Supported, Required, or Never used for this layer. It indicates the authentication requirements at the authentication layer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Establish trust in client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Required"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is required</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Supported"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option is supported</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Never"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The association option must not be used</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The user name that is used to login to the remote server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The user password that is used with the user name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.csiv2.clientContainer.clientPolicyAuthenticationLayer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.csiv2.clientContainer.clientPolicyAuthenticationLayer"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.cacheGroup.member"> 
        <xsd:annotation> 
            <xsd:documentation>Members of an external cache group that are controlled by WebSphere Application Server.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>External Cache Group Member</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="adapterBeanName" minOccurs="1" maxOccurs="1" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the name of a class, which is located on the WebSphere Application Server class path, of the adapter between WebSphere Application Server and this external cache.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Adapter bean name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="host" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified host name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.cacheGroup.member-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cache.cacheGroup.member"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.disk"> 
        <xsd:annotation> 
            <xsd:documentation>Enable disk offload to specify that when the cache is full, cache entries are removed from the cache and saved to disk. The location is a fully-qualified directory location that is used by the disk offload function. The Flush to Disk on Stop option specifies that when the server stops, the contents of the memory cache are moved to disk.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Enable Disk Offload</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sizeInEntries" use="optional" default="100000"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a value for the maximum disk cache size, in number of entries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disk cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sizeInGB" use="optional" default="3"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a value for the maximum disk cache size, in gigabytes (GB).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disk cache size in gigabytes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="3"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="evictionPolicy" use="optional" default="RANDOM"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the eviction algorithm and thresholds that the disk cache uses to evict entries. When the disk size reaches a high threshold limit, the disk cache garbage collector wakes up and evicts randomly-selected (Random) or the largest (Size) entries on the disk until the disk size reaches a low threshold limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disk cache eviction policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="RANDOM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Random</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SIZE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Size</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="highThreshold" use="optional" default="80"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when the eviction policy starts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>High threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="100"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="lowThreshold" use="optional" default="70"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when the eviction policy ends.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Low threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="100"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="location" use="optional" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a directory to use for disk offload.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disk offload location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="flushToDiskOnStopEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this value to true to have objects that are cached in memory saved to disk when the server stops. This value is ignored if Enable disk offload is set to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Flush to disk</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.disk-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cache.disk"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.cacheGroup"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies sets of external caches that are controlled by WebSphere(R) Application Server on servers such as IBM(R) WebSphere(R) Edge Server and IBM(R) HTTP Server.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>External Cache Groups</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="member" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.cache.cacheGroup.member"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a unique name for the external cache group. The external cache group name must match the ExternalCache property that is defined in the servlet or Java(TM) Server Pages (JSP) cachespec.xml file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache.cacheGroup-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cache.cacheGroup"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache"> 
        <xsd:annotation> 
            <xsd:documentation>Distributed map configuration for a local cache.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Distributed Map</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a reference to a shared library.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="cacheGroup" type="com.ibm.ws.cache.cacheGroup"> 
            </xsd:element> 
            <xsd:element name="diskCache" type="com.ibm.ws.cache.disk"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="jndiName" use="optional" default="${id}" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a cache instance.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="memorySizeInEntries" use="optional" default="2000"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a positive integer that defines the maximum number of entries that the cache can hold. Values are usually in the thousands. The minimum value is 100, with no set maximum value. The default value is 2000.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Memory cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="memorySizeInMB" use="optional" default="-1"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a value for the maximum memory cache size in megabytes (MB).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Memory cache size in megabytes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="highThreshold" use="optional" default="-1"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when the memory cache eviction policy starts. The threshold is expressed in terms of the percentage of the memory cache size in megabytes (MB).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>High threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="100"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="lowThreshold" use="optional" default="-1"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when the memory cache eviction policy ends. The threshold is expressed in terms of the percentage of the memory cache size in megabytes (MB).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Low threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="100"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="cacheProviderName" use="optional" default="default" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name of an alternate cache provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a reference to a shared library.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.cache-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.cache"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.ejbappcfg"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the properties of an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="application-bnd" type="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
            </xsd:element> 
            <xsd:element name="application-ext" type="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
            </xsd:element> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
            <xsd:element name="appProperties" type="com.ibm.ws.appconfig.appProperties"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-bnd" type="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
            </xsd:element> 
            <xsd:element name="ejb-jar-ext" type="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
            </xsd:element> 
            <xsd:element name="managed-bean-bnd" type="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="context-root" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Context root of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application context root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.ejbappcfg-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.app.manager.ejbappcfg"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ejbcontainer.asynchronous.runtime"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the behavior of EJB asynchronous methods.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Asynchronous Methods</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="contextService" minOccurs="0" maxOccurs="1" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>The context service used to manage context propagation to asynchronous EJB method threads.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Asynchronous Method Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="maxUnclaimedRemoteResults" use="optional" default="1000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of unclaimed results that the server retains from all remote asynchronous method calls that return a Future object. If the maximum is exceeded, the server purges the result of the method call that completed the longest ago to prevent memory leakage.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum remote method results</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="unclaimedRemoteResultTimeout" use="optional" default="24h" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The amount of time that the server retains the result for each remote asynchronous method call that returns a Future object. If an application does not claim the result within the specified period of time, the server purges the result of that method call to prevent memory leakage. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote method result timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextServiceRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The context service used to manage context propagation to asynchronous EJB method threads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Asynchronous method context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ejbcontainer.asynchronous.runtime-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ejbcontainer.asynchronous.runtime"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ejbcontainer.timer.runtime"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the behavior of the EJB timer service.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Timer Service</ext:label> 
                <ext:groupDecl id="Advanced"/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="persistentExecutor" type="com.ibm.ws.concurrent.persistent.executor"> 
                <xsd:annotation> 
                    <xsd:documentation>Schedules and runs EJB persistent timer tasks.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB Persistent Timers Scheduled Executor</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="nonPersistentContextService" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>The context service is used to manage context propagation to non-persistent timer method threads.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Non-persistent Timer Thread Context Propagation</ext:label> 
                        <ext:group id="Advanced"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="lateTimerThreshold" use="optional" default="5m" type="minuteDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Number of minutes after the scheduled expiration of a timer that the start of the timer will be considered late. When a timer does start late, a warning message will be logged indicating that the timer has started later than scheduled. The default threshold is 5 minutes and a value of 0 minutes turns off the warning message feature. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Late timer warning threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentRetryInterval" use="optional" default="300s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>When a non-persistent timer expires, the timeout callback method is called. If the transaction for this callback method fails or is rolled back, the container must retry the timer. The first retry attempt occurs immediately, and subsequent retry attempts are delayed by the number of seconds specified. If the value is set to 0, then all retries occur immediately. If you do not specify a value, the default interval is 300 seconds. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time interval between retries</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentMaxRetries" use="optional" default="-1"> 
            <xsd:annotation> 
                <xsd:documentation>When a non-persistent timer expires, the timeout callback method is called. This setting controls how many times the EJB container attempts to retry the timer. If the transaction for this callback method fails or is rolled back, the EJB container must retry the timer at least once. The default value is -1, which means the EJB container retries infinitely until the timer is successful. If the value is set to 0, the EJB container does not retry the timer, however, this results in behavior that is not compliant with the EJB specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum number of retries</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="persistentExecutorRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Schedules and runs EJB persistent timer tasks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EJB persistent timers executor reference</ext:label> 
                    <ext:reference>persistentExecutor</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentContextServiceRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The context service is used to manage context propagation to non-persistent timer method threads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Thread context propagation reference</ext:label> 
                    <ext:group id="Advanced"/> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ejbcontainer.timer.runtime-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ejbcontainer.timer.runtime"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.event.logging"> 
        <xsd:annotation> 
            <xsd:documentation>Logs a record of events, such as the JDBC requests and servlet requests, and their durations.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Event Logging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="logMode" use="optional" default="exit"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether the event logging occurs at the entry to events, at the exit from events, or both.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Logging mode for events</ext:label> 
                    <ext:variable>logMode</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="entry"> 
                                <xsd:annotation> 
                                    <xsd:documentation>log at entry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="exit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>log at exit</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="entryExit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>log at entry and exit</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sampleRate" use="optional" default="1"> 
            <xsd:annotation> 
                <xsd:documentation>To sample one out of every n requests, set sampleRate to n.  To sample all requests, set sampleRate to 1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sampling rate for event logging</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="minDuration" use="optional" default="1s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Exit entries will be logged for events longer than minDuration. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum duration of a request to log</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="eventTypes" use="optional" default="all" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A list of comma-separated event types that needs to be logged.  Use all, to log all event types.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Event types to log</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeContextInfo" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates if the context information details are included in the log output.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include context information</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.mimetype"> 
        <xsd:annotation> 
            <xsd:documentation>Definition of mime types shared by all http virtual hosts</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Default Mime Types</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="type" minOccurs="0" maxOccurs="5000" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Definition of mime type as id=value. Use the extension as the id, and the associated type as the value.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Mime extension and type</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.dispatcher"> 
        <xsd:annotation> 
            <xsd:documentation>HTTP Dispatcher configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Dispatcher</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="trustedHeaderOrigin" default="*" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Private headers are used by the web server plug-in to provide information about the original request. These headers take precedence over the http Host header, and are used to select a virtual host to service a request. The default value is '*', which will trust incoming private headers from any source. Specify 'none' to disable private headers and rely only on the http Host header, or specify a list of IP addresses to restrict private header processing to specific trusted sources.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted private header origin</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="trustedSensitiveHeaderOrigin" default="none" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Private headers are used by the web server plug-in to provide information about the original request. A subset of these headers are considered sensitive. By default, the value for this property is 'none'. Incoming, sensitive private headers are not trusted from any source. Specify a comma-separated list of IP addresses, such as {1.1.2.2, F:FF:FFF:FFFF:1:11:111:1111} to allow sensitive private header processing for specific trusted sources, or specify '*' to trust incoming sensitive private headers from any source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted sensitive private header origin</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="enableWelcomePage" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables the default Liberty profile welcome page when no application is bound to a context root of "/".  The default value is true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable welcome page</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appOrContextRootMissingMessage" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Message to return to the client when the application in the requested URI can not be found.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message when application can not be found</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.http.encoding"> 
        <xsd:annotation> 
            <xsd:documentation>HTTP transport encoding settings</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Transport Encoding</ext:label> 
                <ext:groupDecl id="Converter" label="Converters">Character set converters</ext:groupDecl> 
                <ext:groupDecl id="Encoding" label="Encodings">Language encodings</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="converter.Shift_JIS" use="optional" default="Cp943C" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Shift_JIS Japanese converter</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shift_JIS Japanese converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.EUC-JP" use="optional" default="Cp33722C" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>EUC Japanese converter (EUC-JP)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EUC Japanese converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.EUC-KR" use="optional" default="Cp970" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>EUC Korean converter (EUC-KR)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EUC Korean converter (EUC-KR)</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.EUC_KR" use="optional" default="Cp970" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>EUC Korean converter (EUC_KR)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EUC Korean converter (EUC_KR)</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.EUC-TW" use="optional" default="Cp964" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>EUC Chinese (Taiwan) converter (EUC-TW)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EUC Chinese (Taiwan) converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.Big5" use="optional" default="Cp950" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Big5 Chinese converter</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Big5 Chinese converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.GB2312" use="optional" default="EUC_CN" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>GB2312 Chinese converter</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>GB2312 Chinese converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="converter.ISO-2022-KR" use="optional" default="ISO2022KR" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>ISO-2022 Korean converter (ISO-2022-KR)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ISO-2022 Korean converter</ext:label> 
                    <ext:group id="Converter"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.en" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>English language encoding (en)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>English language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.fr" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>French language encoding (fr)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>French language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.de" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>German language encoding (de)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>German language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.es" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Spanish language encoding (es)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Spanish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.pt" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Portuguese language encoding (pt)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Portuguese language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.da" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Danish language encoding (da)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Danish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ca" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Catalan language encoding (ca)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Catalan language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.fi" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Finnish language encoding (fi)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Finnish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.it" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Italian language encoding (it)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Italian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.nl" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Dutch language encoding (nl)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Dutch language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.no" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Norwegian language encoding (no)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Norwegian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sv" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Swedish language encoding (sv)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Swedish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.is" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Icelandic language encoding (is)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Icelandic language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.eu" use="optional" default="ISO-8859-1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Basque language encoding (eu)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Basque language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.cs" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Czech language encoding (cs)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Czech language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.hr" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Croatian language encoding (hr)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Croatian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.hu" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Hungarian language encoding (hu)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hungarian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.lt" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Lithuanian language encoding (lt)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Lithuanian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.pl" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Polish language encoding (pl)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Polish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sh" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Serbo-Croatian language encoding (sh)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Serbo-Croatian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sk" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Slovak language encoding (sk)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Slovak language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sl" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Slovenian language encoding (sl)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Slovenian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sq" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Albanian language encoding (sq)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Albanian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.fo" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Faroese language encoding (fo)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Faroese language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ro" use="optional" default="ISO-8859-2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Romanian language encoding (ro)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Romanian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.mt" use="optional" default="ISO-8859-3" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Maltese language encoding (mt)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maltese language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.et" use="optional" default="ISO-8859-4" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Estonian language encoding (et)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Estonian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.lv" use="optional" default="ISO-8859-4" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Latvian language encoding (lv)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Latvian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.be" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Belarusian language encoding (be)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Belarusian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.bg" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Bulgarian language encoding (bg)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bulgarian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.mk" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Macedonian language encoding (mk)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Macedonian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ru" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Russian language encoding (ru)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Russian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sr" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Serbian language encoding (sr)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Serbian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.uk" use="optional" default="ISO-8859-5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Ukrainian language encoding (uk)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ukrainian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ar" use="optional" default="ISO-8859-6" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Arabic language encoding (ar)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Arabic language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.fa" use="optional" default="ISO-8859-6" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Persian language encoding (fa)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ms" use="optional" default="ISO-8859-6" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Malay language encoding (ms)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Malay language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.el" use="optional" default="ISO-8859-7" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Greek language encoding (el)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Greek language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.iw" use="optional" default="ISO-8859-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Hebrew language encoding (iw)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hebrew language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.he" use="optional" default="ISO-8859-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Hebrew language encoding (he)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hebrew language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ji" use="optional" default="ISO-8859-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Yiddish language encoding (ji)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Yiddish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.yi" use="optional" default="ISO-8859-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Yiddish language encoding (yi)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Yiddish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.tr" use="optional" default="ISO-8859-9" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Turkish language encoding (tr)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Turkish language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.th" use="optional" default="windows-874" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Thai language encoding (th)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Thai language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.vi" use="optional" default="windows-1258" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Vietnamese language encoding (vi)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Vietnamese language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ja" use="optional" default="Shift_JIS" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Japanese language encoding (ja)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Japanese language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ko" use="optional" default="EUC-KR" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Korean language encoding (ko)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Korean language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.zh" use="optional" default="GB2312" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Chinese language encoding (zh)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Chinese language encoding (simplified)</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.zh_TW" use="optional" default="Big5" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Chinese language encoding (zh_TW)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Chinese language encoding (traditional)</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.hy" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Armenian language encoding (hy)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Armenian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ka" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Georgian language encoding (ka)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Georgian language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.hi" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Hindi language encoding (hi)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hindi language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.mr" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Marathi language encoding (mr)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Marathi language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.sa" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Sanskrit language encoding (sa)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sanskrit language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.ta" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Tamil language encoding (ta)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Tamil language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encoding.bn" use="optional" default="UTF-8" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Bengali language encoding (bn)</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bengali language encoding</ext:label> 
                    <ext:group id="Encoding"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.log.access"> 
        <xsd:annotation> 
            <xsd:documentation>HTTP access logs contain a record of all inbound HTTP client requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Access Logging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables access logging when the accessLogging configuration element is defined. Note: Access logging must be configured for this attribute to take effect.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="filePath" use="optional" default="${server.output.dir}/logs/http_access.log" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Directory path and name of the access log file. Standard variable substitutions, such as ${server.output.dir}, can be used when specifying the directory path.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Log file path</ext:label> 
                    <ext:unique>accessLogFilePath</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logFormat" use="optional" default="%h %u %{t}W &quot;%r&quot; %s %b" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the log format that is used when logging client access information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Format</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxFileSize" use="optional" default="20"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum size of a log file, in megabytes, before being rolled over; a value of 0 means no limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum log file size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxFiles" use="optional" default="2"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of log files that will be kept, before the oldest file is removed; a value of 0 means no limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum log files</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.log.access-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.log.access"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.proxyredirect"> 
        <xsd:annotation> 
            <xsd:documentation>Configures port redirection. HTTP Proxy Redirect is used when redirecting HTTP requests from a non-secure port (for example, 80) to an SSL-enabled secured port (for example, 443).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Proxy Redirect</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="httpPort" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>The (non-secure) port to redirect from. Incoming HTTP requests on this port are redirected to the specified HTTPS port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="httpsPort" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>The (secure) port to redirect to. Incoming HTTP requests that use the HTTP port are redirected to this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTPS port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>This attribute determines whether or not the server should redirect ports that are specified in this configuration element. The default is true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="optional" default="*" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The host name used for this proxy redirect. The server redirects HTTP requests only if the incoming request specifies a host name that matches this value. The default is * (all hosts).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.proxyredirect-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.proxyredirect"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.samesite"> 
        <xsd:annotation> 
            <xsd:documentation>An element that is configured within the httpEndpoint element so that the associated HTTP channel can consider SameSite configurations.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SameSite Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="lax" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of Lax, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'none' nor 'strict' configurations.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>List of samesite lax cookies</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="none" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of None, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'strict' configurations. Each cookie that is modified to contain a SameSite value of None as a result of this configuration is also set to Secure.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>List of samesite none cookies</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="strict" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>List of cookie names or patterns for which the SameSite attribute is set to a value of Strict, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'none' configurations.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>List of samesite strict cookies</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.samesite-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.samesite"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for an HTTP endpoint.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Endpoint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="httpOptions" type="com.ibm.ws.http.options"> 
                <xsd:annotation> 
                    <xsd:documentation>HTTP protocol options for the endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="remoteIp" type="com.ibm.ws.http.remoteip"> 
                <xsd:annotation> 
                    <xsd:documentation>Remote IP options for the endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Remote IP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="samesite" type="com.ibm.ws.http.samesite"> 
                <xsd:annotation> 
                    <xsd:documentation>SameSite options for the endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SameSite Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>SSL protocol options for the endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SSL Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>TCP protocol options for the endpoint. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="accessLogging" type="com.ibm.ws.http.log.access"> 
                <xsd:annotation> 
                    <xsd:documentation>HTTP access logging configuration for the endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP Access Logging</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="onError" use="optional" default="WARN"> 
            <xsd:annotation> 
                <xsd:documentation>Action to take after a failure to start an endpoint. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>On error</ext:label> 
                    <ext:variable>onError</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="WARN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAIL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle the availability of an endpoint. When true, this endpoint will be activated by the dispatcher to handle HTTP requests.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>IP address, domain name server (DNS) host name with domain name suffix, or just the DNS host name, used by a client to request a resource. Use '*' for all available network interfaces.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                    <ext:variable>defaultHostName</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpPort" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The port used for client HTTP requests. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="httpsPort" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The port used for client HTTP requests secured with SSL (https). Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="protocolVersion" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>When Servlet 4.0 API is enabled as a feature, set this attribute to http/1.1 to disable HTTP/2 processing for the ports that were defined for the httpEndpoint element. When Servlet 3.1 API is enabled as a feature, set this attribute to http/2 to enable HTTP/2 processing for the ports that are defined for the httpEndpoint element.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Protocol version</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpOptionsRef" use="optional" default="defaultHttpOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>HTTP protocol options for the endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP options reference</ext:label> 
                    <ext:reference>httpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="remoteIpRef" use="optional" default="defaultRemoteIp" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Remote IP options for the endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote IP options reference</ext:label> 
                    <ext:reference>remoteIp</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="samesiteRef" use="optional" default="defaultSameSite" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>SameSite options for the endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SameSite options reference</ext:label> 
                    <ext:reference>samesite</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslOptionsRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>SSL protocol options for the endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL options reference</ext:label> 
                    <ext:reference>sslOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>TCP protocol options for the endpoint. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessLoggingRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>HTTP access logging configuration for the endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP access logging reference</ext:label> 
                    <ext:reference>httpAccessLogging</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.options"> 
        <xsd:annotation> 
            <xsd:documentation>HTTP protocol configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="keepAliveEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables persistent connections (HTTP keepalive). If true, connections are kept alive for reuse by multiple sequential requests and responses. If false, connections are closed after the response is sent.    </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable persistent connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxKeepAliveRequests" use="optional" default="100"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of persistent requests that are allowed on a single HTTP connection if persistent connections are enabled. A value of -1 means unlimited.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum persistent requests per connection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="persistTimeout" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time that a socket will be allowed to remain idle between requests. This setting only applies if persistent connections are enabled. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persistent connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="readTimeout" use="optional" default="60s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait for a read request to complete on a socket after the first read occurs. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="writeTimeout" use="optional" default="60s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait on a socket for each portion of the response data to be transmitted. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="removeServerHeader" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Removes server implementation information from HTTP headers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remove server header</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="NoCacheCookiesControl" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allows the user to control whether or not the presence of a Set-Cookie header should update the Cache-Control header with a matching no-cache value. This also adds the Expires header.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>No cache cookies control</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="AutoDecompression" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the HTTP Channel automatically decompresses incoming request body data.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto decompression</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="limitNumHeaders" use="optional" default="500"> 
            <xsd:annotation> 
                <xsd:documentation>Limits the number of HTTP headers that can exist in an incoming message. When this limit is exceeded, an error is returned to the remote client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Limit number of headers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="50"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="500"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="limitFieldSize" use="optional" default="32768"> 
            <xsd:annotation> 
                <xsd:documentation>Enforces the size limits on various HTTP fields, such as request URLs, or individual header names or values. Enforcing the size limits of these fields guards against possible Denial of Service attacks. An error is returned to the remote client, if a field exceeds the allowed size.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Limit header field size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="50"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="32768"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="DoNotAllowDuplicateSetCookies" use="optional" default="false" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Prevents the HTTP Channel from sending multiple Set-Cookie headers with the same name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Do not allow duplicate set cookies</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="MessageSizeLimit" use="optional" default="-1" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Limits the acceptable size of an incoming message. If a message arrives with a size larger than this value, then an error is returned to the remote client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message size limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="incomingBodyBufferSize" use="optional" default="32768"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the size of each buffer used when reading the body of an incoming HTTP message.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Incoming body buffer size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1024"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="1048576"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="ThrowIOEForInboundConnections" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the HTTP channel creates an I/O exception when an inbound connection is closed while still in use by the servlet. The default value is set according to the configured servlet feature. Prior to Servlet 4.0, the default value is false; starting with Servlet 4.0, the default value is true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Throw I/O exception for inbound connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decompressionRatioLimit" use="optional" default="200"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum ratio of decompressed to compressed request body payload. The HTTP channel reads the request body and verifies the ratio as the body decompresses. The channel stops decompression of the request body if the decompression ratio remains above the configured value and the decompressionTolerance is reached.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decompression ratio limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decompressionTolerance" use="optional" default="3"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum number of times the HTTP channel tolerates a decompression ratio above the configured ratio, depicted by the decompressionRatioLimit httpOption attribute. If this number reaches, and the next decompression cycle still contains a decompression ratio above the ratio limit, then the HTTP channel stops decompressing the request body.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decompression tolerance</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="http2ConnectionIdleTimeout" use="optional" default="0" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the amount of time, in seconds, that an HTTP/2 connection will be allowed to remain idle between socket IO operations. If not specified, or set to a value of 0, there is no connection timeout set. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP/2 connection idle timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConcurrentStreams" use="optional" default="200" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum number of streams that an HTTP/2 connection can have active at any given point. Opening streams over the limit, will result on a REFUSED_STREAM (0x7). If not specified, the default value of concurrent streams will be set to 200.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max concurrent streams</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxFrameSize" use="optional" default="57344"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum allowed size of a frame payload the server will advertise in the SETTINGS_MAS_FRAME_SIZE HTTP/2 settings frame. This can be configured to any size within the range of 16,384 to 16,777,215 bytes, inclusive. If not specified, the default is set to 57,344 bytes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max frame size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="16384"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="16777215"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.options-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.options"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.remoteip"> 
        <xsd:annotation> 
            <xsd:documentation>An element configured within the httpEndpoint element so that the associated HTTP channel is enabled to consider X-Forwarded-* or Forwarded request headers.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Remote IP Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="proxies" use="optional" default="10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A regular expression that defines trusted proxies.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxies regex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useRemoteIpInAccessLog" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If this property is set to true and the remote client information was verified by the HTTP Channel, the NCSA access log reflects the Forwarded or X-Forwarded-* headers. These headers are reflected when one or more of the following items are recorded: the remote client IP, the host, or the request protocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use remote IP in access log</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.remoteip-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.remoteip"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.virtualhost"> 
        <xsd:annotation> 
            <xsd:documentation>A virtual host provides a logical grouping for configuring web applications to a particular host name. The default virtual host (default_host) is suitable for most simple configurations.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Virtual Host</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="hostAlias" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Associate a host and port with this virtual host, using the host:port syntax. The specified host can be an IP address, domain name server (DNS) hostname with a domain name suffix, the DNS hostname, or * for a wildcard match on all hostnames. Note that IPv6 addresses must be enclosed in [].</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Virtual host alias</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="allowFromEndpoint" type="com.ibm.ws.http-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the identifier of one or more HTTP endpoints to restrict inbound traffic for this virtual host to the specified endpoints.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Allow From Endpoints</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable this virtual host.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowFromEndpointRef" use="optional" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the identifier of one or more HTTP endpoints to restrict inbound traffic for this virtual host to the specified endpoints.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow from endpoints</ext:label> 
                    <ext:reference>httpEndpoint</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.http.virtualhost-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.http.virtualhost"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.ORBWrapper"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a server or client ORB. Specify either the nameService attribute for a client ORB or one or more iiopEndpoint references for a server ORB.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Object Request Broker (ORB)</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="iiopEndpoint" type="com.ibm.ws.transport.iiop.internal.IIOPEndpointImpl-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Optional IIOP Endpoint describing the ports open for this ORB</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>IIOP Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="clientPolicy.csiv2" type="com.ibm.ws.security.csiv2.clientPolicyCSIV2-factory"> 
            </xsd:element> 
            <xsd:element name="clientPolicy.clientContainerCsiv2" type="com.ibm.ws.security.csiv2.clientContainer.clientPolicyCSIV2-factory"> 
            </xsd:element> 
            <xsd:element name="serverPolicy.csiv2" type="com.ibm.ws.security.csiv2.serverPolicyCSIV2-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="nameService" use="optional" default="corbaname::localhost:2809" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Optional URL for the remote name service, for example corbaname::localhost:2809</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Naming context location for a client ORB</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="orbSSLInitTimeout" use="optional" default="10" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>ORB SSL initialization timeout specified in seconds</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout that governs ORB SSL initialization</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="iiopEndpointRef" use="optional" default="defaultIiopEndpoint" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>Optional IIOP Endpoint describing the ports open for this ORB</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IIOP endpoint reference for a server ORB</ext:label> 
                    <ext:reference>iiopEndpoint</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.ORBWrapper-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.transport.iiop.internal.ORBWrapper"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.ServerPolicySourceImpl"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for IIOP server policies</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>IIOP Server Policies</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="serverPolicy.csiv2" minOccurs="0" maxOccurs="100" type="com.ibm.ws.security.csiv2.serverPolicyCSIV2-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.ServerPolicySourceImpl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.transport.iiop.internal.ServerPolicySourceImpl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.IIOPEndpointImpl"> 
        <xsd:annotation> 
            <xsd:documentation>IIOP Endpoint configuration</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>IIOP Endpoint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>TCP protocol options for the IIOP endpoint </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="iiopsOptions" type="com.ibm.ws.transport.iiop.security.IiopsOptions-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specification of a secured server socket opened by this IIOP endpoint</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>IIOPS Port And Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="host" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>IP address, domain name server (DNS) host name with domain name suffix, or just the DNS host name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                    <ext:variable>defaultHostName</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="iiopPort" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port for the unsecured server socket opened by this IIOP endpoint</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IIOP port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>TCP protocol options for the IIOP endpoint </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transport.iiop.internal.IIOPEndpointImpl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.transport.iiop.internal.IIOPEndpointImpl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jaxrs20.common.clientConfig"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties to be applied to JAX-RS WebTargets that match the specified URI when they are constructed.  A property specified programmatically after object construction takes precedence over a property declared in xml.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JAX-RS Client Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="uri" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URI specified in application code. If the URI matches the URI in code, the properties are applied to that WebTarget.  If the URI ends with *, then its  properties are applied to any WebTarget having a URI that begins with the specified URI.  If more than one URI ending with * matches a WebTarget URI, all are applied in sorted order of URI.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionTimeout" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>The amount of time to wait in milliseconds for a connection to be made.  This is equivalent to the com.ibm.ws.jaxrs.client.timeout programmatic property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="receiveTimeout" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>The amount of time to wait in milliseconds for a response after a connection is established. This is equivalent to the com.ibm.ws.jaxrs.client.receive.timeout programmatic property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Receive timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyHost" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The host name of the proxy server.  This is equivalent to the com.ibm.ws.jaxrs.client.proxy.host programmatic property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyPort" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The port of the proxy server.  This is equivalent to the com.ibm.ws.jaxrs.client.proxy.port programmatic property .  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The port of the proxy server.  This is equivalent to the com.ibm.ws.jaxrs.client.proxy.port programmatic property .  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableCNCheck" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disables the Common Name Check.  Valid values are true or false.   This is equivalent to the com.ibm.ws.jaxrs.client.disableCNCheck programmatic property .</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable common name check</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authnToken" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The type of authorization token to use.  This must be ltpa, saml, or oauth.  This is equivalent to specifying one of the com.ibm.ws.jaxrs.client.ltpa.handler, com.ibm.ws.jaxrs.client.saml.sendToken, or com.ibm.ws.jaxrs.client.oauth.sendToken programmatic properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Type of authorization token to use</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslConfig" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An id of an ssl reference found in server.xml.  That ssl configuration specified by that reference is used.    </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The id of an ssl reference in server.xml</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="other" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Any other variables can also be specified and will be passed to the WebTarget intact. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Any other variables</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jaxrs20.common.clientConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jaxrs20.common.clientConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.embeddedResourceAdapter"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies configuration for a resource adapter that is embedded in an application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:action elemPrefix="properties." idAttr="${parent.name}.${id}" alternateIdAttr="${parent.name}.${alias}" type="generateSchema"/> 
                <ext:label>Resource Adapter</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="contextService" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>Configures how context is captured and propagated to threads.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Thread Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="customize" type="com.ibm.ws.jca.embeddedResourceAdapter.customize"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="alias" use="optional" default="${id}" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Overrides the default identifier for the resource adapter. The identifier is used in the name of the resource adapter's configuration properties element, which in turn is used in determining the name of configuration properties elements for any resources provided by the resource adapter. The resource adapter's configuration properties element name has the format, properties.&lt;APP_NAME&gt;.&lt;ALIAS&gt;, where &lt;APP_NAME&gt; is the name of the application and &lt;ALIAS&gt; is the configured alias. If unspecified, the alias defaults to the module name of the resource adapter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies the name of the embedded resource adapter module to which this configuration applies. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether a resource adapter starts automatically upon deployment of the resource adapter or lazily upon injection or lookup of a resource. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextServiceRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures how context is captured and propagated to threads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Thread context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.embeddedResourceAdapter-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.embeddedResourceAdapter"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.resourceAdapter"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a resource adapter installation.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:action elemPrefix="properties." idAttr="${id}" alternateIdAttr="${location}" type="generateSchema"/> 
                <ext:label>Resource Adapter</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
            <xsd:element name="appProperties" type="com.ibm.ws.appconfig.appProperties"> 
            </xsd:element> 
            <xsd:element name="customize" type="com.ibm.ws.jca.resourceAdapter.customize"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the path of the RAR file to install.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>RAR file path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether a resource adapter starts automatically upon deployment of the resource adapter or lazily upon injection or lookup of a resource. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.resourceAdapter-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.resourceAdapter"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.adminObject"> 
        <xsd:annotation> 
            <xsd:documentation>Defines an administered object configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:action type="generateSchema"/> 
                <ext:label>Administered Object</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:sequence> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.adminObject-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.adminObject"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.activationSpec"> 
        <xsd:annotation> 
            <xsd:documentation>Defines an activation specification configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:action type="generateSchema"/> 
                <ext:label>Activation Specification</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for an activation specification.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="authDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for an activation specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxEndpoints" use="optional" default="500"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of endpoints to dispatch to.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum endpoints</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether the message endpoints associated with this activation specification start automatically or need to be manually started using the resume command.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.activationSpec-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.activationSpec"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.resourceAdapter.customize"> 
        <xsd:annotation> 
            <xsd:documentation>Customizes the configuration properties element for the activation specification, administered object, or connection factory with the specified interface and/or implementation class.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Properties Customization</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="implementation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified implementation class name for which the configuration properties element should be customized.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Implementation class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="interface" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified interface class name for which the configuration properties element should be customized.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interface class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suffix" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Overrides the default suffix for the configuration properties element. For example, "CustomConnectionFactory" in properties.rarModule1.CustomConnectionFactory. The suffix is useful to disambiguate when multiple types of connection factories, administered objects, or endpoint activations are provided by a resource adapter. If a configuration properties element customization omits the suffix or leaves it blank, no suffix is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suffix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.resourceAdapter.customize-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.resourceAdapter.customize"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.connectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a connection factory configuration. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:action type="generateSchema"/> 
                <ext:label>Connection Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager"> 
                <xsd:annotation> 
                    <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Connection Manager</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:annotation> 
                    <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Context Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="recoveryAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Recovery Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="connectionManagerRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection manager reference</ext:label> 
                    <ext:reference>connectionManager</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Container managed authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jaasLoginContextEntryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JAAS login context entry reference</ext:label> 
                    <ext:reference>jaasLoginContextEntry</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recovery authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.connectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.connectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.embeddedResourceAdapter.customize"> 
        <xsd:annotation> 
            <xsd:documentation>Customizes the configuration properties element for the activation specification, administered object, or connection factory with the specified interface and/or implementation class.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Properties Customization</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="implementation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified implementation class name for which the configuration properties element should be customized.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Implementation class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="interface" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Fully qualified interface class name for which the configuration properties element should be customized.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interface class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suffix" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Overrides the default suffix for the configuration properties element. For example, "CustomConnectionFactory" in properties.rarModule1.CustomConnectionFactory. The suffix is useful to disambiguate when multiple types of connection factories, administered objects, or endpoint activations are provided by a resource adapter. If a configuration properties element customization omits the suffix or leaves it blank, no suffix is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suffix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.embeddedResourceAdapter.customize-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.embeddedResourceAdapter.customize"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsActivationSpec"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS activation specification configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Activation Specification</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for an activation specification.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsActivationSpec.properties.wasJms.javax.jms.MessageListener"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="authDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for an activation specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxEndpoints" use="optional" default="500"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of endpoints to dispatch to.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum endpoints</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether the message endpoints associated with this activation specification start automatically or need to be manually started using the resume command.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsActivationSpec-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsActivationSpec"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopicConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS topic connection factory configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Topic Connection Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager"> 
                <xsd:annotation> 
                    <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Connection Manager</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:annotation> 
                    <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Context Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="recoveryAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Recovery Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsTopicConnectionFactory.properties.wasJms.javax.jms.TopicConnectionFactory"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="connectionManagerRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection manager reference</ext:label> 
                    <ext:reference>connectionManager</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Container managed authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jaasLoginContextEntryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JAAS login context entry reference</ext:label> 
                    <ext:reference>jaasLoginContextEntry</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recovery authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopicConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsTopicConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueue"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS queue configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Queue</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsQueue.properties.wasJms.javax.jms.Queue-com.ibm.ws.sib.api.jms.impl.JmsQueueImpl"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueue-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsQueue"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueueConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS queue connection factory configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Queue Connection Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager"> 
                <xsd:annotation> 
                    <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Connection Manager</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:annotation> 
                    <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Context Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="recoveryAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Recovery Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsQueueConnectionFactory.properties.wasJms.javax.jms.QueueConnectionFactory"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="connectionManagerRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection manager reference</ext:label> 
                    <ext:reference>connectionManager</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Container managed authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jaasLoginContextEntryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JAAS login context entry reference</ext:label> 
                    <ext:reference>jaasLoginContextEntry</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recovery authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueueConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsQueueConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopic"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS topic configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Topic</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsTopic.properties.wasJms.javax.jms.Topic-com.ibm.ws.sib.api.jms.impl.JmsTopicImpl"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopic-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsTopic"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsDestination"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS destination configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Destination</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:sequence> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsDestination-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsDestination"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a JMS connection factory configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JMS Connection Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager"> 
                <xsd:annotation> 
                    <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Connection Manager</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:annotation> 
                    <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Context Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="recoveryAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Recovery Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties.wasJms" type="com.ibm.ws.jca.jmsConnectionFactory.properties.wasJms.javax.jms.ConnectionFactory"> 
            </xsd:element> 
            <xsd:any processContents="skip" minOccurs="0" maxOccurs="1"/> 
        </xsd:choice> 
        <xsd:attribute name="connectionManagerRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Connection manager for a connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection manager reference</ext:label> 
                    <ext:reference>connectionManager</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Container managed authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jaasLoginContextEntryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JAAS login context entry reference</ext:label> 
                    <ext:reference>jaasLoginContextEntry</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recovery authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javamail.mailSession"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a Mail Session Instance.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Mail Session Object</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.javamail.mailSession.property-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="mailSessionID" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The ID of the specific Mail Session Instance</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Mail session ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the Mail Session reference that is used for JNDI look-up	</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The JNDI look up name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="description" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Description of the Mail Session</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Description of the mailSession</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="storeProtocol" use="optional" default="imap" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The Store Protocol used by the Mail Session instance. The default store protocol is IMAP</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The store protocol for javax.mail.Session</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transportProtocol" use="optional" default="smtp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The Transport Protocol used by the Mail Session instance. The default transport protocol is SMTP</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The transport protocol for javax.mail.Session</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The host of the Mail Session</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The mail server's host address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The User's e-mail address used on the Host. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The user account</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The User's password, usually needed in order to connect to the host.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The user's password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="from" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The E-Mail address used to send mail with the Mail Session instance.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The from address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javamail.mailSession-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javamail.mailSession"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javamail.mailSession.property"> 
        <xsd:annotation> 
            <xsd:documentation>Any additional properties that need to be added to the config</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Nested Property</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the extra property</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The name of the additional property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the property that matches the name</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The value of the addtional property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javamail.mailSession.property-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javamail.mailSession.property"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.java2sec.policyConfig"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration of permissions for Java 2 Security. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Java 2 Security</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="className" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the class implementing the permission being granted. For example, java.io.FilePermission.   </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Permission class</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="codebase" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The codebase that is being granted the permission.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Codebase</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="principalType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The class name that would be matched for the given Principal Name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Principal class</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="principalName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The principal to whom the permission is being granted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Principal name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The target for which the permission applies to.  For example, ALL FILES in the case of a java.io.FilePermission.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Target name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="actions" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The actions that the permission grant allows on the target name.  For example, read in the case of a java.io.FilePermission.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Actions</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="restriction" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Declares whether the permission is being restricted versus granted.  If restriction is set to "true" then this permission is denied as opposed to being granted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Restriction</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.java2sec.policyConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.java2sec.policyConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.WebBnd"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies binding properties for a web application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Application Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="virtual-host" type="com.ibm.ws.javaee.dd.webbnd.VirtualHost"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the virtual host that is used for the web application.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Virtual Host</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="moduleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.WebBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.webbnd.WebBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestination"> 
        <xsd:annotation> 
            <xsd:documentation>A logical name used to locate a message destination.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Message Destination</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the message destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name of the message destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestination-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.MessageDestination"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EnvEntry"> 
        <xsd:annotation> 
            <xsd:documentation>Defines an environment entry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Environment Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the environment entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the environment entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name for the environment entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.EnvEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.BeanCache"> 
        <xsd:annotation> 
            <xsd:documentation>Cache settings for an EJB.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Bean Cache</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="activation-policy" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the point at which an EJB is placed in the cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Activation policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="TRANSACTION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ONCE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ONCE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.BeanCache-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.BeanCache"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies properties for the JCA adapter. A message driven bean must have a JCA adapter defined. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JCA Adapter</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="activation-spec-binding-name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the binding name for an activation specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Activation specification binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="activation-spec-auth-alias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication alias for an activation specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Activation specification authentication alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="destination-binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the destination binding name for a JCA adapter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Destination binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties that apply to application bindings.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="security-role" type="com.ibm.ws.javaee.dd.appbnd.SecurityRole-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A role that is mapped to users and groups in a domain user registry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Security Role</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.ApplicationBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias"> 
        <xsd:annotation> 
            <xsd:documentation>An authentication alias for a resource reference.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authentication Alias</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="name" minOccurs="0" maxOccurs="1" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>The authentication alias name. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="nameRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The authentication alias name. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceRef"> 
        <xsd:annotation> 
            <xsd:documentation>Used to declare additional settings on a Java EE resource reference.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Resource Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authentication-alias" type="com.ibm.ws.javaee.dd.commonbnd.AuthenticationAlias"> 
                <xsd:annotation> 
                    <xsd:documentation>The authentication alias for the resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Alias</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="custom-login-configuration" type="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies custom login configuration properties.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom Login</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the resource reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name for the resource reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.ResourceRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.MimeFilter"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a mime filter for a web application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Mime Filter</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="target" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The target for the mime filter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Target</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mime-type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The type for the mime filter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Mime type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.MimeFilter-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.MimeFilter"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SecurityRole"> 
        <xsd:annotation> 
            <xsd:documentation>A role that is mapped to users and groups in a domain user registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Security Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.javaee.dd.appbnd.User-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The user for a security role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.javaee.dd.appbnd.Group-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The group for a security role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="special-subject" type="com.ibm.ws.javaee.dd.appbnd.SpecialSubject-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Name of a special subject possessing a security role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Special Subject</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="run-as" type="com.ibm.ws.javaee.dd.appbnd.RunAs"> 
                <xsd:annotation> 
                    <xsd:documentation>ID and password of a user that is required to access a bean from another bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Run As</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for a security role. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SecurityRole-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.SecurityRole"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.User"> 
        <xsd:annotation> 
            <xsd:documentation>The user for the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The access ID for a subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.User-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.User"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup"> 
        <xsd:annotation> 
            <xsd:documentation>Reference bindings in an application client.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Client Reference Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>EJB References in an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Resource references in an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Message destination reference in an application client.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Message Destination References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines a data source for an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines an environment entry for an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.clientbnd.ClientRefBindingsGroup"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a custom login configuration for a resource reference.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Custom Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.javaee.dd.commonbnd.Property-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines a property for a custom login configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A name for the custom login configuration. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.CustomLoginConfiguration"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.MessageDriven"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies properties for message driven beans.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Message Driven Bean</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache"> 
                <xsd:annotation> 
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Bean Cache</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Local Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Global Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart"> 
                <xsd:annotation> 
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Start At Application Start</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.MessageDriven-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.MessageDriven"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBean"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties for a managed bean.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Managed Bean</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="class" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the class name for a managed bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Class</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBean-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.managedbean.ManagedBean"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.Attribute"> 
        <xsd:annotation> 
            <xsd:documentation>Attributes consisting of a name value pair.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Attributes</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The attribute name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The attribute value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.Attribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.Attribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties for reference bindings.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Reference Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.RefBindingsGroup"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the bindings for a managed bean.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Managed Bean Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="interceptor" type="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines interceptors for the managed bean binding.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Interceptors</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="managed-bean" type="com.ibm.ws.javaee.dd.managedbean.ManagedBean-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the managed bean for this binding.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Managed Beans</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="moduleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.managedbean.ManagedBeanBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.LocalTransaction"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a local transaction for a servlet or an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Location Transaction</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="resolver" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Defines a resolver for the local transaction. The value can be either APPLICATION or CONTAINER_AT_BOUNDARY. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Resolver</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="CONTAINER_AT_BOUNDARY"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CONTAINER_AT_BOUNDARY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="APPLICATION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>APPLICATION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="unresolved-action" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the behavor for unresolved actions. The value can be either ROLLBACK or COMMIT.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unresolved action</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="COMMIT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ROLLBACK"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROLLBACK</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="shareable" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines whether the local transaction is shareable.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shareable</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.LocalTransaction-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.LocalTransaction"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.Session"> 
        <xsd:annotation> 
            <xsd:documentation>Properties for a session bean in an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Session</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache"> 
                <xsd:annotation> 
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Bean Cache</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Local Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Global Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart"> 
                <xsd:annotation> 
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Start At Application Start</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="time-out" type="com.ibm.ws.javaee.dd.ejbext.TimeOut"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a time out value for the session bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Time Out</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.Session-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.Session"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
        <xsd:annotation> 
            <xsd:documentation>Extension properties for EJB applications.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Jar Extensions</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="session" type="com.ibm.ws.javaee.dd.ejbext.Session-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Extension properties for session beans.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Session Bean Extensions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-driven" type="com.ibm.ws.javaee.dd.ejbext.MessageDriven-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Extension properties for message driven beans.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Driven Bean Extensions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="moduleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EJBJarExt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.EJBJarExt"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.ResourceRef"> 
        <xsd:annotation> 
            <xsd:documentation>Used to declare additional settings on a Java EE resource reference.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Resource Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the resource reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isolation-level" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the transaction isolation level.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Isolation level</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="TRANSACTION_READ_COMMITTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION_READ_COMMITTED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_SERIALIZABLE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION_SERIALIZABLE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_REPEATABLE_READ"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION_REPEATABLE_READ</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_READ_UNCOMMITTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION_READ_UNCOMMITTED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_NONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TRANSACTION_NONE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="commit-priority" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the commit priority for the resource reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Commit priority</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="branch-coupling" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether loose or tight coupling is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Branch coupling</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="LOOSE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>LOOSE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TIGHT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TIGHT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.ResourceRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Property"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a custom login configuration property.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Property</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="description" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A description of the property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Description</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Property-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.Property"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties for a resource environment reference.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Resource Environment Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the resource environment reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name for the resource environment reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies properties for message driven beans.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Message Driven Bean</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jca-adapter" type="com.ibm.ws.javaee.dd.ejbbnd.JCAAdapter"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines a JCA adapter for a message driven bean.  </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JCA Adapter</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Group"> 
        <xsd:annotation> 
            <xsd:documentation>Group that has the security role. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The access ID for a subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Group-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.Group"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SpecialSubject"> 
        <xsd:annotation> 
            <xsd:documentation>Special subject that has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Special Subject</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="type" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>One of the following special subject types: ALL_AUTHENTICATED_USERS, EVERYONE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ALL_AUTHENTICATED_USERS"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ALL_AUTHENTICATED_USERS</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="EVERYONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>EVERYONE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.SpecialSubject-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.SpecialSubject"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.TimeOut"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies a session bean time out value.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Time Out</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="value" use="optional" default="0" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The value for the time out. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.TimeOut-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.TimeOut"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.VirtualHost"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the virtual host used by this web application. The virtual host must be defined in the configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Virtual Host</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the virtual host</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webbnd.VirtualHost-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.webbnd.VirtualHost"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EJBRef"> 
        <xsd:annotation> 
            <xsd:documentation>A logical name used to locate the home interface of an enterprise bean.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB References</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the EJB reference. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name for the EJB reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.EJBRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
        <xsd:annotation> 
            <xsd:documentation>The EJB binding descriptor defines binding information for an EJB module. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Jar Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="session" type="com.ibm.ws.javaee.dd.ejbbnd.Session-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Binding properties for session beans.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Session Bean Bindings</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-driven" type="com.ibm.ws.javaee.dd.ejbbnd.MessageDriven-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Binding properties for message driven beans.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Driven Bean Bindings</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="interceptor" type="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Binding properties for interceptors.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Interceptor Bindings</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestination-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Binding properties for message destinations.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destination Bindings</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="moduleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.EJBJarBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean"> 
        <xsd:annotation> 
            <xsd:documentation>A description of an enterprise bean in an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Enterprise Bean</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.EnterpriseBean"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.GlobalTransaction"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies properties for a global transaction.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Global Transaction</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="send-wsat-context" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether to send the web services atomic transaction on outgoing requests.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send WSAT context</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transaction-time-out" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the timeout for the global transaction.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.GlobalTransaction-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.GlobalTransaction"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef"> 
        <xsd:annotation> 
            <xsd:documentation>A logical name used to locate a message destination.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Message Destination Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the message destination reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The binding name for the message destination reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.Method"> 
        <xsd:annotation> 
            <xsd:documentation>Used to specify the method name, method signature, or method types to which a given setting might apply.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Method</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name for the method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="params" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies parameters for the method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Parameters</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="type" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the type of the method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="LOCAL_HOME"> 
                                <xsd:annotation> 
                                    <xsd:documentation>LOCAL_HOME</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REMOTE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>REMOTE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="UNSPECIFIED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>UNSPECIFIED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SERVICE_ENDPOINT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SERVICE_ENDPOINT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="LOCAL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>LOCAL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HOME"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HOME</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonext.Method-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonext.Method"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties to extend applications.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Extensions</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="shared-session-context" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether the session context is shared between modules.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared session context</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appext.ApplicationExt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appext.ApplicationExt"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean"> 
        <xsd:annotation> 
            <xsd:documentation>A description of an enterprise bean in an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Enterprise Bean</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="bean-cache" type="com.ibm.ws.javaee.dd.ejbext.BeanCache"> 
                <xsd:annotation> 
                    <xsd:documentation>Cache settings for an EJB.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Bean Cache</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="local-transaction" type="com.ibm.ws.javaee.dd.commonext.LocalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies local transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Local Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="global-transaction" type="com.ibm.ws.javaee.dd.commonext.GlobalTransaction"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies global transactions for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Global Transactions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies resource references for this enterprise bean.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="start-at-app-start" type="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart"> 
                <xsd:annotation> 
                    <xsd:documentation>Controls whether the bean starts at application start.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Start At Application Start</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.EnterpriseBean"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Subject"> 
        <xsd:annotation> 
            <xsd:documentation>Properties for a user or group.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Subject</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The access ID for a subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.Subject-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.Subject"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"> 
        <xsd:annotation> 
            <xsd:documentation>Defines properties that apply to application clients.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Clients</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>EJB References in an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Resource references in an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Message destination reference in an application client.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Message Destination References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines a data source for an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines an environment entry for an application client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Client Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.clientbnd.ApplicationClientBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.DataSource"> 
        <xsd:annotation> 
            <xsd:documentation>The definition of a data source.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Data Sources</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The data source name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The data source binding name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.DataSource"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart"> 
        <xsd:annotation> 
            <xsd:documentation>Used to inform the EJB container that the specified EJB type can be initialized at the time the application is first started, rather than the time the EJB type is first used by the application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Start At Application Start</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="value" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the start at application start property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbext.StartAtAppStart"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Interceptor"> 
        <xsd:annotation> 
            <xsd:documentation>The name for the interceptor.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Name</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="class" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The class name for the interceptor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.commonbnd.Interceptor-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.commonbnd.Interceptor"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.WebExt"> 
        <xsd:annotation> 
            <xsd:documentation>Extension properties for web applications.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Application Extensions</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="file-serving-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies whether the web application allows files to be served.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>File Serving Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="invoker-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies attributes for an invoker.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Invoker Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jsp-attribute" type="com.ibm.ws.javaee.dd.webext.Attribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies attributes that affect JSP behavior.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JSP Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="mime-filter" type="com.ibm.ws.javaee.dd.webext.MimeFilter-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Properties for a MIME filter.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Mime Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonext.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Properties for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="moduleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The module name specifies the individual module that the binding or extension configuration applies to.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Module name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="default-error-page" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a page to be used as the default error page for a web application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default error page URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="context-root" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the context root for a web application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoload-filters" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether filters are loaded automatially.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto load filters</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="auto-encode-requests" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether requests are automatically encoded.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto encode requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="auto-encode-responses" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether responses are automatically encoded.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto encode responses</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enable-directory-browsing" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether directory browsing is enabled for this web application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable directory browsing</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enable-file-serving" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether file serving is enabled for this web application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable file serving</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pre-compile-jsps" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether JSP pages are compiled when the web application starts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Pre-compile JSPs</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enable-serving-servlets-by-class-name" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables serving servlets by classname.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable serving servlets by class names</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.webext.WebExt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.webext.WebExt"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.RunAs"> 
        <xsd:annotation> 
            <xsd:documentation>ID and password of a user required to access a bean from another bean.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Run As</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userid" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>ID of a user required to access a bean from another bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password of a user required to access a bean from another bean. The value can be stored in clear text or encoded form. To encode the password, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.appbnd.RunAs-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.appbnd.RunAs"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Session"> 
        <xsd:annotation> 
            <xsd:documentation>Properties for a session bean in an EJB application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Session</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="ejb-ref" type="com.ibm.ws.javaee.dd.commonbnd.EJBRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an EJB Reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource-env-ref" type="com.ibm.ws.javaee.dd.commonbnd.ResourceEnvRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a resource environment reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource Environment References</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="message-destination-ref" type="com.ibm.ws.javaee.dd.commonbnd.MessageDestinationRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a message destination reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Message Destinations</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="data-source" type="com.ibm.ws.javaee.dd.commonbnd.DataSource-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for a data source.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Sources</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="env-entry" type="com.ibm.ws.javaee.dd.commonbnd.EnvEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the binding for an environment entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Environment Entries</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name for the enterprise bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="simple-binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the simple binding name for a session bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Simple binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="component-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The component ID for a session bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Component ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="remote-home-binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The remote home binding name for a session bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote home binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="local-home-binding-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The local home binding name for a session bean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Local home binding name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.dd.ejbbnd.Session-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.dd.ejbbnd.Session"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.Port"> 
        <xsd:annotation> 
            <xsd:documentation>A port element defines port configurations associated with a web services reference. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Port</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="properties" minOccurs="0" maxOccurs="1" type="com.ibm.ws.javaee.ddmodel.wsbnd.Properties"> 
                <xsd:annotation> 
                    <xsd:documentation>The properties element is used to define the properties for a web services endpoint or client. The attributes can have any name and any value. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The port name is used to specify the name of the web services port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="namespace" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The namespace attribute is used to specify the namespace of the web services port. The binding is applied to the port that has the same name and namespace. Otherwise, the binding is applied to the port that has the same name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Namespace</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="address" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The address attribute is used to specify the address for the web services port and override the value of port-address attribute that is defined in the service-ref element.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The user name attribute is used to specify the user name for basic authentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The password attribute is used to specify the password for basic authentication. The password can be encoded.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssl-ref" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The SSL reference attribute refers to an ssl element defined in the server.xml file. If the attribute is not specified but the server supports transport level security the service client uses the default SSL configuration.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="key-alias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The key alias attribute is used to specify the alias of a client certificate. If the attribute is not specified and the web service provider supports the client certificate then the first certificate in the keystore is used as the value of this attribute. The attribute can also override the clientKeyAlias attribute that is defined in the ssl element of the server.xml file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.Port-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.Port"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.SecurityConstraint"> 
        <xsd:annotation> 
            <xsd:documentation>Security constraint attributes are used to associate security constraints with one or more web resource collections. Security constraints only work as complementary configuration to the deployment descriptors or annotations in web applications.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Security Constraint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="web-resource-collection" type="com.ibm.ws.javaee.ddmodel.common.WebResourceCollection-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The web resource collection element is used to identify resources for a security constraint. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Web Resource Collection</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="auth-constraint" type="com.ibm.ws.javaee.ddmodel.common.AuthConstraint"> 
                <xsd:annotation> 
                    <xsd:documentation>The authorization constraint element is used to specify the user roles that should be permitted access a resource collection.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authorization Constraint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="user-data-constraint" type="com.ibm.ws.javaee.ddmodel.common.UserDataConstraint"> 
                <xsd:annotation> 
                    <xsd:documentation>The user data constraint element is used to define how data communicated between the client and a container should be protected.		</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User Data Constraint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.SecurityConstraint-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.web.common.SecurityConstraint"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceSecurity"> 
        <xsd:annotation> 
            <xsd:documentation>The web service security element is used to configure role-based authorization for POJO web services and EJB-based web services.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Service Security</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="security-constraint" type="com.ibm.ws.javaee.ddmodel.web.common.SecurityConstraint"> 
                <xsd:annotation> 
                    <xsd:documentation>Security constraint attributes are used to associate security constraints with one or more web resource collections. Security constraints only work as complementary configuration to the deployment descriptors or annotations in web applications.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Security Constraint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="login-config" type="com.ibm.ws.javaee.ddmodel.web.common.LoginConfig"> 
                <xsd:annotation> 
                    <xsd:documentation>A login configuration attribute is used to configure the authentication method and realm name, and takes effect only for the EJB-based web services in a JAR file. If the same attribute is specified in the deployment descriptor file, the value from the deployment descriptor is used. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Login</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="security-role" type="com.ibm.ws.javaee.ddmodel.common.SecurityRole"> 
                <xsd:annotation> 
                    <xsd:documentation>A security role attribute contains the definition of a security role. It only works as complementary configuration to the deployment descriptors or annotations in web applications.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Security Role</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceSecurity-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceSecurity"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.SecurityRole"> 
        <xsd:annotation> 
            <xsd:documentation>A security role attribute contains the definition of a security role. It only works as complementary configuration to the deployment descriptors or annotations in web applications.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Security Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="role-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The role name for an authorization constraint should correspond with the role name of a security role defined in the deployment descriptor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.SecurityRole-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.common.SecurityRole"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpointProperties"> 
        <xsd:annotation> 
            <xsd:documentation>Web service endpoint properties are used to define the default properties for all the web services endpoints in the same module.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Service Endpoint Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>[extraProperties.com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpointProperties.description, extraProperties.description]</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpointProperties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpointProperties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.Properties"> 
        <xsd:annotation> 
            <xsd:documentation>The properties element is used to define the properties for a web services endpoint or client. The attributes can have any name and any value. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional properties for a web services endpoint or client</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.Properties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.Properties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.UserDataConstraint"> 
        <xsd:annotation> 
            <xsd:documentation>The user data constraint element is used to define how data communicated between the client and a container should be protected.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Data Constraint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="transport-guarantee" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The transport guarantee specifies how communication between the client and should take place. If the value is INTEGRAL, the application requires that the data should not change in transit. If the value is CONFIDENTIAL, data should be confidential in transit. The value of NONE indicates that there is not transport guarantee.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transport guarantee</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.UserDataConstraint-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.common.UserDataConstraint"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.LoginConfig"> 
        <xsd:annotation> 
            <xsd:documentation>A login configuration attribute is used to configure the authentication method and realm name, and takes effect only for the EJB-based web services in a JAR file. If the same attribute is specified in the deployment descriptor file, the value from the deployment descriptor is used.	</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="form-login-config" minOccurs="0" maxOccurs="1" type="com.ibm.ws.javaee.ddmodel.web.common.FormLoginConfig"> 
                <xsd:annotation> 
                    <xsd:documentation>The form login configuration element specifies the login and error pages that should be used in form based login. If form based authentication is not used, these elements are ignored.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Form Login</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="auth-method" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The authorization method is used to configure the authentication mechanism for a web application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realm-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The realm name element specifies the realm name to use in HTTP Basic authorization	</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.LoginConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.web.common.LoginConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.HttpPublishing"> 
        <xsd:annotation> 
            <xsd:documentation>HTTP publishing is used to specify the publishing configurations when using HTTP protocol for all the web services endpoints. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Publishing</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="webservice-security" minOccurs="0" maxOccurs="1" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceSecurity"> 
                <xsd:annotation> 
                    <xsd:documentation>The web service security element is used to configure role-based authorization for POJO web services and EJB-based web services.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Web Service Security</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="context-root" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The context root attribute is used to specify the context root of the EJB module in an EJB-based JAX-WS application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.HttpPublishing-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.HttpPublishing"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.AuthConstraint"> 
        <xsd:annotation> 
            <xsd:documentation>The authorization constraint element is used to specify the user roles that should be permitted access a resource collection.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authorization Constraint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="role-name" minOccurs="0" maxOccurs="unbounded" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The role name for an authorization constraint should correspond with the role name of a security role defined in the deployment descriptor.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Role name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.AuthConstraint-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.common.AuthConstraint"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.FormLoginConfig"> 
        <xsd:annotation> 
            <xsd:documentation>The form login configuration element specifies the login and error pages that should be used in form based login. If form based authentication is not used, these elements are ignored.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Form Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="form-login-page" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The form login page element defines the location in the web app where the page that can be used for login can be found. The path begins with a leading / and is interpreted relative to the root of the WAR.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Form login page</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="form-error-page" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The form-error-page element defines the location in the web app where the error page that is displayed when login is not successful can be found. The path begins with a leading / and is interpreted relative to the root of the WAR.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Form error page</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.web.common.FormLoginConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.web.common.FormLoginConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.WebResourceCollection"> 
        <xsd:annotation> 
            <xsd:documentation>The web resource collection element is used to identify resources for a security constraint. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Resource Collection</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="url-pattern" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A URL pattern is used to identify a set of resources in a web resource collection.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>URL pattern</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="http-method" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the HTTP method to which a security constraint applies	</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP method</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="http-method-omission" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies an HTTP method to which a security constraint should not apply</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP method omission</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="web-resource-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of a web resource collection	</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Web resource name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.common.WebResourceCollection-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.common.WebResourceCollection"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd"> 
        <xsd:annotation> 
            <xsd:documentation>Web service bindings are used to customize web services endpoints and configure security settings for both web services providers and web service clients. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Service Bindings</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="webservice-endpoint" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpoint-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A web service endpoint is used to specify the binding for a specified service instance. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Web Service Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="webservice-endpoint-properties" type="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpointProperties-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Web service endpoint properties are used to define the default properties for all the web services endpoints in the same module.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Web Service Endpoint Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="http-publishing" type="com.ibm.ws.javaee.ddmodel.wsbnd.HttpPublishing-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>HTTP publishing is used to specify the publishing configurations when using HTTP protocol for all the web services endpoints. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP Publishing</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="service-ref" type="com.ibm.ws.javaee.ddmodel.wsbnd.ServiceRef-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The service reference element is used to define the web services reference configurations for a web services client. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Service Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.WebservicesBnd"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpoint"> 
        <xsd:annotation> 
            <xsd:documentation>A web service endpoint is used to specify the binding for a specified service instance.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Service Endpoint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="port-component-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The port component name is used to specify the name of a port component.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port component</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="address" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Address is used to specify the overridden address of a service endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpoint-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.WebserviceEndpoint"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.ServiceRef"> 
        <xsd:annotation> 
            <xsd:documentation>The service reference element is used to define the web services reference configurations for a web services client. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Service Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="port" type="com.ibm.ws.javaee.ddmodel.wsbnd.Port-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The port element is used to define port configurations that are associated with the web services reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Port</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties" type="com.ibm.ws.javaee.ddmodel.wsbnd.Properties"> 
                <xsd:annotation> 
                    <xsd:documentation>The properties element is used to define the properties for a web services endpoint or client. The attributes can have any name and any value. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="port-address" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The port address attribute is used to specify the address of the web services port if the referenced web services has only one port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name attribute is used to specify the name of a web services reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="component-name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The component name attribute is used to specify the EJB bean name if the service reference is used in an EJB module.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Component name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="wsdl-location" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The WSDL location attribute is used to specify the URL of a WSDL location to be overridden.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>WSDL location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.ddmodel.wsbnd.ServiceRef-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.ddmodel.wsbnd.ServiceRef"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.informix"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the Informix JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Informix JDBC Driver Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
                <ext:groupDecl id="InformixConnectionPooling" label="Informix Connection Pool Properties">Properties for the Informix JDBC driver's connection pool.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFXHOST" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFXHOST.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name or IP</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="1526" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCLIENT_LOCALE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCLIENT_LOCALE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client locale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMAgeLimit" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMAgeLimit. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Age limit</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMInitPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMInitPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initial pool size</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMMaxConnections" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMMaxConnections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connections</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMMaxPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMMaxPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum pool size</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMMinAgeLimit" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMMinAgeLimit. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum age limit</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMMinPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMMinPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum pool size</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxCPMServiceInterval" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxCPMServiceInterval. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Service interval</ext:label> 
                    <ext:group id="InformixConnectionPooling"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBANSIWARN" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBANSIWARN.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database ANSI warning</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBCENTURY" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBCENTURY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Year expansion</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBDATE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBDATE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBSPACETEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBSPACETEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary table dbspace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBTEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBTEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database temporary directory</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBTIME" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBTIME.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database time</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDBUPSPACE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDBUPSPACE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Update statistics sort space</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDB_LOCALE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDB_LOCALE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database locale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxDELIMIDENT" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxDELIMIDENT.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delimited identifier</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxENABLE_TYPE_CACHE" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxENABLE_TYPE_CACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable type cache</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxFET_BUF_SIZE" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxFET_BUF_SIZE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fetch buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxGL_DATE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxGL_DATE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DATE end-user formats</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxGL_DATETIME" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxGL_DATETIME.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DATETIME end-user formats</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_AUTOFREE" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_AUTOFREE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable automatic free feature</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_DIRECTIVES" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_DIRECTIVES.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow directives</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_LOCK_MODE_WAIT" use="optional" default="2s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_LOCK_MODE_WAIT. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Lock mode wait</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_SOC_TIMEOUT" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_SOC_TIMEOUT. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_USEPUT" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_USEPUT.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable bulk insert</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_USE_STRENC" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_USE_STRENC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use string encoding</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxIFX_XASPEC" use="optional" default="y" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxIFX_XASPEC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Tightly couple XA transactions</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxINFORMIXCONRETRY" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxINFORMIXCONRETRY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connection retries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxINFORMIXCONTIME" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxINFORMIXCONTIME. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection retry timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxINFORMIXOPCACHE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxINFORMIXOPCACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Blobspace cache size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxINFORMIXSTACKSIZE" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxINFORMIXSTACKSIZE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client session stack size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxJDBCTEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxJDBCTEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LOB temporary file path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxLDAP_IFXBASE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxLDAP_IFXBASE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base domain name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxLDAP_PASSWD" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxLDAP_PASSWD.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxLDAP_URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxLDAP_URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP URL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxLDAP_USER" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxLDAP_USER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP user</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxLOBCACHE" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxLOBCACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Large object cache size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxNEWCODESET" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxNEWCODESET.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>New code set mapping</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxNEWLOCALE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxNEWLOCALE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>New locale mapping</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxNODEFDAC" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxNODEFDAC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>No default privileges</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxOPTCOMPIND" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxOPTCOMPIND.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query optimizer method</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxOPTOFC" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxOPTOFC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimize ResultSet close</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxOPT_GOAL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxOPT_GOAL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimization goal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPATH" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPATH.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Executable program path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPDQPRIORITY" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPDQPRIORITY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Degree of parallelism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPLCONFIG" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPLCONFIG.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Performance loader configuration file</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPLOAD_LO_PATH" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPLOAD_LO_PATH.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Large object handle path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPROTOCOLTRACE" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPROTOCOLTRACE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace SQLI protocol</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPROTOCOLTRACEFILE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPROTOCOLTRACEFILE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Protocol trace file path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPROXY" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPROXY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP proxy</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPSORT_DBTEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPSORT_DBTEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary sort location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxPSORT_NPROCS" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxPSORT_NPROCS.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sort threads</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSECURITY" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSECURITY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use 56 bit encryption</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSQLH_FILE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSQLH_FILE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQL host file path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSQLH_LOC" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSQLH_LOC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQL host location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSQLH_TYPE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSQLH_TYPE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQL host type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSSLCONNECTION" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSSLCONNECTION.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable SSL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxSTMT_CACHE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxSTMT_CACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable shared statement cache</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxTRACE" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxTRACE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDBC trace level</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxTRACEFILE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxTRACEFILE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDBC trace file path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxTRUSTED_CONTEXT" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxTRUSTED_CONTEXT.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable trusted context</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxUSEV5SERVER" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxUSEV5SERVER.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Version five compatibility</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ifxUSE_DTENV" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ifxUSE_DTENV.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Non-ANSI date-time support</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="roleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: roleName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.informix-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.informix"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.i.native"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the IBM DB2 for i Native JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>DB2 for i Native JDBC Driver Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" default="*LOCAL" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access" use="optional" default="all"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: access.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="all"> 
                                <xsd:annotation> 
                                    <xsd:documentation>all</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="read call"> 
                                <xsd:annotation> 
                                    <xsd:documentation>read call</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="read only"> 
                                <xsd:annotation> 
                                    <xsd:documentation>read only</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="autoCommit" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: autoCommit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically commit</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="batchStyle" use="optional" default="2.0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: batchStyle.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Batch style</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="2.0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2.0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2.1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2.1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="behaviorOverride" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: behaviorOverride.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Behavior override</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="blockSize" use="optional" default="32"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: blockSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Block size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8"> 
                                <xsd:annotation> 
                                    <xsd:documentation>8</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="16"> 
                                <xsd:annotation> 
                                    <xsd:documentation>16</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="32"> 
                                <xsd:annotation> 
                                    <xsd:documentation>32</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="64"> 
                                <xsd:annotation> 
                                    <xsd:documentation>64</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="128"> 
                                <xsd:annotation> 
                                    <xsd:documentation>128</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>256</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="512"> 
                                <xsd:annotation> 
                                    <xsd:documentation>512</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="cursorHold" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cursorHold.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor hold</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cursorSensitivity" use="optional" default="asensitive"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cursorSensitivity. Values are: 0 (TYPE_SCROLL_SENSITIVE_STATIC), 1 (TYPE_SCROLL_SENSITIVE_DYNAMIC), 2 (TYPE_SCROLL_ASENSITIVE).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor sensitivity</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="asensitive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>asensitive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="sensitive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>sensitive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dataTruncation" use="optional" default="true" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dataTruncation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data truncation</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dateFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="dmy"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dmy</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="eur"> 
                                <xsd:annotation> 
                                    <xsd:documentation>eur</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="mdy"> 
                                <xsd:annotation> 
                                    <xsd:documentation>mdy</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="iso"> 
                                <xsd:annotation> 
                                    <xsd:documentation>iso</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="jis"> 
                                <xsd:annotation> 
                                    <xsd:documentation>jis</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="julian"> 
                                <xsd:annotation> 
                                    <xsd:documentation>julian</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="usa"> 
                                <xsd:annotation> 
                                    <xsd:documentation>usa</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ymd"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ymd</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dateSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="/"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The forward slash character (/).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="-"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The dash character (-).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="b"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The character b</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decimalSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="directMap" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: directMap.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Direct map</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="doEscapeProcessing" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: doEscapeProcessing.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Do escape processing</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fullErrors" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullErrors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Full errors</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraries" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: libraries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Libraries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lobThreshold" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lobThreshold.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LOB threshold</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:maxInclusive value="500000"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="lockTimeout" use="optional" default="0" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lockTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Lock timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maximumPrecision" use="optional" default="31"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maximumPrecision.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum precision</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="31"> 
                                <xsd:annotation> 
                                    <xsd:documentation>31</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="63"> 
                                <xsd:annotation> 
                                    <xsd:documentation>63</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maximumScale" use="optional" default="31"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maximumScale.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum scale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="63"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="minimumDivideScale" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: minimumDivideScale.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum divide scale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="9"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="networkProtocol" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: networkProtocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Network protocol</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="prefetch" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: prefetch.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Prefetch</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queryOptimizeGoal" use="optional" default="2"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryOptimizeGoal. Values are: 1 (*FIRSTIO) or 2 (*ALLIO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query optimize goal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>*FIRSTIO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>*ALLIO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="reuseObjects" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: reuseObjects.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reuse objects</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverTraceCategories" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverTraceCategories.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server trace categories</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="systemNaming" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: systemNaming.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>System naming</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="eur"> 
                                <xsd:annotation> 
                                    <xsd:documentation>eur</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="hms"> 
                                <xsd:annotation> 
                                    <xsd:documentation>hms</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="iso"> 
                                <xsd:annotation> 
                                    <xsd:documentation>iso</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="jis"> 
                                <xsd:annotation> 
                                    <xsd:documentation>jis</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="usa"> 
                                <xsd:annotation> 
                                    <xsd:documentation>usa</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value=":"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The colon character (:).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="b"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The character b</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="trace" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trace.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transactionTimeout" use="optional" default="0" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: transactionTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="translateBinary" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateBinary.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate binary</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="translateHex" use="optional" default="character"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateHex.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate hexadecimal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="binary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>binary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="character"> 
                                <xsd:annotation> 
                                    <xsd:documentation>character</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useBlockInsert" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useBlockInsert.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use block insert</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.i.native-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.db2.i.native"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.oracle.ucp"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Oracle Universal Connection Pooling.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Oracle UCP Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="connectionFactoryClassName" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionFactoryClassName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection factory class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="oracle.jdbc.pool.OracleDataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>oracle.jdbc.pool.OracleDataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="oracle.jdbc.pool.OracleConnectionPoolDataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>oracle.jdbc.pool.OracleConnectionPoolDataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="oracle.jdbc.xa.client.OracleXADataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>oracle.jdbc.xa.client.OracleXADataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="connectionPoolName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionPoolName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection pool name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="1521" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for connecting to the database. Examples: jdbc:oracle:thin:@//localhost:1521/sample or jdbc:oracle:oci:@//localhost:1521/sample.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="abandonedConnectionTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: abandonedConnectionTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Abandoned connection timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionFactoryProperties" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionFactoryProperties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection factory properties</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionHarvestMaxCount" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionHarvestMaxCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection harvest maximum count</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionHarvestTriggerCount" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionHarvestTriggerCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection harvest trigger count</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionProperties" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionProperties. Encrypted values can be configured for the javax.net.ssl.keyStorePassword and javax.net.ssl.trustStorePassword SSL properties by using the same process that is used for other data source passwords.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection properties</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionWaitTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionWaitTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection wait timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fastConnectionFailoverEnabled" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fastConnectionFailoverEnabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fast connection failover enabled</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="initialPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: initialPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initial pool size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnectionReuseCount" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxConnectionReuseCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connection reuse count</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnectionReuseTime" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxConnectionReuseTime. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connection reuse time</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnectionsPerShard" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxConnectionsPerShard.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connections per shard</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxIdleTime" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxIdleTime. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum idle time</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum pool size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxStatements" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxStatements.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum statements</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="minPoolSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: minPoolSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum pool size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="networkProtocol" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: networkProtocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Network protocol</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ONSConfiguration" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ONSConfiguration.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ONS configuration</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="roleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: roleName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="SQLForValidateConnection" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: SQLForValidateConnection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQL for validate connection</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="secondsToTrustIdleConnection" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: secondsToTrustIdleConnection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Seconds to trust idle connection</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeoutCheckInterval" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeoutCheckInterval. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout check interval</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeToLiveConnectionTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeToLiveConnectionTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time to live connection timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="validateConnectionOnBorrow" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: validateConnectionOnBorrow.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Validate connection on borrow</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.oracle.ucp-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.oracle.ucp"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.derby.embedded"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Derby Embedded JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Derby Embedded Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="createDatabase" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: createDatabase.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create database</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="create"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When the first connection is established, automatically create the database if it doesn't exist.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not automatically create the database.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionAttributes" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionAttributes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection attributes</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="shutdownDatabase" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: shutdownDatabase.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shutdown database</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="shutdown"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Shut down the database when a connection is attempted.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not shut down the database.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.derby.embedded-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.derby.embedded"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties"> 
        <xsd:annotation> 
            <xsd:documentation>List of JDBC vendor properties for the data source. For example, databaseName="dbname" serverName="localhost" portNumber="50000".</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Generic JDBC Driver Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for connecting to the database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.microsoft.sqlserver"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Microsoft SQL Server JDBC Driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Microsoft SQL Server JDBC Driver Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="instanceName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: instanceName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Instance name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessToken" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: accessToken.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="applicationIntent" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: applicationIntent.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application intent</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ReadOnly"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReadOnly</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReadWrite"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReadWrite</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="applicationName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: applicationName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authentication" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: authentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ActiveDirectoryIntegrated"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ActiveDirectoryIntegrated</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ActiveDirectoryPassword"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ActiveDirectoryPassword</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SqlPassword"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SqlPassword</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NotSpecified"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NotSpecified</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="authenticationScheme" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: authenticationScheme.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication scheme</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="JavaKerberos"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JavaKerberos</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NativeAuthentication"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NativeAuthentication</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="columnEncryptionSetting" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: columnEncryptionSetting.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Column encryption</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Disabled</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Enabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Enabled</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="encrypt" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: encrypt.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encrypt</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="failoverPartner" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: failoverPartner.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failover partner</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameInCertificate" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: hostNameInCertificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name in certificate</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="integratedSecurity" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: integratedSecurity.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Integrated security</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreAuthentication" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keyStoreAuthentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key store authentication</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="JavaKeyStorePassword"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JavaKeyStorePassword</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreLocation" use="optional" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keyStoreLocation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key store location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keyStoreSecret.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key store secret</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lastUpdateCount" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lastUpdateCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Last update count</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lockTimeout" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lockTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Lock timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="multiSubnetFailover" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: multiSubnetFailover.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Multiple subnet failover</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="packetSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packetSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Packet size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="32767"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseBuffering" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: responseBuffering.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Response buffering</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="adaptive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>adaptive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="full"> 
                                <xsd:annotation> 
                                    <xsd:documentation>full</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="selectMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: selectMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Select method</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="cursor"> 
                                <xsd:annotation> 
                                    <xsd:documentation>cursor</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="direct"> 
                                <xsd:annotation> 
                                    <xsd:documentation>direct</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sendStringParametersAsUnicode" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sendStringParametersAsUnicode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send string parameters as unicode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sendTimeAsDatetime" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sendTimeAsDatetime.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send time as datetime</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverNameAsACE" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverNameAsACE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name as ASCII compatible encoding</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverSpn" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverSpn.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server SPN</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transparentNetworkIPResolution" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: transparentNetworkIPResolution.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transparent network IP resolution</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustServerCertificate" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trustServerCertificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust server certificate</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStore" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trustStore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust store</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStorePassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trustStorePassword.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust store password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for connecting to the database. Example: jdbc:sqlserver://localhost:1433;databaseName=myDB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="workstationID" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: workstationID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Workstation ID</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="xopenStates" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: xopenStates.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>X/Open compliant SQL states</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.microsoft.sqlserver-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.microsoft.sqlserver"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.oracle"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Oracle JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Oracle Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="driverType" use="optional" default="thin"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: driverType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Driver type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="thin"> 
                                <xsd:annotation> 
                                    <xsd:documentation>thin</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="oci"> 
                                <xsd:annotation> 
                                    <xsd:documentation>oci</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="1521" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for connecting to the database. Examples: jdbc:oracle:thin:@//localhost:1521/sample or jdbc:oracle:oci:@//localhost:1521/sample.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionProperties" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionProperties. Encrypted values can be configured for the javax.net.ssl.keyStorePassword and javax.net.ssl.trustStorePassword SSL properties by using the same process that is used for other data source passwords.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection properties</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="networkProtocol" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: networkProtocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Network protocol</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ONSConfiguration" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ONSConfiguration.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ONS configuration</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="roleName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: roleName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serviceName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serviceName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Service name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="TNSEntryName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: TNSEntryName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TNS entry name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.oracle-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.oracle"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.derby.client"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Derby Network Client JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Derby Network Client Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="createDatabase" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: createDatabase.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create database</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="create"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When the first connection is established, automatically create the database if it doesn't exist.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not automatically create the database.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="1527" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionAttributes" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionAttributes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection attributes</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="retrieveMessageText" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: retrieveMessageText.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retrieve message text</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securityMechanism" use="optional" default="3"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: securityMechanism. Values are: 3 (CLEAR_TEXT_PASSWORD_SECURITY), 4 (USER_ONLY_SECURITY), 7 (ENCRYPTED_PASSWORD_SECURITY), 8 (STRONG_PASSWORD_SUBSTITUTE_SECURITY), 9 (ENCRYPTED_USER_AND_PASSWORD_SECURITY).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Security mechanism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="shortType"> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLEAR_TEXT_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USER_ONLY_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8"> 
                                <xsd:annotation> 
                                    <xsd:documentation>STRONG_PASSWORD_SUBSTITUTE_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_AND_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="shutdownDatabase" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: shutdownDatabase.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shutdown database</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="shutdown"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Shut down the database when a connection is attempted.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not shut down the database.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="ssl" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ssl.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="peerAuthentication"> 
                                <xsd:annotation> 
                                    <xsd:documentation>peerAuthentication</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="off"> 
                                <xsd:annotation> 
                                    <xsd:documentation>off</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="traceDirectory" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceDirectory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace directory</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFile" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFile.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileAppend" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFileAppend.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file append</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceLevel" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Bitwise combination of the following constant values: TRACE_NONE=0, TRACE_CONNECTION_CALLS=1, TRACE_STATEMENT_CALLS=2, TRACE_RESULT_SET_CALLS=4, TRACE_DRIVER_CONFIGURATION=16, TRACE_CONNECTS=32, TRACE_DRDA_FLOWS=64, TRACE_RESULT_SET_META_DATA=128, TRACE_PARAMETER_META_DATA=256, TRACE_DIAGNOSTICS=512, TRACE_XA_CALLS=2048, TRACE_ALL=-1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace level</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.derby.client-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.derby.client"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.datadirect.sqlserver"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the DataDirect Connect for JDBC driver for Microsoft SQL Server.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>DataDirect Connect for JDBC (sqlserver) Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
                <ext:groupDecl id="Failover" label="Failover Properties">Failover properties for the DataDirect Connect for JDBC driver.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accountingInfo" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: accountingInfo.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Accounting information</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="alternateServers" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: alternateServers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alternate servers</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="alwaysReportTriggerResults" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: alwaysReportTriggerResults.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Always report trigger results</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="applicationName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: applicationName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authenticationMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: authenticationMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="auto"> 
                                <xsd:annotation> 
                                    <xsd:documentation>auto</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="kerberos"> 
                                <xsd:annotation> 
                                    <xsd:documentation>kerberos</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ntlm"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ntlm</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="userIdPassword"> 
                                <xsd:annotation> 
                                    <xsd:documentation>userIdPassword</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="bulkLoadBatchSize" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bulkLoadBatchSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bulk load batch size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bulkLoadOptions" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bulkLoadOptions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bulk load options</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientHostName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientHostName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client host name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientUser" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientUser.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client user</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="codePageOverride" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: codePageOverride.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Code page override</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionRetryCount" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionRetryCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection retry count</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionRetryDelay" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionRetryDelay. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection retry delay</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="convertNull" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: convertNull.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Convert null values</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dateTimeInputParameterType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateTimeInputParameterType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date time input parameter type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="auto"> 
                                <xsd:annotation> 
                                    <xsd:documentation>auto</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="dateTime"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dateTime</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="dateTimeOffset"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dateTimeOffset</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dateTimeOutputParameterType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateTimeOutputParameterType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date time output parameter type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="auto"> 
                                <xsd:annotation> 
                                    <xsd:documentation>auto</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="dateTime"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dateTime</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="dateTimeOffset"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dateTimeOffset</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="describeInputParameters" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: describeInputParameters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Describe input parameters</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="describeAll"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeAll</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="describeIfDateTime"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeIfDateTime</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="describeIfString"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeIfString</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="noDescribe"> 
                                <xsd:annotation> 
                                    <xsd:documentation>noDescribe</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="describeOutputParameters" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: describeOutputParameters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Describe output parameters</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="describeAll"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeAll</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="describeIfDateTime"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeIfDateTime</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="describeIfString"> 
                                <xsd:annotation> 
                                    <xsd:documentation>describeIfString</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="noDescribe"> 
                                <xsd:annotation> 
                                    <xsd:documentation>noDescribe</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableBulkLoad" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableBulkLoad.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable bulk load</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableCancelTimeout" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableCancelTimeout.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable cancel timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encryptionMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: encryptionMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encryption method</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="noEncryption"> 
                                <xsd:annotation> 
                                    <xsd:documentation>noEncryption</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="loginSSL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>loginSSL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="requestSSL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>requestSSL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SSL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SSL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="failoverGranularity" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: failoverGranularity.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failover granularity</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="atomic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>atomic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="atomicWithRepositioning"> 
                                <xsd:annotation> 
                                    <xsd:documentation>atomicWithRepositioning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="disableIntegrityCheck"> 
                                <xsd:annotation> 
                                    <xsd:documentation>disableIntegrityCheck</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="nonAtomic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>nonAtomic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="failoverMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: failoverMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failover mode</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="connect"> 
                                <xsd:annotation> 
                                    <xsd:documentation>connect</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="extended"> 
                                <xsd:annotation> 
                                    <xsd:documentation>extended</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="select"> 
                                <xsd:annotation> 
                                    <xsd:documentation>select</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="failoverPreconnect" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: failoverPreconnect.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failover preconnect</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameInCertificate" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: hostNameInCertificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name in certificate</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="initializationString" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: initializationString.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initialization string</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="insensitiveResultSetBufferSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: insensitiveResultSetBufferSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Insensitive result set buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="javaDoubleToString" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: javaDoubleToString.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Java double to string conversion algorithm</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="JDBCBehavior" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: JDBCBehavior. Values are: 0 (JDBC 4.0) or 1 (JDBC 3.0).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDBC behavior</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JDBC 4.0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JDBC 3.0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="loadBalancing" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loadBalancing.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Load balancing</ext:label> 
                    <ext:group id="Failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="longDataCacheSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: longDataCacheSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Long data cache size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="netAddress" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: netAddress.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Net address</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="packetSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packetSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Packet size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="128"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queryTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="resultsetMetaDataOptions" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resultsetMetaDataOptions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Resultset meta data options</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="selectMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: selectMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Select method</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="cursor"> 
                                <xsd:annotation> 
                                    <xsd:documentation>cursor</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="direct"> 
                                <xsd:annotation> 
                                    <xsd:documentation>direct</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="snapshotSerializable" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: snapshotSerializable.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Snapshot serializable</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="spyAttributes" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: spyAttributes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Spy attributes</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="stringInputParameterType" use="optional" default="varchar"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: stringInputParameterType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>String input parameter type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="nvarchar"> 
                                <xsd:annotation> 
                                    <xsd:documentation>nvarchar</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="varchar"> 
                                <xsd:annotation> 
                                    <xsd:documentation>varchar</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="stringOutputParameterType" use="optional" default="varchar"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: stringOutputParameterType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>String output parameter type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="nvarchar"> 
                                <xsd:annotation> 
                                    <xsd:documentation>nvarchar</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="varchar"> 
                                <xsd:annotation> 
                                    <xsd:documentation>varchar</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="suppressConnectionWarnings" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: suppressConnectionWarnings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suppress connection warnings</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transactionMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: transactionMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="explicit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>explicit</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="implicit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>implicit</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="truncateFractionalSeconds" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: truncateFractionalSeconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truncate fractional seconds</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStore" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trustStore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust store</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStorePassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trustStorePassword.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust store password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useServerSideUpdatableCursors" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useServerSideUpdatableCursors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use server side updatable cursors</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="validateServerCertificate" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: validateServerCertificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Validate server certificate</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="XATransactionGroup" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: XATransactionGroup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XA transaction group</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="XMLDescribeType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: XMLDescribeType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XML describe type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="longvarbinary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>longvarbinary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="longvarchar"> 
                                <xsd:annotation> 
                                    <xsd:documentation>longvarchar</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.datadirect.sqlserver-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.datadirect.sqlserver"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.jdbcDriver"> 
        <xsd:annotation> 
            <xsd:documentation>Identifies a JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JDBC Driver</ext:label> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="library" minOccurs="0" maxOccurs="1" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Identifies JDBC driver JARs and native files.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies JDBC driver JARs and native files.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="javax.sql.XADataSource" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver implementation of javax.sql.XADataSource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XADataSource class</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="javax.sql.ConnectionPoolDataSource" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver implementation of javax.sql.ConnectionPoolDataSource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ConnectionPoolDataSource implementation class</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="javax.sql.DataSource" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver implementation of javax.sql.DataSource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DataSource implementation class</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.jdbcDriver-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.jdbcDriver"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.informix.jcc"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the IBM Data Server Driver for JDBC and SQLJ for Informix.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Informix JCC Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="1526" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentLockTimeout" use="optional" default="2s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentLockTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current lock timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBANSIWARN" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBANSIWARN.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database ANSI warning</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBDATE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBDATE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database date</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBPATH" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBPATH.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBSPACETEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBSPACETEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database temporary space</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBTEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBTEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database temporary directory</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DBUPSPACE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DBUPSPACE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database update statistics space</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="DELIMIDENT" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: DELIMIDENT.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delimited identifier</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="deferPrepares" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: deferPrepares.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Defer prepares</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="driverType" use="optional" default="4" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: driverType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Driver type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableNamedParameterMarkers" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableNamedParameterMarkers. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable named parameter markers</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableSeamlessFailover" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableSeamlessFailover. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable seamless failover</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableSysplexWLB" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableSysplexWLB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable sysplex WLB</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fetchSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fetchSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fetch size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fullyMaterializeLobData" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullyMaterializeLobData.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fully materialize LOB data</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="IFX_DIRECTIVES" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: IFX_DIRECTIVES.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow directives</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ON"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ON</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="OFF"> 
                                <xsd:annotation> 
                                    <xsd:documentation>OFF</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="IFX_EXTDIRECTIVES" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: IFX_EXTDIRECTIVES.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow external directives</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ON"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ON</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="OFF"> 
                                <xsd:annotation> 
                                    <xsd:documentation>OFF</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="IFX_UPDDESC" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: IFX_UPDDESC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Update describe</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="IFX_XASTDCOMPLIANCE_XAEND" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: IFX_XASTDCOMPLIANCE_XAEND.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override XA compliance</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="INFORMIXOPCACHE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: INFORMIXOPCACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Blobspace cache size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="INFORMIXSTACKSIZE" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: INFORMIXSTACKSIZE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client session stack size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keepDynamic" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keepDynamic.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keep dynamic</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="NODEFDAC" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: NODEFDAC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>NODEFDAC</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="yes"> 
                                <xsd:annotation> 
                                    <xsd:documentation>yes</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="no"> 
                                <xsd:annotation> 
                                    <xsd:documentation>no</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="OPTCOMPIND" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: OPTCOMPIND.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OPTCOMPIND</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="OPTOFC" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: OPTOFC.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimize open-fetch-close</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="PDQPRIORITY" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: PDQPRIORITY.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>PDQ priority</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="HIGH"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HIGH</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="LOW"> 
                                <xsd:annotation> 
                                    <xsd:documentation>LOW</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="OFF"> 
                                <xsd:annotation> 
                                    <xsd:documentation>OFF</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="progressiveStreaming" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: progressiveStreaming. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Progressive streaming</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="PSORT_DBTEMP" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: PSORT_DBTEMP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary sort location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="PSORT_NPROCS" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: PSORT_NPROCS.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Number of sort threads</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:maxLength value="10"> 
                            </xsd:maxLength> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryDataSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryDataSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query data size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="4096"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="10485760"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="resultSetHoldability" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resultSetHoldability. Values are: 1 (HOLD_CURSORS_OVER_COMMIT) or 2 (CLOSE_CURSORS_AT_COMMIT).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Result set holdability</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HOLD_CURSORS_OVER_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLOSE_CURSORS_AT_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="resultSetHoldabilityForCatalogQueries" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resultSetHoldabilityForCatalogQueries. Values are: 1 (HOLD_CURSORS_OVER_COMMIT) or 2 (CLOSE_CURSORS_AT_COMMIT).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Result set holdability for catalog queries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HOLD_CURSORS_OVER_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLOSE_CURSORS_AT_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="retrieveMessagesFromServerOnGetMessage" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: retrieveMessagesFromServerOnGetMessage.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retrieve messages from server on get message</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securityMechanism" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: securityMechanism. Values are: 3 (CLEAR_TEXT_PASSWORD_SECURITY), 4 (USER_ONLY_SECURITY), 7 (ENCRYPTED_PASSWORD_SECURITY), 9 (ENCRYPTED_USER_AND_PASSWORD_SECURITY).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Security mechanism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="shortType"> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLEAR_TEXT_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USER_ONLY_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_AND_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="STMT_CACHE" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: STMT_CACHE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Statement cache</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="traceDirectory" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceDirectory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace directory</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFile" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFile.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileAppend" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFileAppend.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file append</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceLevel" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Bitwise combination of the following constant values: TRACE_NONE=0, TRACE_CONNECTION_CALLS=1, TRACE_STATEMENT_CALLS=2, TRACE_RESULT_SET_CALLS=4, TRACE_DRIVER_CONFIGURATION=16, TRACE_CONNECTS=32, TRACE_DRDA_FLOWS=64, TRACE_RESULT_SET_META_DATA=128, TRACE_PARAMETER_META_DATA=256, TRACE_DIAGNOSTICS=512, TRACE_SQLJ=1024, TRACE_META_CALLS=8192, TRACE_DATASOURCE_CALLS=16384, TRACE_LARGE_OBJECT_CALLS=32768, TRACE_SYSTEM_MONITOR=131072, TRACE_TRACEPOINTS=262144, TRACE_ALL=-1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace level</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJDBC4ColumnNameAndLabelSemantics" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useJDBC4ColumnNameAndLabelSemantics. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use JDBC 4 column name and label semantics</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.informix.jcc-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.informix.jcc"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.jcc"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the IBM Data Server Driver for JDBC and SQLJ for DB2.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>DB2 JCC Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
                <ext:groupDecl id="AutomaticClientReroute" label="Automatic Client Reroute Properties">Properties to enable and configure the Automatic Client Reroute feature for the DB2 JDBC driver's connection.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="driverType" use="optional" default="4"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: driverType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Driver type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Type 2 JDBC driver.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Type 4 JDBC driver.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="50000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessToken" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: accessToken.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accountingInterval" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: accountingInterval.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Accounting interval</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="activateDatabase" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: activateDatabase.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Activate database</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="affinityFailbackInterval" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: affinityFailbackInterval. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Affinity failback interval</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowNextOnExhaustedResultSet" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: allowNextOnExhaustedResultSet.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow next on exhausted result</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="allowNullResultSetForExecuteQuery" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: allowNullResultSetForExecuteQuery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow null result for executeQuery</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="alternateGroupDatabaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: alternateGroupDatabaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alternate group database name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="alternateGroupPortNumber" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: alternateGroupPortNumber.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alternate group port number</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="alternateGroupServerName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: alternateGroupServerName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alternate group server name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="apiKey" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: apiKey.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>API key</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="atomicMultiRowInsert" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: atomicMultiRowInsert.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Atomic multi-row insert</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="blockingReadConnectionTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: blockingReadConnectionTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Blocking read connection timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="charOutputSize" use="optional" type="shortType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: charOutputSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Character output size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientApplcompat" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientApplcompat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client application compatibility</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientAccountingInformation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientAccountingInformation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client accounting information</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientApplicationInformation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientApplicationInformation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client application information</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientBidiStringType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientBidiStringType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client bidirectional string type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST4</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="5"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST5</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="6"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST6</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST7</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST8</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST9</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="10"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST10</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="11"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST11</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientDebugInfo" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientDebugInfo.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client debug information</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:maxLength value="254"> 
                            </xsd:maxLength> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientProgramId" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientProgramId.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client program ID</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:maxLength value="80"> 
                            </xsd:maxLength> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientProgramName" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientProgramName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client program name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:maxLength value="12"> 
                            </xsd:maxLength> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientRerouteAlternatePortNumber" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientRerouteAlternatePortNumber.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client reroute alternate port number</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientRerouteAlternateServerName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientRerouteAlternateServerName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client reroute alternate server name</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientUser" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientUser.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client user</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientWorkstation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: clientWorkstation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client workstation</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="commandTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: commandTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Command timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="concurrentAccessResolution" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: concurrentAccessResolution.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Concurrent access resolution</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CONCURRENTACCESS_USE_CURRENTLY_COMMITTED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CONCURRENTACCESS_WAIT_FOR_OUTCOME</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="connectionCloseWithInFlightTransaction" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionCloseWithInFlightTransaction.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection close with in-flight transaction</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CONNECTION_CLOSE_WITH_EXCEPTION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CONNECTION_CLOSE_WITH_ROLLBACK</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="connectionTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectNode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectNode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connect node</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="999"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="currentAlternateGroupEntry" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentAlternateGroupEntry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current alternate group entry</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentDegree" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentDegree.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current degree</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentExplainMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentExplainMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current explain mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:maxLength value="254"> 
                            </xsd:maxLength> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="currentExplainSnapshot" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentExplainSnapshot.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current explain snapshot</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:maxInclusive value="8"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="currentFunctionPath" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentFunctionPath.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current function path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentLocaleLcCtype" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentLocaleLcCtype.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current locale (LC_CTYPE)</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentLockTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentLockTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current lock timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentMaintainedTableTypesForOptimization" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentMaintainedTableTypesForOptimization.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current maintained table types for optimization</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ALL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ALL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NONE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SYSTEM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SYSTEM</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="USER"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USER</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="currentPackagePath" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentPackagePath.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current package path</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentPackageSet" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentPackageSet.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current package set</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentQueryOptimization" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentQueryOptimization.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current query optimization</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>3</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="5"> 
                                <xsd:annotation> 
                                    <xsd:documentation>5</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>7</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>9</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="currentSQLID" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentSQLID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current SQLID</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentSchema" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentSchema.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current schema</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cursorSensitivity" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cursorSensitivity. Values are: 0 (TYPE_SCROLL_SENSITIVE_STATIC), 1 (TYPE_SCROLL_SENSITIVE_DYNAMIC), 2 (TYPE_SCROLL_ASENSITIVE).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor sensitivity</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TYPE_SCROLL_SENSITIVE_STATIC</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TYPE_SCROLL_SENSITIVE_DYNAMIC</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TYPE_SCROLL_ASENSITIVE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dateFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ISO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USA</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>EUR</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JIS</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decimalRoundingMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalRoundingMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal rounding mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROUND_DOWN</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROUND_CEILING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROUND_HALF_EVEN</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROUND_HALF_UP</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="6"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ROUND_FLOOR</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decimalSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DECIMAL_SEPARATOR_PERIOD</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DECIMAL_SEPARATOR_COMMA </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decimalStringFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalStringFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal string format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DECIMAL_STRING_FORMAT_TO_STRING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DECIMAL_STRING_FORMAT_TO_PLAIN_STRING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="deferPrepares" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: deferPrepares.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Defer prepares</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="downgradeHoldCursorsUnderXa" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: downgradeHoldCursorsUnderXa.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Downgrade cursor holdability under XA</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableAlternateGroupSeamlessACR" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableAlternateGroupSeamlessACR.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable alternate group seamless ACR</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableBidiLayoutTransformation" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableBidiLayoutTransformation. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable bidirectional layout transformation</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableClientAffinitiesList" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableClientAffinitiesList. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable client affinities list</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableConnectionConcentrator" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableConnectionConcentrator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable connection concentrator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableExtendedDescribe" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableExtendedDescribe.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable extended describe</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableExtendedIndicators" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableExtendedIndicators.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable extended indicators</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableMultiRowInsertSupport" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableMultiRowInsertSupport.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable multi-row insert support</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableNamedParameterMarkers" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableNamedParameterMarkers. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable named parameter markers</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableRowsetSupport" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableRowsetSupport.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable rowset support</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableSeamlessFailover" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableSeamlessFailover. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable seamless failover</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableSysplexWLB" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableSysplexWLB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable sysplex WLB</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableT2zosLBF" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableT2zosLBF.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable type 2 z/OS limited block fetch</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableT2zosLBFSPResultSets" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableT2zosLBFSPResultSets.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable z/OS limited block fetch proc results</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="enableXACleanTransaction" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: enableXACleanTransaction.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable XA clean transaction</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="encryptionAlgorithm" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: encryptionAlgorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encryption algorithm</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="extendedTableInfo" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: extendedTableInfo.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Extended table information</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="fetchSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fetchSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fetch size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fullyMaterializeInputStreams" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullyMaterializeInputStreams.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fully materialize input streams</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fullyMaterializeInputStreamsOnBatchExecution" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullyMaterializeInputStreamsOnBatchExecution.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fully read input streams on batch execution</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="fullyMaterializeLobData" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullyMaterializeLobData.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fully materialize LOB data</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="implicitRollbackOption" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: implicitRollbackOption.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Implicit rollback option</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>IMPLICIT_ROLLBACK_OPTION_NOT_SET</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>IMPLICIT_ROLLBACK_OPTION_NOT_CLOSE_CONNECTION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>IMPLICIT_ROLLBACK_OPTION_CLOSE_CONNECTION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="interruptProcessingMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: interruptProcessingMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interrupt processing mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>INTERRUPT_PROCESSING_MODE_DISABLED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>INTERRUPT_PROCESSING_MODE_STATEMENT_CANCEL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>INTERRUPT_PROCESSING_MODE_CLOSE_SOCKET</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="jdbcCollection" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: jdbcCollection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDBC collection</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keepAliveTimeOut" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keepAliveTimeOut. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keep alive timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keepDynamic" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keepDynamic.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keep dynamic</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="kerberosServerPrincipal" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: kerberosServerPrincipal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Kerberos server principal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxConnCachedParamBufferSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxConnCachedParamBufferSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum connection cached parameters buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxRetriesForClientReroute" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxRetriesForClientReroute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum retries for client reroute</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxRowsetSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxRowsetSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum rowset size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxTransportObjects" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maxTransportObjects.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum transport objects</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="memberConnectTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: memberConnectTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Member connect timeout</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="optimizationProfile" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: optimizationProfile.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimization profile</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="optimizationProfileToFlush" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: optimizationProfileToFlush.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimization profile to flush</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pkList" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: pkList.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package list</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="profileName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: profileName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Profile name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="progressiveStreaming" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: progressiveStreaming. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Progressive streaming</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryCloseImplicit" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryCloseImplicit. Values are:  1 (QUERY_CLOSE_IMPLICIT_YES) or 2 (QUERY_CLOSE_IMPLICIT_NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query close implicit</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>QUERY_CLOSE_IMPLICIT_YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>QUERY_CLOSE_IMPLICIT_NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryDataSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryDataSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query data size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="4096"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryTimeoutInterruptProcessingMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryTimeoutInterruptProcessingMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query timeout interrupt processing mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>INTERRUPT_PROCESSING_MODE_STATEMENT_CANCEL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>INTERRUPT_PROCESSING_MODE_CLOSE_SOCKET</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readOnly" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: readOnly.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read only</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recordTemporalHistory" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: recordTemporalHistory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Record temporal history</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="reportLongTypes" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: reportLongTypes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Report long types</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="shortType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="resultSetHoldability" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resultSetHoldability. Values are: 1 (HOLD_CURSORS_OVER_COMMIT) or 2 (CLOSE_CURSORS_AT_COMMIT).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Result set holdability</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HOLD_CURSORS_OVER_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLOSE_CURSORS_AT_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="resultSetHoldabilityForCatalogQueries" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resultSetHoldabilityForCatalogQueries. Values are: 1 (HOLD_CURSORS_OVER_COMMIT) or 2 (CLOSE_CURSORS_AT_COMMIT).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Result set holdability for catalog queries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HOLD_CURSORS_OVER_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLOSE_CURSORS_AT_COMMIT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="retrieveMessagesFromServerOnGetMessage" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: retrieveMessagesFromServerOnGetMessage.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retrieve messages from server on get message</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="retryIntervalForClientReroute" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: retryIntervalForClientReroute. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retry interval for client reroute</ext:label> 
                    <ext:group id="AutomaticClientReroute"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="retryWithAlternativeSecurityMechanism" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: retryWithAlternativeSecurityMechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retry with alternative security mechanism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="returnAlias" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: returnAlias.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Return alias</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="shortType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="securityMechanism" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: securityMechanism. Values are: 3 (CLEAR_TEXT_PASSWORD_SECURITY), 4 (USER_ONLY_SECURITY), 7 (ENCRYPTED_PASSWORD_SECURITY), 9 (ENCRYPTED_USER_AND_PASSWORD_SECURITY), 11 (KERBEROS_SECURITY), 12 (ENCRYPTED_USER_AND_DATA_SECURITY), 13 (ENCRYPTED_USER_PASSWORD_AND_DATA_SECURITY), 15 (PLUGIN_SECURITY), 16 (ENCRYPTED_USER_ONLY_SECURITY), 18 (TLS_CLIENT_CERTIFICATE_SECURITY).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Security mechanism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="shortType"> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLEAR_TEXT_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USER_ONLY_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_AND_PASSWORD_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="11"> 
                                <xsd:annotation> 
                                    <xsd:documentation>KERBEROS_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="12"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_AND_DATA_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="13"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_PASSWORD_AND_DATA_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="15"> 
                                <xsd:annotation> 
                                    <xsd:documentation>PLUGIN_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="16"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ENCRYPTED_USER_ONLY_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="18"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TLS_CLIENT_CERTIFICATE_SECURITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sendCharInputsUTF8" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sendCharInputsUTF8.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send character input UTF-8</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sendDataAsIs" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sendDataAsIs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send data as is</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverBidiStringType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverBidiStringType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server bidirectional string type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST4</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="5"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST5</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="6"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST6</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="7"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST7</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST8</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="9"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST9</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="10"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST10</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="11"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BIDI_ST11</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sessionTimeZone" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sessionTimeZone.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session time zone</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sqljCloseStmtsWithOpenResultSet" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sqljCloseStmtsWithOpenResultSet.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQLJ close statements with open result set</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sqljEnableClassLoaderSpecificProfiles" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sqljEnableClassLoaderSpecificProfiles.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SQLJ enable class loader specific profiles</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssid" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ssid.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Subsystem ID</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslCertLocation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslCertLocation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL certificate location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="SSLCipherSuites" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: SSLCipherSuites.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL cipher suites</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslConnection" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslConnection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL connection</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslTrustStoreLocation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslTrustStoreLocation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL trust store location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslTrustStorePassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslTrustStorePassword.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL trust store password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslTrustStoreType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslTrustStoreType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL trust store type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslKeyStoreLocation" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslKeyStoreLocation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL key store location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslKeyStorePassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslKeyStorePassword.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL key store password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslKeyStoreType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslKeyStoreType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL key store type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="statementConcentrator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: statementConcentrator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Statement concentrator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>STATEMENT_CONCENTRATOR_OFF</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>STATEMENT_CONCENTRATOR_WITH_LITERALS</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="streamBufferSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: streamBufferSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Stream buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="stripTrailingZerosForDecimalNumbers" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: stripTrailingZerosForDecimalNumbers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Strip trailing zeros for decimal numbers</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sysSchema" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sysSchema.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sys schema</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ISO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>USA</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="3"> 
                                <xsd:annotation> 
                                    <xsd:documentation>EUR</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JIS</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timerLevelForQueryTimeOut" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timerLevelForQueryTimeOut.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timer level for query timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="-1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>QUERYTIMEOUT_DISABLED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>QUERYTIMEOUT_STATEMENT_LEVEL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>QUERYTIMEOUT_CONNECTION_LEVEL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timestampFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timestampFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timestamp format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ISO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="5"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JDBC</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timestampOutputType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timestampOutputType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timestamp output type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JDBC_TIMESTAMP</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JCC_DBTIMESTAMP</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timestampPrecisionReporting" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timestampPrecisionReporting.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timestamp precision reporting</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TIMESTAMP_JDBC_STANDARD</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TIMESTAMP_ZERO_PADDING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="traceDirectory" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceDirectory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace directory</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFile" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFile.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileAppend" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFileAppend.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file append</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileCount" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFileCount.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file count</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileSize" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceFileSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceLevel" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Bitwise combination of the following constant values: TRACE_NONE=0, TRACE_CONNECTION_CALLS=1, TRACE_STATEMENT_CALLS=2, TRACE_RESULT_SET_CALLS=4, TRACE_DRIVER_CONFIGURATION=16, TRACE_CONNECTS=32, TRACE_DRDA_FLOWS=64, TRACE_RESULT_SET_META_DATA=128, TRACE_PARAMETER_META_DATA=256, TRACE_DIAGNOSTICS=512, TRACE_SQLJ=1024, TRACE_META_CALLS=8192, TRACE_DATASOURCE_CALLS=16384, TRACE_LARGE_OBJECT_CALLS=32768, TRACE_SYSTEM_MONITOR=131072, TRACE_TRACEPOINTS=262144, TRACE_ALL=-1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace level</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceOption" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: traceOption</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace option</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="translateForBitData" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateForBitData.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate for bit data</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HEX_REPRESENTATION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SERVER_ENCODING_REPRESENTATION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="updateCountForBatch" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: updateCountForBatch.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Update count for batch</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO_UPDATE_COUNT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>TOTAL_UPDATE_COUNT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useCachedCursor" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useCachedCursor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use cached cursor</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useIdentityValLocalForAutoGeneratedKeys" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useIdentityValLocalForAutoGeneratedKeys.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use IDENTITY_VAL_LOCAL for auto generated keys</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJDBC4ColumnNameAndLabelSemantics" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useJDBC4ColumnNameAndLabelSemantics. Values are: 1 (YES) or 2 (NO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use JDBC 4 column name and label semantics</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useJDBC41DefinitionForGetColumns" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useJDBC41DefinitionForGetColumns. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use JDBC 4.1 definition for get columns</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>YES</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NO</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useRowsetCursor" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useRowsetCursor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use rowset cursor</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useTransactionRedirect" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useTransactionRedirect.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use transaction redirect</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="xaNetworkOptimization" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: xaNetworkOptimization.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XA network optimization</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="xmlFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: xmlFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XML format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>XML_FORMAT_TEXTUAL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>XML_FORMAT_BINARY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.jcc-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.db2.jcc"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.i.toolbox"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for the IBM DB2 for i Toolbox JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>DB2 for i Toolbox JDBC Driver Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="serverName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access" use="optional" default="all"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: access.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="all"> 
                                <xsd:annotation> 
                                    <xsd:documentation>all</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="read call"> 
                                <xsd:annotation> 
                                    <xsd:documentation>read call</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="read only"> 
                                <xsd:annotation> 
                                    <xsd:documentation>read only</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="behaviorOverride" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: behaviorOverride.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Behavior override</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bidiImplicitReordering" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bidiImplicitReordering.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bidirectional implicit reordering</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bidiNumericOrdering" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bidiNumericOrdering.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bidirectional numeric ordering</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bidiStringType" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bidiStringType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bidirectional string type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bigDecimal" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: bigDecimal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Big decimal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="blockCriteria" use="optional" default="2"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: blockCriteria. Values are: 0 (no record blocking), 1 (block if FOR FETCH ONLY is specified), 2 (block if FOR UPDATE is specified).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Block criteria</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="blockSize" use="optional" default="32"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: blockSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Block size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="0"> 
                                <xsd:annotation> 
                                    <xsd:documentation>0</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8"> 
                                <xsd:annotation> 
                                    <xsd:documentation>8</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="16"> 
                                <xsd:annotation> 
                                    <xsd:documentation>16</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="32"> 
                                <xsd:annotation> 
                                    <xsd:documentation>32</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="64"> 
                                <xsd:annotation> 
                                    <xsd:documentation>64</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="128"> 
                                <xsd:annotation> 
                                    <xsd:documentation>128</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>256</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="512"> 
                                <xsd:annotation> 
                                    <xsd:documentation>512</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="characterTruncation" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: CharacterTruncation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Character truncation</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="warning"> 
                                <xsd:annotation> 
                                    <xsd:documentation>warning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="concurrentAccessResolution" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: concurrentAccessResolution.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Concurrent access resolution</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="3"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="cursorHold" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cursorHold.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor hold</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cursorSensitivity" use="optional" default="asensitive"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cursorSensitivity. Values are: 0 (TYPE_SCROLL_SENSITIVE_STATIC), 1 (TYPE_SCROLL_SENSITIVE_DYNAMIC), 2 (TYPE_SCROLL_ASENSITIVE).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor sensitivity</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="asensitive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>asensitive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="insensitive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>insensitive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="sensitive"> 
                                <xsd:annotation> 
                                    <xsd:documentation>sensitive</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dataCompression" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dataCompression.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data compression</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dataTruncation" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dataTruncation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data truncation</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dateFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="dmy"> 
                                <xsd:annotation> 
                                    <xsd:documentation>dmy</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="eur"> 
                                <xsd:annotation> 
                                    <xsd:documentation>eur</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="mdy"> 
                                <xsd:annotation> 
                                    <xsd:documentation>mdy</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="iso"> 
                                <xsd:annotation> 
                                    <xsd:documentation>iso</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="jis"> 
                                <xsd:annotation> 
                                    <xsd:documentation>jis</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="julian"> 
                                <xsd:annotation> 
                                    <xsd:documentation>julian</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="usa"> 
                                <xsd:annotation> 
                                    <xsd:documentation>usa</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ymd"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ymd</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dateSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: dateSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Date separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="/"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The forward slash character (/).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="-"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The dash character (-).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value=" "> 
                                <xsd:annotation> 
                                    <xsd:documentation>The space character ( ).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decfloatRoundingMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decfloatRoundingMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decfloat rounding mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="half even"> 
                                <xsd:annotation> 
                                    <xsd:documentation>half even</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="half up"> 
                                <xsd:annotation> 
                                    <xsd:documentation>half up</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="down"> 
                                <xsd:annotation> 
                                    <xsd:documentation>down</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ceiling"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ceiling</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="floor"> 
                                <xsd:annotation> 
                                    <xsd:documentation>floor</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="half down"> 
                                <xsd:annotation> 
                                    <xsd:documentation>half down</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="up"> 
                                <xsd:annotation> 
                                    <xsd:documentation>up</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="decimalDataErrors" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalDataErrors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal data errors</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decimalSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: decimalSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decimal separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="describeOption" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: describeOption.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Describe option</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="driver" use="optional" default="toolbox"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: driver.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Driver</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="native"> 
                                <xsd:annotation> 
                                    <xsd:documentation>native</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="toolbox"> 
                                <xsd:annotation> 
                                    <xsd:documentation>toolbox</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="errors" use="optional" default="basic"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: errors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Errors</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="full"> 
                                <xsd:annotation> 
                                    <xsd:documentation>full</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="extendedDynamic" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: extendedDynamic.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Extended dynamic</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="extendedMetaData" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: extendedMetaData.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Extended meta data</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fullOpen" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: fullOpen.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Full open</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="holdInputLocators" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: holdInputLocators.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hold input locators</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="holdStatements" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: holdStatements.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hold statements</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreWarnings" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ignoreWarnings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore warnings</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isolationLevelSwitchingSupport" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: isolationLevelSwitchingSupport.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Isolation level switching support</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keepAlive" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: keepAlive.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keep alive</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lazyClose" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lazyClose.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Lazy close</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraries" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: libraries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Libraries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lobThreshold" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: lobThreshold.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LOB threshold</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="16777216"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maximumPrecision" use="optional" default="31"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maximumPrecision.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum precision</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="31"> 
                                <xsd:annotation> 
                                    <xsd:documentation>31</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="63"> 
                                <xsd:annotation> 
                                    <xsd:documentation>64</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maximumBlockedInputRows" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maximumBlockedInputRows.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum blocked input rows</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="32000"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maximumScale" use="optional" default="31"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: maximumScale.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum scale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="63"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="metaDataSource" use="optional" default="1"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: metaDataSource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Meta data source</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="1"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="minimumDivideScale" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: minimumDivideScale.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Minimum divide scale</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="9"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="naming" use="optional" default="sql"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: naming.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Naming</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="sql"> 
                                <xsd:annotation> 
                                    <xsd:documentation>sql</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="system"> 
                                <xsd:annotation> 
                                    <xsd:documentation>system</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="numericRangeError" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: numericRangeError.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Numeric range error</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="warning"> 
                                <xsd:annotation> 
                                    <xsd:documentation>warning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="package" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: package.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="packageAdd" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageAdd.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package add</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="packageCCSID" use="optional" default="13488"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageCCSID. Values are: 1200 (UCS-2) or 13488 (UTF-16).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package CCSID</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="intType"> 
                            <xsd:enumeration value="1200"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1200 (UCS-2)</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="13488"> 
                                <xsd:annotation> 
                                    <xsd:documentation>13488 (UTF-16)</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="packageCache" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageCache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package cache</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="packageCriteria" use="optional" default="default"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageCriteria.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package criteria</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="select"> 
                                <xsd:annotation> 
                                    <xsd:documentation>select</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="packageError" use="optional" default="warning"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageError.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package error</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="exception"> 
                                <xsd:annotation> 
                                    <xsd:documentation>exception</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="warning"> 
                                <xsd:annotation> 
                                    <xsd:documentation>warning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="packageLibrary" use="optional" default="QGPL" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: packageLibrary.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Package library</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="prefetch" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: prefetch.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Prefetch</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="prompt" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: prompt.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Prompt</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proxyServer" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: proxyServer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy server</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="qaqqiniLibrary" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: qaqqiniLibrary.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>QAQQINI library</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queryOptimizeGoal" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryOptimizeGoal. Values are: 1 (*FIRSTIO) or 2 (*ALLIO).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query optimize goal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryReplaceTruncatedParameter" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryReplaceTruncatedParameter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query replace truncated parameter</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="queryTimeoutMechanism" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: queryTimeoutMechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query timeout mechanism</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="qqrytimlmt"> 
                                <xsd:annotation> 
                                    <xsd:documentation>qqrytimlmt</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="cancel"> 
                                <xsd:annotation> 
                                    <xsd:documentation>cancel</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryStorageLimit" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Query storage limit</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query storage limit</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="receiveBufferSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: receiveBufferSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Receive buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="remarks" use="optional" default="system"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: remarks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remarks</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="sql"> 
                                <xsd:annotation> 
                                    <xsd:documentation>sql</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="system"> 
                                <xsd:annotation> 
                                    <xsd:documentation>system</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="rollbackCursorHold" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: rollbackCursorHold.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Rollback cursor hold</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="savePasswordWhenSerialized" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: savePasswordWhenSerialized.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Save password when serialized</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="secondaryUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: secondaryUrl.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secondary URL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="secure" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: secure.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="secureCurrentUser" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: secureCurrentUser.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure current user</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sendBufferSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sendBufferSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send buffer size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="serverTraceCategories" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverTraceCategories.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server trace categories</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverTrace" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: serverTrace.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server trace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="soLinger" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: soLinger. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket linger</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="soTimeout" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: soTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sort" use="optional" default="hex"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sort.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sort</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="hex"> 
                                <xsd:annotation> 
                                    <xsd:documentation>hex</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="language"> 
                                <xsd:annotation> 
                                    <xsd:documentation>language</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="table"> 
                                <xsd:annotation> 
                                    <xsd:documentation>table</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sortLanguage" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sortLanguage.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sort language</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sortTable" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sortTable.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sort table</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sortWeight" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sortWeight.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sort weight</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="shared"> 
                                <xsd:annotation> 
                                    <xsd:documentation>shared</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="unqiue"> 
                                <xsd:annotation> 
                                    <xsd:documentation>unique</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="tcpNoDelay" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: tcpNoDelay.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP no delay</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="threadUsed" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: threadUsed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Thread used</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="eur"> 
                                <xsd:annotation> 
                                    <xsd:documentation>eur</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="hms"> 
                                <xsd:annotation> 
                                    <xsd:documentation>hms</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="iso"> 
                                <xsd:annotation> 
                                    <xsd:documentation>iso</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="jis"> 
                                <xsd:annotation> 
                                    <xsd:documentation>jis</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="usa"> 
                                <xsd:annotation> 
                                    <xsd:documentation>usa</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeSeparator" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timeSeparator.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time separator</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value=":"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The colon character (:).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="."> 
                                <xsd:annotation> 
                                    <xsd:documentation>The period character (.).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="\,"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The comma character (,).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value=" "> 
                                <xsd:annotation> 
                                    <xsd:documentation>The space character ( ).</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timestampFormat" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: timestampFormat.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timestamp format</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="iso"> 
                                <xsd:annotation> 
                                    <xsd:documentation>iso</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ibmsql"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ibmsql</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="toolboxTrace" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: toolboxTrace.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Toolbox trace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="datastream"> 
                                <xsd:annotation> 
                                    <xsd:documentation>datastream</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="diagnostic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>diagnostic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="error"> 
                                <xsd:annotation> 
                                    <xsd:documentation>error</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="information"> 
                                <xsd:annotation> 
                                    <xsd:documentation>information</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="warning"> 
                                <xsd:annotation> 
                                    <xsd:documentation>warning</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="conversion"> 
                                <xsd:annotation> 
                                    <xsd:documentation>conversion</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="proxy"> 
                                <xsd:annotation> 
                                    <xsd:documentation>proxy</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="pcml"> 
                                <xsd:annotation> 
                                    <xsd:documentation>pcml</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="jdbc"> 
                                <xsd:annotation> 
                                    <xsd:documentation>jdbc</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="all"> 
                                <xsd:annotation> 
                                    <xsd:documentation>all</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="thread"> 
                                <xsd:annotation> 
                                    <xsd:documentation>thread</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="trace" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trace.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="translateBinary" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateBinary.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate binary</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="translateBoolean" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateBoolean.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate boolean</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="translateHex" use="optional" default="character"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: translateHex.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate hexadecimal</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="binary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>binary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="character"> 
                                <xsd:annotation> 
                                    <xsd:documentation>character</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="trueAutoCommit" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: trueAutoCommit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>True auto commit</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useBlockUpdate" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useBlockUpdate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use block update</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useDrdaMetadataVersion" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: useDrdaMetadataVersion.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use DRDA metadata version</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="variableFieldCompression" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: variableFieldCompression.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Variable field compression</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="true"> 
                                <xsd:annotation> 
                                    <xsd:documentation>true</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>false</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="insert"> 
                                <xsd:annotation> 
                                    <xsd:documentation>insert</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="all"> 
                                <xsd:annotation> 
                                    <xsd:documentation>all</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="xaLooselyCoupledSupport" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: xaLooselyCoupledSupport.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>XA loosely coupled support</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="1"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.db2.i.toolbox-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.db2.i.toolbox"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource"> 
        <xsd:annotation> 
            <xsd:documentation>Defines a data source configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Data Source</ext:label> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="jdbcDriver" type="com.ibm.ws.jdbc.jdbcDriver"> 
                <xsd:annotation> 
                    <xsd:documentation>JDBC driver for a data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JDBC Driver</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager"> 
                <xsd:annotation> 
                    <xsd:documentation>Connection manager for a data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Connection Manager</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties.informix" type="com.ibm.ws.jdbc.dataSource.properties.informix"> 
            </xsd:element> 
            <xsd:element name="properties.db2.i.native" type="com.ibm.ws.jdbc.dataSource.properties.db2.i.native"> 
            </xsd:element> 
            <xsd:element name="properties.oracle.ucp" type="com.ibm.ws.jdbc.dataSource.properties.oracle.ucp"> 
            </xsd:element> 
            <xsd:element name="properties.derby.embedded" type="com.ibm.ws.jdbc.dataSource.properties.derby.embedded"> 
            </xsd:element> 
            <xsd:element name="properties" type="com.ibm.ws.jdbc.dataSource.properties"> 
            </xsd:element> 
            <xsd:element name="properties.microsoft.sqlserver" type="com.ibm.ws.jdbc.dataSource.properties.microsoft.sqlserver"> 
            </xsd:element> 
            <xsd:element name="properties.oracle" type="com.ibm.ws.jdbc.dataSource.properties.oracle"> 
            </xsd:element> 
            <xsd:element name="properties.derby.client" type="com.ibm.ws.jdbc.dataSource.properties.derby.client"> 
            </xsd:element> 
            <xsd:element name="properties.datadirect.sqlserver" type="com.ibm.ws.jdbc.dataSource.properties.datadirect.sqlserver"> 
            </xsd:element> 
            <xsd:element name="properties.informix.jcc" type="com.ibm.ws.jdbc.dataSource.properties.informix.jcc"> 
            </xsd:element> 
            <xsd:element name="properties.db2.jcc" type="com.ibm.ws.jdbc.dataSource.properties.db2.jcc"> 
            </xsd:element> 
            <xsd:element name="properties.db2.i.toolbox" type="com.ibm.ws.jdbc.dataSource.properties.db2.i.toolbox"> 
            </xsd:element> 
            <xsd:element name="properties.sybase" type="com.ibm.ws.jdbc.dataSource.properties.sybase"> 
            </xsd:element> 
            <xsd:element name="properties.postgresql" type="com.ibm.ws.jdbc.dataSource.properties.postgresql"> 
            </xsd:element> 
            <xsd:element name="containerAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER. If updated while the server is running, the change is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Default Container Managed Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry"> 
                <xsd:annotation> 
                    <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>JAAS Login Context Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="onConnect" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>SQL command to execute once on each new connection that is established to the database. The SQL statement applies only to newly created connections, not to existing connections that are reused from the connection pool. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>On connect</ext:label> 
                        <ext:group id="Advanced"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="recoveryAuthData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Recovery Authentication Data</ext:label> 
                        <ext:group id="Advanced"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="enableConnectionCasting" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates that connections obtained from the data source should be castable to interface classes that the JDBC vendor connection implementation implements. Enabling this option incurs additional overhead on each getConnection operation. If vendor JDBC interfaces are needed less frequently, it might be more efficient to leave this option disabled and use Connection.unwrap(interface) only where it is needed. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable connection casting</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jdbcDriverRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver for a data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDBC driver reference</ext:label> 
                    <ext:reference>jdbcDriver</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionManagerRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Connection manager for a data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection manager reference</ext:label> 
                    <ext:reference>connectionManager</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="type" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Type of data source. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="javax.sql.XADataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>javax.sql.XADataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="javax.sql.ConnectionPoolDataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>javax.sql.ConnectionPoolDataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="javax.sql.DataSource"> 
                                <xsd:annotation> 
                                    <xsd:documentation>javax.sql.DataSource</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="java.sql.Driver"> 
                                <xsd:annotation> 
                                    <xsd:documentation>java.sql.Driver</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="connectionSharing" use="optional" default="MatchOriginalRequest"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how connections are matched for sharing.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection matching</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="MatchOriginalRequest"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When sharing connections, match based on the original connection request.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MatchCurrentState"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When sharing connections, match based on the current state of the connection. If updated while the server is running, the update is applied with each first connection handle in a transaction.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="containerAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Default authentication data for container managed authentication that applies when bindings do not specify an authentication-alias for a resource reference with res-auth=CONTAINER. If updated while the server is running, the change is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default container managed authentication data</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jaasLoginContextEntryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>JAAS login context entry for authentication. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JAAS login context entry reference</ext:label> 
                    <ext:reference>jaasLoginContextEntry</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isolationLevel" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Default transaction isolation level. If unspecified and the database is identified as DB2, Derby, Informix, Microsoft SQL Server or Sybase, TRANSACTION_REPEATABLE_READ is used. If unspecified for other databases, TRANSACTION_READ_COMMITTED is used. If updated while the server is running, the update is applied with new connection requests; in-use connections are not impacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction isolation level</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="TRANSACTION_READ_UNCOMMITTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Dirty reads, non-repeatable reads and phantom reads can occur.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_READ_COMMITTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Dirty reads are prevented; non-repeatable reads and phantom reads can occur.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_REPEATABLE_READ"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Dirty reads and non-repeatable reads are prevented; phantom reads can occur.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_SERIALIZABLE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Dirty reads, non-repeatable reads and phantom reads are prevented.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_SNAPSHOT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Snapshot isolation for Microsoft SQL Server JDBC Driver and DataDirect Connect for JDBC driver.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TRANSACTION_NONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Indicates that the JDBC driver does not support transactions.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="statementCacheSize" use="optional" default="10"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of cached statements per connection. If updated while the server is running, the statement cache is resized upon next use.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cached statements per connection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="transactional" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable participation in transactions that are managed by the application server. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Participate in transactions</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="beginTranForResultSetScrollingAPIs" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Attempt transaction enlistment when result set scrolling interfaces are used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enlist scrolling APIs</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="beginTranForVendorAPIs" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Attempt transaction enlistment when vendor interfaces are used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enlist vendor APIs</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="commitOrRollbackOnCleanup" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Determines how to clean up connections that might be in a database unit of work (AutoCommit=false) when the connection is closed or returned to the pool.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Commit or roll back on cleanup</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="commit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Clean up the connection by committing.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="rollback"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Clean up the connection by rolling back.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queryTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Default query timeout for SQL statements. In a JTA transaction, syncQueryTimeoutWithTransactionTimeout can override this default. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Query timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryAuthDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for transaction recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recovery authentication data reference</ext:label> 
                    <ext:group id="Advanced"/> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="syncQueryTimeoutWithTransactionTimeout" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Use the time remaining (if any) in a JTA transaction as the default query timeout for SQL statements.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Synchronize query and transaction timeouts</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="supplementalJDBCTrace" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Supplements the JDBC driver trace that is logged when JDBC driver trace is enabled in bootstrap.properties. JDBC driver trace specifications include: com.ibm.ws.database.logwriter, com.ibm.ws.db2.logwriter, com.ibm.ws.derby.logwriter, com.ibm.ws.informix.logwriter, com.ibm.ws.oracle.logwriter, com.ibm.ws.sqlserver.logwriter, com.ibm.ws.sybase.logwriter. If updated while the server is running, existing connections are destroyed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Supplemental JDBC trace</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="validationTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a timeout for validation of pooled connections. When specified, pooled connections are validated before being reused from the connection pool. The validation timeout is also used when the connection manager validates connections in response to a stale connection for PurgePolicy=ValidateAllConnections. A value of 0 means that connections are validated without applying any timeout. Validation timeout requires a JDBC driver that complies with the JDBC 4.0 specification or higher. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Validation timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.sybase"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for Sybase JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Sybase Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" default="5000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionProperties" use="optional" default="SELECT_OPENS_CURSOR=true" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectionProperties. Encrypted values can be configured for the javax.net.ssl.keyStorePassword and javax.net.ssl.trustStorePassword SSL properties by using the same process that is used for other data source passwords.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection properties</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="networkProtocol" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: networkProtocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Network protocol</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="socket"> 
                                <xsd:annotation> 
                                    <xsd:documentation>socket</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SSL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SSL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="resourceManagerName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: resourceManagerName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Resource manager name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="SERVER_INITIATED_TRANSACTIONS" use="optional" default="false"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: SERVER_INITIATED_TRANSACTIONS.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server initiated transactions</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="true"> 
                                <xsd:annotation> 
                                    <xsd:documentation>true</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>false</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="version" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: version.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Version</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.sybase-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.sybase"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.postgresql"> 
        <xsd:annotation> 
            <xsd:documentation>Data source properties for PostgreSQL JDBC driver.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>PostgreSQL Properties</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="Advanced" label="Advanced Properties">Additional properties for more advanced usage.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: databaseName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Server where the database is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="portNumber" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port on which to obtain database connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="applicationName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: applicationName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cancelSignalTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: cancelSignalTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cancel signal timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: connectTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connect timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="currentSchema" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: currentSchema.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Current schema</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultRowFetchSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: defaultRowFetchSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default row fetch size</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="loginTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: loginTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="preparedStatementCacheQueries" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: preparedStatementCacheQueries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Prepared statement cache queries</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readOnly" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: readOnly.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read only</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssl" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: ssl.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslCert" use="optional" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslCert.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL certificate location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslfactory" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslfactory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL factory class name</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslKey" use="optional" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslKey.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL key location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslMode" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslMode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL mode</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="disable"> 
                                <xsd:annotation> 
                                    <xsd:documentation>disable</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="allow"> 
                                <xsd:annotation> 
                                    <xsd:documentation>allow</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="prefer"> 
                                <xsd:annotation> 
                                    <xsd:documentation>prefer</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="require"> 
                                <xsd:annotation> 
                                    <xsd:documentation>require</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="verify-ca"> 
                                <xsd:annotation> 
                                    <xsd:documentation>verify-ca</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="verify-full"> 
                                <xsd:annotation> 
                                    <xsd:documentation>verify-full</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sslPassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslPassword.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL password</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRootCert" use="optional" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: sslRootCert.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL root certificate location</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="socketTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: socketTimeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket timeout</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetServerType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: targetServerType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Target server type</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="any"> 
                                <xsd:annotation> 
                                    <xsd:documentation>any</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="master"> 
                                <xsd:annotation> 
                                    <xsd:documentation>master</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="slave"> 
                                <xsd:annotation> 
                                    <xsd:documentation>slave</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="secondary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>secondary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="preferSlave"> 
                                <xsd:annotation> 
                                    <xsd:documentation>preferSlave</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="preferSecondary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>preferSecondary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="tcpKeepAlive" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>JDBC driver property: tcpKeepAlive.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP keep alive</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="URL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL for connecting to the database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional JDBC vendor properties for the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jdbc.dataSource.properties.postgresql-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jdbc.dataSource.properties.postgresql"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.metadata.context"> 
        <xsd:annotation> 
            <xsd:documentation>Makes the namespace of the application component that submits a contextual task available to the task.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Java EE Application Component Context</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.javaee.metadata.context-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.javaee.metadata.context"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.internal.JNDIEntry"> 
        <xsd:annotation> 
            <xsd:documentation>A single entry in the JNDI default namespace.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JNDI Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="jndiName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JNDI name to use for this entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI entry name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JNDI value to associate with the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI entry value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decode" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>True if value needs to be decoded on lookup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI decode value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.internal.JNDIEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jndi.internal.JNDIEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.internal.JNDIURLEntry"> 
        <xsd:annotation> 
            <xsd:documentation>A single entry in the JNDI default namespace that is used for binding java.net.URL entries.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JNDI URL Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="jndiName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JNDI name to use for this entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI URL entry name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JNDI URL value to associate with the name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI URL entry value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.internal.JNDIURLEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jndi.internal.JNDIURLEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.referenceEntry.properties"> 
        <xsd:annotation> 
            <xsd:documentation>The properties for the reference entry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional properties for the reference entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.referenceEntry.properties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jndi.referenceEntry.properties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.objectFactory"> 
        <xsd:annotation> 
            <xsd:documentation>ObjectFactory to be used by a JNDI Reference entry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JNDI Object Factory</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="library" minOccurs="0" maxOccurs="1" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Library containing the factory implementation class.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="className" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>ObjectFactory implementation class name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Factory class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="objectClassName" use="optional" default="java.lang.Object" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Type of object returned from the factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Object class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Library containing the factory implementation class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.objectFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jndi.objectFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.referenceEntry"> 
        <xsd:annotation> 
            <xsd:documentation>Reference entry in the JNDI default namespace.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JNDI Reference Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="factory" type="com.ibm.ws.jndi.objectFactory"> 
                <xsd:annotation> 
                    <xsd:documentation>Object factory for the reference entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Object Factory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties" type="com.ibm.ws.jndi.referenceEntry.properties"> 
                <xsd:annotation> 
                    <xsd:documentation>The properties for the reference entry.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="jndiName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for the reference entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="factoryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Object factory for the reference entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Object factory reference</ext:label> 
                    <ext:reference>jndiObjectFactory</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decode" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>True if value needs to be decoded on lookup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI decode value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jndi.referenceEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jndi.referenceEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jpacomponent"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for the Java Persistence API container.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JPA Container</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="excludedApplication" minOccurs="0" maxOccurs="unbounded" default="" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>An application to be excluded from JPA processing.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Excluded application</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="defaultJtaDataSourceJndiName" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Default Java™ Transaction API (JTA) data source JNDI name to be used by applications running in this server. By default, data sources are JTA. Only data sources that are transactional are allowed in this field.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default JTA data source JNDI name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultNonJtaDataSourceJndiName" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Default non-transactional data source JNDI name to be used by applications running in this server. Only data sources that have been marked as non-transactional are allowed in this field.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default non-JTA data source JNDI name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultPersistenceProvider" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Default persistence provider class name. If this property is not specified, the default provider is dependent on which JPA feature is enabled.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default persistence provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="entityManagerPoolCapacity" use="optional" default="-1" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>EntityManager pool capacity per PersistenceContext reference. The minimum is 0 and the maximum is 500.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>EntityManager pool capacity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreDataSourceErrors" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If true, errors that occur while attempting to lookup a data source specified by the &lt;jta-data-source&gt; or &lt;non-jta-data-source&gt; elements in the persistence.xml file are reported and ignored, which allows the persistence provider to determine a default data source. If false, the errors are propagated to the persistence provider so that the errors can be diagnosed more easily, but misconfigured applications might not work. By default, this property is true if JPA 2.0 is enabled and false otherwise.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore data source errors</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jsp.2.2"> 
        <xsd:annotation> 
            <xsd:documentation>JSP 2.2 configuration</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JSP Engine</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="disableJspRuntimeCompilation" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disable compilation of JSPs at runtime.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable JSP runtime compilation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="extendedDocumentRoot" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Directory that the JSP engine will search for additional JSP files to serve.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Extended document root</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jdkSourceLevel" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Default Java source level for JSPs compiled by the JSP engine.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JDK source level</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="13"> 
                                <xsd:annotation> 
                                    <xsd:documentation>13</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="14"> 
                                <xsd:annotation> 
                                    <xsd:documentation>14</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="15"> 
                                <xsd:annotation> 
                                    <xsd:documentation>15</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="16"> 
                                <xsd:annotation> 
                                    <xsd:documentation>16</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="17"> 
                                <xsd:annotation> 
                                    <xsd:documentation>17</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="18"> 
                                <xsd:annotation> 
                                    <xsd:documentation>18</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="keepGenerated" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Keep Java source files generated for JSPs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keep generated Java source</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useInMemory" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Generate Java source and classes in memory (without writing to disk).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Store compiled JSPs in memory only</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recompileJspOnRestart" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Recompile JSPs after an application is restarted. JSPs are recompiled on first access.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recompile JSPs on restart</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useImplicitTagLibs" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow JSPs to use jsx and tsx tag libs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use implicit tag libs</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableResourceInjection" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disable injection of resources into JSPs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable resource injection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="prepareJSPs" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>When this attribute is present, all JSPs larger than the value (in kilobytes) are compiled at application server startup.  Set this to 0 to compile all JSPs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Translate and compile JSPs on startup</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scratchdir" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>When this attribute is set, the JSPs are compiled to the specified directory instead of the server workarea directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Directory where generated class files are created</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJDKCompiler" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When this attribute is set, the JSPs are compiled by using the Java SDK compiler.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Compile JSPs with the Java SDK compiler</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jwt.builder"> 
        <xsd:annotation> 
            <xsd:documentation>Information about configuring the builder. The elements and attributes that you specify are used to build the token.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JWT Builder</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="audiences" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The trusted audience list to be included in the aud claim in the JSON web token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted audiences</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="claims" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify a comma separated list of claims to include in the token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Supported claims</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="id" use="optional" default="defaultJWT" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>This ID is used to identify the JWT builder. If an ID value is not specified, the builder is not processed. The ID must be a URL-safe string. The ID is used as part of the issuer value if the issuer configuration attribute is not specified. The JwtBuilder API uses this ID to determine which builder configuration to use to construct JWTs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Builder ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuer" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An Issuer is a case-sensitive URL using the HTTP or HTTPS scheme that contains scheme, host, and optionally port number and path components.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether to use JWK to sign the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable JSON web key (JWK)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="expiry" use="optional" default="2h" type="hourDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates the token expiration time in hours. ExpiresInSeconds takes precedence if present. Specify a positive integer followed by the unit of time, which can be hours (h). For example, specify 12 hours as 12h.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token expiration time in hours</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="expiresInSeconds" use="optional" default="-1" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates the token expiration time in seconds. Takes precedence over expiry. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token expiration time in seconds</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>scope.desc=Specify a white space separated list of OAuth scopes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Supported scopes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="RS256"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the signature algorithm that will be used to sign the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWT token signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="RS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the RS256 signature algorithm to sign and verify tokens.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the HS256 signature algorithm to sign and verify tokens.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sharedKey" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the string that will be used to generate the shared keys. The value can be stored in clear text or in the more secure encoded form. Use the securityUtility tool with the encode option to encode the shared key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared secret</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jti" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether to generate a unique id for the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JTI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the private key necessary for signing the token with an asymmetric algorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A key alias name that is used to locate the private key for signing the token with an asymmetric algorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jwt.builder-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.jwt.builder"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jwt.consumer"> 
        <xsd:annotation> 
            <xsd:documentation>The JWT consumer information to validate the JWT token.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JWT Consumer</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="audiences" minOccurs="0" maxOccurs="unbounded" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The trusted audience list to be included in the aud claim in the JSON web token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted audiences</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>This ID is used to identify the JWT consumer. If an ID value is not specified, the consumer is not processed. The ID must be a URL-safe string. The JwtConsumer API uses this ID to determine which consumer configuration to use to consume JWTs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Consumer ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuer" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An Issuer is a case-sensitive URL using the HTTP or HTTPS scheme that contains scheme, host, and optionally port number and path components.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sharedKey" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the string that will be used to generate the shared keys. The value can be stored in clear text or in the more secure encoded form. Use the securityUtility tool with the encode option to encode the shared key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared secret</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="RS256"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the signature algorithm that will be used to sign the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWT token signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="RS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the RS256 signature algorithm to sign and verify tokens.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the HS256 signature algorithm to sign and verify tokens.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="trustStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the public key necessary for verifying a signature of the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A trusted key alias for using the public key to verify the signature of the token</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trusted alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>This is used to specify the allowed clock skew in minutes when validating the JSON web token. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The time difference allowed between systems</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether to use JWK to sign the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable JSON web key (JWK)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JWK end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JSON web key(JWK) end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the OpenID Connect provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the JWT Consumer creates HTTP client connections. Set this property to true if you want the connections to use the http* and javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jwt.consumer-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.jwt.consumer"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.jwtsso"> 
        <xsd:annotation> 
            <xsd:documentation>Information about configuring JWT Single Sign On.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JWT SSO</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="cookieName" use="optional" default="JWT" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the cookie that is used to store the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of cookie</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="setCookieSecureFlag" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set the secure flag on the JWT cookie to send it only over a secured connection. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Set secure flag on JWT cookie</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeLtpaCookie" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>After successful authentication with a JWT token, include an LTPA cookie in addition to the JWT cookie.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include LTPA cookie</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useLtpaIfJwtAbsent" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the JWT cookie is missing, attempt to process an LTPA cookie if it is present. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use LTPA cookie if JWT cookie is not present</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwtBuilderRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A reference to the JWT Builder configuration element in server.xml that describes how to build the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWT builder reference</ext:label> 
                    <ext:reference>jwtBuilder</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.mp.jwt"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration to process the MicroProfile JWT token.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>MicroProfile JWT</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="audiences" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The trusted audience list to be included in the aud claim in the JSON web token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted audiences</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The unique ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique ID</ext:label> 
                    <ext:unique>uniqueId</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwksUri" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON Web Key service URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK endpoint url</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="upn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim will be used as user principal to authenticate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User principal claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used for SSL connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a trusted key alias for using the public key to verify the signature of the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Verification key name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuer" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The url of the issuer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupNameAttribute" use="optional" default="groups" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim will be used as the user group membership.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to a registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenReuse" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the token can be re-used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Re-use the token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>This is used to specify the allowed clock skew in minutes when validating the JSON web token. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The time difference allowed between systems</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreApplicationAuthMethod" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Ignore the configured authentication method in the application. Allow legacy applications that do not configure MP-JWT as their authentication method to use MicroProfile JWT token if one is included in the request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sharedKey" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the string that will be used to generate the shared keys for HS256 signatures. The value can be stored in clear text or in the more secure encoded form. Use the securityUtility tool with the encode option to encode the shared key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared secret</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the JWT Consumer creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="RS256"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the signature algorithm that will be used to sign the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWT token signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="RS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%tokenSignAlgorithm.RS256</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%tokenSignAlgorithm.HS256</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.mp.jwt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.mp.jwt"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.kernel.feature"> 
        <xsd:annotation> 
            <xsd:documentation>Defines how the server loads features.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Feature Manager</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="feature" minOccurs="0" maxOccurs="unbounded" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a feature to be used when the server runs.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Feature</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="onError" use="optional" default="WARN"> 
            <xsd:annotation> 
                <xsd:documentation>Action to take after a failure to load a feature. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>On error</ext:label> 
                    <ext:variable>onError</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="WARN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAIL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.threading"> 
        <xsd:annotation> 
            <xsd:documentation>Defines settings for the Liberty kernel default executor.  Note that there is always one and exactly one default executor, for use by the Liberty runtime only and not directly accessible by applications.  Applications that need to configure and utilize executors should instead use Managed Executors.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Executor Management</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" default="Default Executor" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the Liberty kernel default executor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxThreads" use="optional" default="-1" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of threads that can be associated with the executor. If greater than 0, maxThreads can be a minimum of 4, and should be at least as large as coreThreads; if maxThreads is set less than coreThreads, Liberty will reduce coreThreads to the maxThreads value.  If the value of maxThreads is less than or equal to 0, the maximum number of threads is unbounded, which lets the Liberty kernel decide how many threads to associate with the executor without having a defined upper boundary.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum threads</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="coreThreads" use="optional" default="-1" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Baseline or minimum number of threads to associate with the executor. The number of threads associated with the executor will quickly grow to this number. If this value is less than 0, a default value is used, calculated based on the number of hardware threads on the system. If the value is a positive number less than 4, then a default value of 4 is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Core threads</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.config"> 
        <xsd:annotation> 
            <xsd:documentation>Defines how the server processes configuration information.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Configuration Management</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="onError" use="optional" default="WARN"> 
            <xsd:annotation> 
                <xsd:documentation>Action to take after a incurring a configuration error. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>On error</ext:label> 
                    <ext:variable>onError</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="WARN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAIL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="monitorInterval" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Rate at which the server checks for configuration updates. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Update polling rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="updateTrigger" use="optional" default="polled"> 
            <xsd:annotation> 
                <xsd:documentation>Configuration update method or trigger.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Update trigger</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="polled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will scan for changes at the polling interval on all the configuration files and update the runtime configuration with the changes detected.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="mbean"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will only update the configuration when prompted by the FileNotificationMbean. The FileNotificationMbean is typically called by an external program such as an integrated development environment or a management application.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Disables all update monitoring. Configuration changes will not be applied while the server is running.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies a set of files starting from a base directory and matching a set of patterns.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Fileset</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="dir" use="optional" default="${server.config.dir}" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>The base directory to search for files.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base directory</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="caseSensitive" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Boolean to indicate whether or not the search should be case sensitive (default: true).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Case sensitive</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includes" use="optional" default="*" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The comma or space separated list of file name patterns to include in the search results (default: *).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Includes pattern</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="excludes" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The comma or space separated list of file name patterns to exclude from the search results, by default no files are excluded.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Excludes pattern</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scanInterval" use="optional" default="0" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Scanning interval to check the fileset for changes as a long with a time unit suffix h-hour, m-minute, s-second, ms-millisecond (e.g. 2ms or 5s). Disabled (scanInterval=0) by default. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scan interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.kernel.metatype.helper.fileset-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.kernel.metatype.helper.fileset"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.secureway"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of IBM SecureWay Directory Server LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>IBM SecureWay Directory Server LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=ePerson))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="*:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="groupOfNames:member;groupOfUniqueNames:uniqueMember" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.secureway-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.secureway"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for the LDAP user registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP User Registry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="failoverServers" type="com.ibm.ws.security.registry.ldap.config.failoverServers-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>List of LDAP failover servers.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>LDAP Failover Servers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="activedFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.actived"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of Microsoft Active Directory LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Microsoft Active Directory LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="customFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.custom"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of Custom LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="domino50Filters" type="com.ibm.ws.security.registry.ldap.internal.filters.domino50"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of IBM Lotus Domino LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>IBM Lotus Domino LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="edirectoryFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.eDirectory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of Novell eDirectory LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Novell eDirectory LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="idsFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.ids"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of IBM Tivoli Directory Server LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>IBM Tivoli Directory Server LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="iplanetFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.iPlanet"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of Sun Java System Directory Server LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Sun Java System Directory Server LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="netscapeFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.netscape"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of Netscape Directory Server LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Netscape Directory Server LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="securewayFilters" type="com.ibm.ws.security.registry.ldap.internal.filters.secureway"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the list of IBM SecureWay Directory Server LDAP filters.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>IBM SecureWay Directory Server LDAP Filters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="ldapEntityType" type="com.ibm.ws.security.wim.adapter.ldap.entityType-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Configure the LDAP object class, search filters, search bases and LDAP relative distinguished name (RDN) for Person, Group and Organizational Unit. For example, the Group entity type can have a search filter such as (&amp;(ObjectCategory=Groupofnames)(ObjectClass=Groupofnames)) and the object class as Groupofnames with search base ou=iGroups,o=ibm,c=us.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>LDAP Entity Types</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="groupProperties" type="com.ibm.ws.security.wim.adapter.ldap.groupConfiguration"> 
                <xsd:annotation> 
                    <xsd:documentation>The configuration for group membership properties (for example; memberAttribute or membershipAttribute).</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Configure the LDAP Group Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="attributeConfiguration" type="com.ibm.ws.security.wim.adapter.ldap.attributeConfiguration"> 
                <xsd:annotation> 
                    <xsd:documentation>The configuration that maps the LDAP attributes with the user registry schema (for example; Person, PersonAccount or Group) field names.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>LDAP Attributes Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="contextPool" type="com.ibm.ws.security.wim.adapter.ldap.contextPool"> 
                <xsd:annotation> 
                    <xsd:documentation>Properties of the context pool.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Context Pool Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="ldapCache" type="com.ibm.ws.security.wim.adapter.ldap.cacheConfig"> 
                <xsd:annotation> 
                    <xsd:documentation>Configure the attributes of the cache.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Cache Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="host" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Address of the LDAP server in the form of an IP address or a domain name service (DNS) name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="required" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Port number of the LDAP server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="baseDN" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Base distinguished name (DN) of the directory service, which indicates the starting point for LDAP searches in the directory service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base distinguished name (DN)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ldapType" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>Type of LDAP server to which a connection is established.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP server type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Microsoft Active Directory"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use Microsoft Active Directory.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Custom"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use a custom LDAP server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IBM Lotus Domino"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use IBM Lotus Domino.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Novell eDirectory"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use Novell eDirectory.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IBM Tivoli Directory Server"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%ldapType.ibm_dir_server</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Sun Java System Directory Server"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use Sun Java System Directory Server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Netscape Directory Server"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use Netscape Directory Server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IBM SecureWay Directory Server"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Configure the LDAP registry to use IBM SecureWay Directory Server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="realm" use="optional" default="LdapRegistry" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The realm name that represents the user registry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bindDN" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Distinguished name (DN) for the application server, which is used to bind to the directory service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bind distinguished name (DN)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bindPassword" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password for the bind DN. The value can be stored in clear text or encoded form. It is recommended that you encode the password. To do so, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bind password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreCase" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Perform a case-insensitive authentication check.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore case for authorization</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recursiveSearch" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Performs a nested group search. Select this option only if the LDAP server does not support recursive server-side searches.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Perform a nested group search</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reuseConnection" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Requests the application server to reuse the LDAP server connection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reuse connection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether an SSL connection should be made to the LDAP server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ldap ssl enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>ID of the SSL configuration to be used to connect to the SSL-enabled LDAP server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="searchTimeout" use="optional" default="1m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum time for an LDAP server to respond before a request is canceled. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Search timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectTimeout" use="optional" default="1m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum time for establishing a connection to the LDAP server. A value of 0 indicates that the TCP protocol's timeout value should be used. The program logs an error message if the specified time expires. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout for establishing an LDAP connection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="readTimeout" use="optional" default="1m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum time to wait for read operations for LDAP operations. A value of 0 indicates that no timeout exists and the read waits indefinitely. The program logs an error message if the specified time expires. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout for reading from an LDAP connection</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="certificateMapMode" use="optional" default="EXACT_DN"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the X.509 certificate authentication mapping mode for the LDAP registry: CUSTOM, EXACT_DN, CERTIFICATE_FILTER, or NOT_SUPPORTED.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate map mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="EXACT_DN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The LDAP registry attempts X.509 certificate authentication by mapping the PrincipalName value in the X.509 certificate to the exact distinguished name (DN) in the repository. If a single matching entity is found, the authentication is successful. If a matching entity is not found or more than a single matching entity is found, authentication fails and the program returns an error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CERTIFICATE_FILTER"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The LDAP registry attempts X.509 certificate authentication by using the certificate filter mapping property for the LDAP filter. If a single matching entity is found, the authentication is successful. If a matching entity is not found or more than a single matching entity is found, authentication fails and the program returns an error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CUSTOM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The LDAP registry attempts X.509 certificate authentication by using the custom CertificateMapper implementation specified by the certificateMapperId attribute. If a single matching entity is found, the authentication is successful. If a matching entity is not found or more than a single matching entity is found, authentication fails and the program returns an error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NOT_SUPPORTED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The LDAP registry does not support X.509 certificate authentication. Attempts to authenticate with an X.509 certificate fail, and a CertificateMapNotSupportedException is thrown.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="certificateFilter" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the filter certificate mapping property for the LDAP filter when the X.509 certificate authentication mapping mode is CERTIFICATE_FILTER. The filter is used to map attributes in the client certificate to entries in the LDAP registry. For example, the filter can be specified as: uid=${SubjectCN}.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate map filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="certificateMapperId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the X509CertificateMapper to use when the X.509 certificate authentication mapping mode is CUSTOM. The value must match the value of the 'x509.certificate.mapper.id' property that is specified for the X509CertificateMapper implementation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate mapper ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="activedFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of Microsoft Active Directory LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Microsoft active directory ldap filters reference</ext:label> 
                    <ext:reference>activedLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="customFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of Custom LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom ldap filters reference</ext:label> 
                    <ext:reference>customLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="domino50FiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of IBM Lotus Domino LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IBM lotus domino ldap filters reference</ext:label> 
                    <ext:reference>domino50LdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="edirectoryFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of Novell eDirectory LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Novell eDirectory ldap filters reference</ext:label> 
                    <ext:reference>edirectoryLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idsFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of IBM Tivoli Directory Server LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IBM tivoli directory ldap filters reference</ext:label> 
                    <ext:reference>idsLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="iplanetFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of Sun Java System Directory Server LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sun java system directory ldap filters reference</ext:label> 
                    <ext:reference>iplanetLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="netscapeFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of Netscape Directory Server LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Netscape directory server ldap filters reference</ext:label> 
                    <ext:reference>netscapeLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securewayFiltersRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the list of IBM SecureWay Directory Server LDAP filters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IBM secureWay directory ldap filters reference</ext:label> 
                    <ext:reference>securewayLdapFilterProperties</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="referral" use="optional" default="ignore"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the behavior for LDAP referrals. The default behavior is to ignore referrals.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP referral handling</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ignore"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Ignore LDAP referrals.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="follow"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Follow LDAP referrals.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="primaryServerQueryTimeInterval" use="optional" default="15" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The interval, in minutes, at which the virtual member manager tests the primary server for availability.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Primary server query time interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="returnToPrimaryServer" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A boolean value that indicates if the search should be done against the Primary Server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Return to primary server</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timestampFormat" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A string value that provides a SimpleDateFormat pattern that is used to parse timestamp attribute values. For example, you can use 'yyyyMMddHHmmss.SSSZ' to parse '20181120214852.869-0000Z'. If this attribute is not defined, a default will be provided based on ldapType.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timestamp format</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.config.registryBaseEntry"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the registry base entry. The sub-tree under this node will also be part of the repository.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Registry Base Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="baseDN" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Base distinguished name (DN) of the directory service, which indicates the starting point for LDAP searches in the directory service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base distinguished name (DN)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The base name of the registry base entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.config.registryBaseEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.config.registryBaseEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attributeCache"> 
        <xsd:annotation> 
            <xsd:documentation>The attribute cache properties.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Attribute Cache</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A Boolean value to indicate that the property is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="size" use="optional" default="2000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the number of entities that can be stored in the cache. You can increase the size of the cache based on the number of entities that are required to be stored in the cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeout" use="optional" default="1200s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the maximum time that the contents of the LDAP attribute cache are available. When the specified time has elapsed, the LDAP attribute cache is cleared. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sizeLimit" use="optional" default="2000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of attributes per LDAP entity that will be cached.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum entity attributes cached</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attributeCache-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.attributeCache"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.eDirectory"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of Novell eDirectory LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Novell eDirectory LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(cn=%v)(objectclass=Person))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(objectclass=groupOfNames))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="person:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="groupOfNames:member" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.eDirectory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.eDirectory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.actived"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of Microsoft Active Directory LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Microsoft Active Directory LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(sAMAccountName=%v)(objectcategory=user))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(objectcategory=group))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="user:sAMAccountName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="memberOf:member" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.actived-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.actived"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attributeConfiguration"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration that defines the mapping of LDAP attributes with the user registry schema field names.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Attributes Mapping Definition</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="attribute" type="com.ibm.ws.security.wim.adapter.ldap.attribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Define the user registry schema field names to be mapped to the LDAP attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>LDAP Attribute Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="externalIdAttribute" type="com.ibm.ws.security.wim.adapter.ldap.externalIdAttribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Define the name of the LDAP attribute and its properties that needs to be mapped to the user registry externalId attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>ExternalId Attribute Mapping Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attributeConfiguration-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.attributeConfiguration"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attribute"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the LDAP attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Attribute</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the LDAP attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP attribute name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="propertyName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The user registry schema field name that needs to be mapped with the LDAP attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry property name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultValue" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The default value of the attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="syntax" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The attribute syntax.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Syntax</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="entityType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The entity type of the attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Entity type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.attribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.attribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.groupConfiguration"> 
        <xsd:annotation> 
            <xsd:documentation>The attributes of the LDAP group configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Group Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="memberAttribute" type="com.ibm.ws.security.wim.adapter.ldap.memberAttribute-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The LDAP member attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Member Attribute</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="membershipAttribute" type="com.ibm.ws.security.wim.adapter.ldap.membershipAttribute"> 
                <xsd:annotation> 
                    <xsd:documentation>The configuration for the membership attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Membership Attribute</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="dynamicMemberAttribute" type="com.ibm.ws.security.wim.adapter.ldap.dynamicMemberAttribute"> 
                <xsd:annotation> 
                    <xsd:documentation>The configuration for the dynamic member attribute.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Dynamic Member Attribute</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.groupConfiguration-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.groupConfiguration"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.dynamicMemberAttribute"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the LDAP dynamic member attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Dynamic Member Attribute</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the member.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Member name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="objectClass" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the object class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Object class</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.dynamicMemberAttribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.dynamicMemberAttribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.ids"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of IBM Tivoli Directory Server LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>IBM Tivoli Directory Server LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=ePerson))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="*:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="ibm-allGroups:member;ibm-allGroups:uniqueMember;groupOfNames:member;groupOfUniqueNames:uniqueMember" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.ids-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.ids"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.externalIdAttribute"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the LDAP externalId attribute mapping.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP ExternalId Attribute</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the LDAP attribute to be used for the user registry externalId attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name in LDAP</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="syntax" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The attribute syntax.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Syntax</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="entityType" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The entity type of the attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Entity type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoGenerate" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When enabled, the externalId attribute value is generated automatically by the user registry instead of using the value that is stored in LDAP. By default it is disabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto generate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.externalIdAttribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.externalIdAttribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.memberAttribute"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the LDAP member attributes.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Member Attributes</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the member.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Member name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="objectClass" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The object class of the member attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Object class</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The scope of the member attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dummyMember" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the dummy member.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Dummy member</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.memberAttribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.memberAttribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config.failoverServers.server"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for LDAP failover server.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Failover Server Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="host" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>LDAP server host name, which can be either an IP address or a domain name service (DNS) name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP failover host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="required" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>LDAP failover server port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP failover port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config.failoverServers.server-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.config.failoverServers.server"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config.failoverServers"> 
        <xsd:annotation> 
            <xsd:documentation>List of LDAP failover servers.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Failover Servers</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="server" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.registry.ldap.config.failoverServers.server-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Configuration properties for LDAP failover server.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>LDAP Failover Server Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Configuration properties for LDAP failover servers. Specify it as a backup server for the primary LDAP servers. For example, &lt;failoverServers name="failoverLdapServers"&gt;&lt;server host="myfullyqualifiedhostname1" port="389"/&gt;&lt;server host="myfullyqualifiedhostname2" port="389"/&gt;&lt;/failoverServers&gt;.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LDAP failover servers name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.config.failoverServers-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.config.failoverServers"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.entityType"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the supported LDAP entity type.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Supported LDAP Entity Type</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="objectClass" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The object class defined for the given LDAP entity type in the LDAP server. For example, the object class for the group LDAP entity type can be Groupofnames.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Object class</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="searchBase" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the sub tree of the LDAP server for the search call for the given entity type which will override the base DN in search operations. For example, if the base DN is o=ibm,c=us and the search base for the PersonAccount entity type is defined to be ou=iUsers,o=ibm,c=us, then all search calls for PersonAccout will be made under subtree ou=iUsers,o=ibm,c=us. Multiple search bases can be configured for the same entity type.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Search base</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the LDAP entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="searchFilter" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A custom LDAP search expression used while searching for entity types. For example, searchFilter="(|(ObjectCategory=User)(ObjectClass=User))".</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Search filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.entityType-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.entityType"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.iPlanet"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of Sun Java System Directory Server LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Sun Java System Directory Server LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=inetOrgPerson))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(objectclass=ldapsubentry))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="inetOrgPerson:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="nsRole:nsRole" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.iPlanet-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.iPlanet"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.domino50"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of IBM Lotus Domino LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>IBM Lotus Domino LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=Person))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(objectclass=dominoGroup))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="person:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="dominoGroup:member" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.domino50-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.domino50"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.cacheConfig"> 
        <xsd:annotation> 
            <xsd:documentation>Configure the attributes of the cache.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Cache</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="attributesCache" type="com.ibm.ws.security.wim.adapter.ldap.attributeCache"> 
                <xsd:annotation> 
                    <xsd:documentation>The attribute cache properties configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Attribute Cache Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="searchResultsCache" type="com.ibm.ws.security.wim.adapter.ldap.searchResultsCache"> 
                <xsd:annotation> 
                    <xsd:documentation>The configuration for the search results cache.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Search Results Cache Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.cacheConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.cacheConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.contextPool"> 
        <xsd:annotation> 
            <xsd:documentation>Configure the attributes of the context pool.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Context Pool</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A boolean value that determines if the context pool is enabled. Disabling it can cause performance degradation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context pool enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="initialSize" use="optional" default="1" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>An integer value that determines the initial size of the context pool. Set this based on the load on the repository.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initial size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxSize" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>An integer value that defines the maximum context pool size. Set this based on the maximum load on the repository.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeout" use="optional" default="0s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The duration after which the context pool times out. An integer that represents the time that an idle context instance can remain in the pool without being closed and removed from the pool. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s) or milliseconds (ms). For example, specify 1 second as 1s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 1.5 minutes. The minimum timeout allowed is 1 second. Millisecond entries are rounded to the nearest second. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="waitTime" use="optional" default="3s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The duration after which the context pool times out. The time interval that the request waits until the context pool checks again if an idle context instance is available in the pool when the number of context instances reaches the maximum pool size. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Wait time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="preferredSize" use="optional" default="3" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The preferred size of the context pool. Set this based on the load on the repository.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Preferred size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.contextPool-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.contextPool"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.custom"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of Custom LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Custom LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=ePerson))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="*:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="ibm-allGroups:member;ibm-allGroups:uniqueMember;groupOfNames:member;groupOfUniqueNames:uniqueMember" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.custom-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.custom"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.searchResultsCache"> 
        <xsd:annotation> 
            <xsd:documentation>The cache for the search results.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Search Results Cache</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A Boolean value to indicate that the property is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="size" use="optional" default="2000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The size of the cache. The number of search results that are stored in the cache. This needs to be configured based on the number of search queries executed on the system and the hardware system resources available.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeout" use="optional" default="1200s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the maximum time that the contents of the search results cache are available. When the specified time has elapsed, the search results cache is cleared. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="resultsSizeLimit" use="optional" default="2000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of results that can be cached for a single LDAP search.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum search results cached</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.searchResultsCache-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.searchResultsCache"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.rdnProperty"> 
        <xsd:annotation> 
            <xsd:documentation>The RDN property to be used for each configured object class.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Relative Distinguished Name Property</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="objectClass" minOccurs="1" maxOccurs="unbounded" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The name of the object class.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Object class</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.rdnProperty-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.rdnProperty"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.netscape"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of Netscape Directory Server LDAP filters.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Netscape Directory Server LDAP Filters</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userFilter" use="optional" default="(&amp;(uid=%v)(objectclass=inetOrgPerson))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for users.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupFilter" use="optional" default="(&amp;(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter clause for searching the user registry for groups.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdMap" use="optional" default="inetOrgPerson:uid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a user to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdMap" use="optional" default="*:cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that maps the name of a group to an LDAP entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupMemberIdMap" use="optional" default="groupOfNames:member;groupOfUniqueNames:uniqueMember" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>An LDAP filter that identifies user to group memberships.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group member ID map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.registry.ldap.internal.filters.netscape-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.registry.ldap.internal.filters.netscape"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.membershipAttribute"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration for the LDAP membership attribute.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LDAP Membership Attribute</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the membership attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Membership attribute name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The scope of the membership attribute.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.adapter.ldap.membershipAttribute-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.adapter.ldap.membershipAttribute"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.logging"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the capture and output of log and trace messages.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Logging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="maxFileSize" use="optional" default="20"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum size (in MB) that a log file can reach before it is rolled. The Liberty runtime does only size-based log rolling. To disable this attribute, set the value to 0. The maximum file size is approximate. By default, the value is 20. Note: maxFileSize does not apply to the console.log file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum log file size</ext:label> 
                    <ext:variable>com.ibm.ws.logging.max.file.size</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxFiles" use="optional" default="2"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of log files that are kept before the oldest file is removed; a value of 0 means no limit. If an enforced maximum file size exists, this setting is used to determine how many of each of the log files are kept. This setting also applies to the number of exception logs that summarize exceptions that occurred on a particular day. So if this number is 10, you might have 10 message logs, 10 trace logs, and 10 exception summaries in the ffdc/directory. By default, the value is 2. Note: maxFiles does not apply to the console.log file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum log files</ext:label> 
                    <ext:variable>com.ibm.ws.logging.max.files</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="logDirectory" use="optional" default="${server.output.dir}/logs" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>You can use this attribute to set a directory for all log files, excluding the console.log file, but including FFDC. By default, logDirectory is set to the LOG_DIR environment variable. The default LOG_DIR environment variable path is WLP_OUTPUT_DIR/serverName/logs. Avoid trouble: Use the LOG_DIR environment variable or the com.ibm.ws.logging.log.directory property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Log directory</ext:label> 
                    <ext:variable>com.ibm.ws.logging.log.directory</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="messageFileName" use="optional" default="messages.log" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the file to which message output is written relative to the configured log directory. The default value is messages.log. This file always exists and contains INFO and other (AUDIT, WARNING, ERROR, FAILURE) messages, in addition to System.out and System.err. This log also contains time stamps and the issuing thread ID. If the log file is rolled over, the names of earlier log files have the format messages_timestamp.log. Avoid trouble: Use the com.ibm.ws.logging.message.file.name property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message file name</ext:label> 
                    <ext:variable>com.ibm.ws.logging.message.file.name</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFileName" use="optional" default="trace.log" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the file to which trace output is written relative to the configured log directory. The default value is trace.log. The trace.log file is only created if a traceSpecification is set including log levels below INFO. stdout is recognized as a special value and causes trace to be directed to the original standard out stream. Avoid trouble: Use the com.ibm.ws.logging.trace.file.name property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace file name</ext:label> 
                    <ext:variable>com.ibm.ws.logging.trace.file.name</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceSpecification" use="optional" default="*=info" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A trace specification that conforms to the trace specification grammar and specifies the initial state for various trace components. The trace specification is used to selectively enable trace. An empty value is allowed and treated as 'disable all trace'. Any component that is not specified is initialized to a default state of *=info.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace specification</ext:label> 
                    <ext:variable>com.ibm.ws.logging.trace.specification</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hideMessage" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The list of messages, which are separated by a comma, that are configured to be hidden from the console.log and messages.log files. If the messages are configured to be hidden, then they are redirected to the trace.log file. Avoid trouble: Use the com.ibm.ws.logging.hide.messages property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Messages to be hidden</ext:label> 
                    <ext:variable>com.ibm.ws.logging.hideMessage</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="messageSource" use="optional" default="message" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The list of comma-separated sources that route to the messages.log file. This property applies only when messageFormat=json. Valid values are message, trace, accessLog, ffdc, and audit. By default, messageSource is set to the environment variable WLP_LOGGING_MESSAGE_SOURCE (if set), or message. Note: To use the audit source, enable the Liberty audit feature. Avoid trouble: Use the WLP_LOGGING_MESSAGE_SOURCE environment variable or the com.ibm.ws.logging.message.source property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message source</ext:label> 
                    <ext:variable>com.ibm.ws.logging.message.source</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="messageFormat" use="optional" default="basic" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The required format for the messages.log file. Valid values are basic or JSON format. By default, messageFormat is set to the environment variable WLP_LOGGING_MESSAGE_FORMAT (if set), or basic. Avoid trouble: Use the WLP_LOGGING_MESSAGE_FORMAT environment variable or the com.ibm.ws.logging.message.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message format</ext:label> 
                    <ext:variable>com.ibm.ws.logging.message.format</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consoleSource" use="optional" default="message" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The list of comma-separated sources that route to the console/console.log. This property applies only when consoleFormat=json. Valid values are message, trace, accessLog, ffdc, and audit. By default, consoleSource is set to the environment variable WLP_LOGGING_CONSOLE_SOURCE (if set), or message. Note: To use the audit source, enable the Liberty audit feature. Avoid trouble: Use the WLP_LOGGING_CONSOLE_SOURCE environment variable or the com.ibm.ws.logging.console.source property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Console source</ext:label> 
                    <ext:variable>com.ibm.ws.logging.console.source</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consoleFormat" use="optional" default="basic" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The required format for the console. Valid values are basic or JSON format. By default, consoleFormat is set to the environment variable WLP_LOGGING_CONSOLE_FORMAT (if set), or basic. Avoid trouble: Use the WLP_LOGGING_CONSOLE_FORMAT environment variable or the com.ibm.ws.logging.console.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Console format</ext:label> 
                    <ext:variable>com.ibm.ws.logging.console.format</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="traceFormat" use="optional" default="ENHANCED"> 
            <xsd:annotation> 
                <xsd:documentation>This format is used for the trace log. Avoid trouble: Use the com.ibm.ws.logging.trace.format property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trace format</ext:label> 
                    <ext:variable>com.ibm.ws.logging.trace.format</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BASIC"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the basic trace format.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ENHANCED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the enhanced basic trace format.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ADVANCED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the advanced trace format.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="isoDateFormat" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The date and time use a locale-specific format or the ISO-8601 format. You can specify true or false for the value of the attribute or the value of the equivalent property. The default value is false. Avoid trouble: Use the com.ibm.ws.logging.isoDateFormat property, except in cases where you are trying to change the configuration dynamically after startup. If you specify a value of true, the ISO-8601 format is used in the messages.log file, the trace.log file, and the FFDC logs. The format is yyyy-MM-dd'T'HH:mm:ss.SSSZ. If you specify a value of false, the date and time are formatted according to the default locale set in the system. If the default locale is not found, the format is dd/MMM/yyyy HH:mm:ss:SSS z.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use the ISO 8601 date format</ext:label> 
                    <ext:variable>com.ibm.ws.logging.isoDateFormat</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consoleLogLevel" use="optional" default="AUDIT"> 
            <xsd:annotation> 
                <xsd:documentation>The logging level used to filter messages written to system streams. The valid values are INFO, AUDIT, WARNING, ERROR, and OFF. By default, the consoleLogLevel is set to the WLP_LOGGING_CONSOLE_LOGLEVEL environment variable (if set), or AUDIT. Note: Before you change this value, consider the information in the section "Unable to interact with the Liberty server after modifying the console log level settings" in the topic Developer Tools known restrictions. Avoid trouble: Use the WLP_LOGGING_CONSOLE_LOGLEVEL environment variable or the com.ibm.ws.logging.console.level property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Console log level</ext:label> 
                    <ext:variable>com.ibm.ws.logging.console.log.level</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="INFO"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Info, audit, and warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AUDIT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Audit and warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="WARNING"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Warning messages will be written to the system output stream. Error messages will be written to the system error stream.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ERROR"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Error messages will be written to the system error stream.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="OFF"> 
                                <xsd:annotation> 
                                    <xsd:documentation>No server output is written to system streams. Only JVM output is written to system streams.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="copySystemStreams" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If true, messages that are written to the System.out and System.err streams are copied to console.log. If false, those messages are written to configured logs such as messages.log or trace.log, but they are not copied to console.log. The default value is true. Avoid trouble: Use the com.ibm.ws.logging.console.copySystemStreams property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Copy System.out and System.err to system streams</ext:label> 
                    <ext:variable>com.ibm.ws.logging.copy.system.streams</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suppressSensitiveTrace" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The server trace can expose sensitive data when tracing untyped data, such as bytes received over a network connection. If true, prevent potentially sensitive information from being exposed in log and trace files. The default value is false. Avoid trouble: Use the com.ibm.ws.logging.filter.sensitive property, except in cases where you are trying to change the configuration dynamically after startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suppress sensitive trace</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jsonFieldMappings" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>When logs are in JSON format, use this attribute to replace default field names with new field names. Configure the new field name by using the following format: defaultFieldName:newFieldName. For field names that are associated with logs of a specified source, use the following format: [source:]?defaultFieldName:newFieldName, where [source] is the source you want to specify (such as message, trace, or accessLog). To rename multiple fields, specify a comma-separated list of field name mappings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JSON field names that are being replaced</ext:label> 
                    <ext:variable>com.ibm.ws.logging.json.field.mappings</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.logstash.collector.internal.LogstashCollector"> 
        <xsd:annotation> 
            <xsd:documentation>Logstash collector gathers data from various sources and forwards the data to a logstash server using Lumberjack protocol.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Logstash Collector</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="source" default="message" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a source to be used by the logstash collector.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Source</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tag" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the tags that are associated with the events from various sources.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Tag</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="hostName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Host name of the logstash server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>Port number of the logstash server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxFieldLength" use="optional" default="2048"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies maximum number of characters for the message field associated with the events for various sources. If you specify a value of 0 or -1, the maximum number of characters is unlimited.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum field length</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxEvents" use="optional" default="0"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the maximum number of events to be sent per second. If you specify a value greater than zero, then it will be used for throttling the events.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum events per second</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2147483647"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL repertoire that is used to connect to the logstash server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.token.ltpa.LTPAConfiguration"> 
        <xsd:annotation> 
            <xsd:documentation>Lightweight Third Party Authentication (LTPA) token configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>LTPA Token</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="keysFileName" use="optional" default="${server.output.dir}/resources/security/ltpa.keys" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Path of the file containing the token keys.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LTPA token keys file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keysPassword" use="optional" default="{xor}CDo9Hgw=" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password for the token keys. The value can be stored in clear text or encoded form. It is recommended to encode the password, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LTPA token keys password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="expiration" use="optional" default="120m" type="minuteDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time after which a token expires in minutes. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LTPA token expiration</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="monitorInterval" use="optional" default="0ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Rate at which the server checks for updates to the LTPA token keys file. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LTPA token keys file polling rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ejbcontainer.runtime"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the behavior of the EJB container. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>EJB Container</ext:label> 
                <ext:groupDecl id="Advanced"/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="asynchronous" type="com.ibm.ws.ejbcontainer.asynchronous.runtime"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines the behavior of EJB asynchronous methods.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB Asynchronous Methods</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="timerService" type="com.ibm.ws.ejbcontainer.timer.runtime"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines the behavior of the EJB timer service.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>EJB Timer Service</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="poolCleanupInterval" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The interval between removing unused bean instances.  This setting only applies to stateless session and message-driven beans. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Pool cleanup interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cacheSize" use="optional" default="2053"> 
            <xsd:annotation> 
                <xsd:documentation>The number of stateful session bean instances that should be cached in memory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="cacheCleanupInterval" use="optional" default="3s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The interval between passivating unused stateful session bean instances when the size is exceeded. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache cleanup interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="startEJBsAtAppStart" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when EJB types will be initialized. If this property is set to true, EJB types will be initialized at the time applications are first started. If this property is set to false, EJB types will be initialized at the time the EJB type is first used by an application. If this property is not set, the behavior is determined on a bean-by-bean basis from the start-at-app-start attribute in the ibm-ejb-jar-ext.xml file. This setting does not apply to either message-driven or startup singleton beans. Message-driven and startup singleton beans will always be initialized at the time applications are started.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Start EJBs at application start</ext:label> 
                    <ext:group id="Advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.mongo.mongo"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a Mongo instance.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Mongo</ext:label> 
                <ext:groupDecl id="MongoClientOptions" label="MongoClientOptions">Configuration for a MongoClientOptions instance.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="hostNames" default="localhost" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>List of host names. The ordering of this list must be consistent with the list of ports, such that the first element in the list of host names corresponds to the first element in the list of ports, and so forth.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Host names</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a library that contains the MongoDB Java Driver.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>MongoDB Java Driver Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="ports" default="27017"> 
                <xsd:annotation> 
                    <xsd:documentation>List of port numbers. The ordering of this list must be consistent with the list of host names, such that the first element in the list of host names corresponds to the first element in the list of ports, and so forth.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Port numbers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:int"> 
                                <xsd:minInclusive value="0"> 
                                </xsd:minInclusive> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="ssl" type="com.ibm.ws.ssl.repertoire"> 
                <xsd:annotation> 
                    <xsd:documentation>ID of the SSL configuration to be used to connect to the SSL-enabled server.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Secure Socket Layer Reference</ext:label> 
                        <ext:requires id="sslEnabled" value="true"/> 
                        <ext:group id="MongoClientOptions"/> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a library that contains the MongoDB Java Driver.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>MongoDB Java driver library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="onError" use="optional" default="WARN"> 
            <xsd:annotation> 
                <xsd:documentation>Determines the action to take in response to configuration errors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Action to take for configuration errors</ext:label> 
                    <ext:variable>onError</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="WARN"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue warning and error messages when it incurs a configuration error. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FAIL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will issue a warning or error message on the first error occurrence and then stop the server.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will not issue any warning and error messages when it incurs a configuration error.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password for database user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Database user name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useCertificateAuthentication" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Use provided certificate from key store to authenticate user to MongoDB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use certificate for authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoConnectRetry" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Retry connections to a server, for an interval up to the maxAutoConnectRetryTime, if the socket cannot be opened.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto connect retry</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionsPerHost" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Limits the number of open connections to each host. Connections are pooled when not in use.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection per host</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="connectTimeout" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Connection timeout for new connections. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connect timeout</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cursorFinalizerEnabled" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Attempts to clean up DBCursors that are not closed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cursor finalizer enabled</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="description" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Description of a Mongo instance.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Description</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxAutoConnectRetryTime" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Interval during which to retry attempts to open a connection to a server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum auto connect retry time</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxWaitTime" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum amount of time to wait for an available connection. If negative, the connection request never times out. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum wait time</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="socketKeepAlive" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether or not to keep sockets alive.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket keep alive</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="socketTimeout" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The socket timeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Socket timeout</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslEnabled" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures whether or not to enable SSL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure socket layer enabled</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>ID of the SSL configuration to be used to connect to the SSL-enabled server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure socket layer reference</ext:label> 
                    <ext:requires id="sslEnabled" value="true"/> 
                    <ext:group id="MongoClientOptions"/> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="threadsAllowedToBlockForConnectionMultiplier" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>This value, multiplied by connectionsPerHost, establishes an upper limit on threads that are allowed to wait for an available connection.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max blocking threads multiplier</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readPreference" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Configures the read preference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read preference</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="nearest"> 
                                <xsd:annotation> 
                                    <xsd:documentation>nearest</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="primary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>primary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="primaryPreferred"> 
                                <xsd:annotation> 
                                    <xsd:documentation>primaryPreferred</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="secondary"> 
                                <xsd:annotation> 
                                    <xsd:documentation>secondary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="secondaryPreferred"> 
                                <xsd:annotation> 
                                    <xsd:documentation>secondaryPreferred</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="writeConcern" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability of a write operation to the mongo server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write concern</ext:label> 
                    <ext:group id="MongoClientOptions"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ACKNOWLEDGED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ACKNOWLEDGED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ERRORS_IGNORED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ERRORS_IGNORED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FSYNC_SAFE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>FSYNC_SAFE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FSYNCED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>FSYNCED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JOURNAL_SAFE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JOURNAL_SAFE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="JOURNALED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>JOURNALED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MAJORITY"> 
                                <xsd:annotation> 
                                    <xsd:documentation>MAJORITY</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NONE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NORMAL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NORMAL</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REPLICA_ACKNOWLEDGED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>REPLICA_ACKNOWLEDGED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REPLICAS_SAFE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>REPLICAS_SAFE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SAFE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SAFE</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="UNACKNOWLEDGED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>UNACKNOWLEDGED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.mongo.mongo-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.mongo.mongo"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.mongo.mongoDB"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for a MongoDB DB instance.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>MongoDB DB</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="mongo" minOccurs="0" maxOccurs="1" type="com.ibm.ws.mongo.mongo"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the Mongo instance that this DB instance belongs to.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Mongo Instance</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="databaseName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mongoRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the Mongo instance that this DB instance belongs to.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Mongo instance reference</ext:label> 
                    <ext:reference>mongo</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jndiName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JNDI name for a MongoDB DB instance</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JNDI name</ext:label> 
                    <ext:unique>jndiName</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.mongo.mongoDB-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.mongo.mongoDB"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.monitor.internal.MonitoringFrameworkExtender"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for Monitoring Feature which includes enabled traditional PMI ,FineGrained and any future configurations updates.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Monitor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="enableTraditionalPMI" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Property to enable or disable Traditional PMI way of reporting.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable traditional PMI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="filter" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Allows user to enable/disable monitors based on group name such as WebContainer,JVM,ThreadPool,Session,ConnectionPool and so on.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Filtered (monitored) groups</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.appconfig.appProperties.property"> 
        <xsd:annotation> 
            <xsd:documentation>Provides a specific custom property to an application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>A Name/value Pair Describing A Property</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Provides name of the application scoped property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application scoped property name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Provides value of the application scoped property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application scoped property value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.appconfig.appProperties.property-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.appconfig.appProperties.property"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.appconfig.appProperties"> 
        <xsd:annotation> 
            <xsd:documentation>Provides custom properties to an application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Application Scoped Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.appconfig.appProperties.property-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Provides a specific custom property to an application.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>A Name/value Pair Describing A Property</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.microprofile.metrics"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for MicroProfile Metrics.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>MicroProfile Metrics</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="authentication" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not users should provide user name and password when accessing metrics endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.tokenmanager.role"> 
        <xsd:annotation> 
            <xsd:documentation>Security role for token management requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Token Manager Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.security.oauth20.user-factory"> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.security.oauth20.group-factory"> 
            </xsd:element> 
            <xsd:element name="special-subject" type="com.ibm.ws.security.oauth20.specialsubject-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.tokenmanager.role-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.tokenmanager.role"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.server.store"> 
        <xsd:annotation> 
            <xsd:documentation>Clients are defined in server.xml and tokens are cached in the server.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Local Store</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="client" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.oauth20.client-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="tokenStoreSize" use="optional" default="2000" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Token store size</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token store size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.server.store-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.server.store"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.specialsubject"> 
        <xsd:annotation> 
            <xsd:documentation>Special subject that has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Special Subject</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="type" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>One of the following special subject types: ALL_AUTHENTICATED_USERS, EVERYONE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Special subject type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ALL_AUTHENTICATED_USERS"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All authenticated users.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="EVERYONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All users for every request, even if the request was not authenticated.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.specialsubject-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.specialsubject"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider.custom.store"> 
        <xsd:annotation> 
            <xsd:documentation>Clients are defined, and tokens and consents are cached in a custom OAuthStore implementation.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Custom OAuthStore</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="storeId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuthStore ID to use for a custom store. The value must match the value of the oauth.store.id property that is specified for the OAuthStore implementation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom OAuthStore ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cleanupExpiredInterval" use="optional" default="3600" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The interval to use for cleaning up expired tokens and consents from the custom OAuthStore implementation. The valid range is 0 to Integer.MAX_VALUE in seconds. A value of 0 indicates that no cleanup is performed. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom OAuthStore cleanup interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider.custom.store-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.provider.custom.store"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.roles"> 
        <xsd:annotation> 
            <xsd:documentation>OAuth web application security role map.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OAuth Role Map</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authenticated" type="com.ibm.ws.security.oauth20.authenticated.role-factory"> 
            </xsd:element> 
            <xsd:element name="clientManager" type="com.ibm.ws.security.oauth20.clientmanager.role-factory"> 
            </xsd:element> 
            <xsd:element name="tokenManager" type="com.ibm.ws.security.oauth20.tokenmanager.role-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.roles-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.roles"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider.granttype.jwt"> 
        <xsd:annotation> 
            <xsd:documentation>The grant_type for JWT Token handler</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JWT Grant Type</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="maxJtiCacheSize" use="optional" default="10000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum size of cache, which keeps jti data of jwt token, to prevent the jti from being reused.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum size of cache for jti of jwt token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="300s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The time difference allowed between OpenID Connect Client and OpenID Connect Provider systems when they are not synchronized. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The time difference allowed between systems</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenMaxLifetime" use="optional" default="7200s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The time indicates the maximum lifetime of an alive jwt token since its issued-at-time. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum lifetime of a jwt token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="iatRequired" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The iat claim in a jwt token is required.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Required iat claim in a jwt token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider.granttype.jwt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.provider.granttype.jwt"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.clientmanager.role"> 
        <xsd:annotation> 
            <xsd:documentation>Security role for client management requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Client Manager Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.security.oauth20.user-factory"> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.security.oauth20.group-factory"> 
            </xsd:element> 
            <xsd:element name="special-subject" type="com.ibm.ws.security.oauth20.specialsubject-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.clientmanager.role-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.clientmanager.role"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.group"> 
        <xsd:annotation> 
            <xsd:documentation>Group that has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a group that has the security role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A group access ID in the general form group:realmName/groupUniqueId. A value will be generated if one is not specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.group-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.group"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.authenticated.role"> 
        <xsd:annotation> 
            <xsd:documentation>Security role for authorization code and token requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Authenticated Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.security.oauth20.user-factory"> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.security.oauth20.group-factory"> 
            </xsd:element> 
            <xsd:element name="special-subject" type="com.ibm.ws.security.oauth20.specialsubject-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.authenticated.role-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.authenticated.role"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.client"> 
        <xsd:annotation> 
            <xsd:documentation>OAuth client definition. Only clients defined here can access the provider.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OAuth Client</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="redirect" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Array of redirect URIs for use in redirect-based flows such as the authorization code and implicit grant types of the client. The first redirect URI is used as a default, when none is specified in a request. Each URI must be an absolute URI as defined by RFC 3986.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Array of redirect URIs</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="grantTypes" default="authorization_code"> 
                <xsd:annotation> 
                    <xsd:documentation>Grant types the client may use.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Grant types</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="authorization_code"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>authorization_code</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="implicit"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>implicit</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="refresh_token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>refresh_token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="client_credentials"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>client_credentials</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="password"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>password</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="urn:ietf:params:oauth:grant-type:jwt-bearer"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>urn:ietf:params:oauth:grant-type:jwt-bearer</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="responseTypes" default="code"> 
                <xsd:annotation> 
                    <xsd:documentation>Response types the client may use.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Response types</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="code"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>code</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="id_token token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>id_token token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="postLogoutRedirectUris" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Array of URLs supplied by the RP to which it may request that the end-user's user agent be redirected using the post_logout_redirect_uri parameter after a logout has been performed.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Post logout redirection URIs</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resourceIds" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The resource identifiers which are the audiences of the Json Web Token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource identifiers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="functionalUserGroupIds" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A list of group ids to be to be associated with access tokens obtained by this client using the client credentials grant type. When this client parameter is specified, the value is returned in the functional_user_groupIds response parameter from the introspect endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Functional user group IDs</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the client (sometimes referred to as the Id).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="secret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Secret key of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret key</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayname" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Display name of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Display name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_basic"> 
            <xsd:annotation> 
                <xsd:documentation>The requested authentication method for the token endpoint of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token endpoint authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify by spaces the list of scopes of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="applicationType" use="optional" default="web"> 
            <xsd:annotation> 
                <xsd:documentation>The type of application best describing the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="native"> 
                                <xsd:annotation> 
                                    <xsd:documentation>native</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="web"> 
                                <xsd:annotation> 
                                    <xsd:documentation>web</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="subjectType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Subject type requested for response to this client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Subject type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="public"> 
                                <xsd:annotation> 
                                    <xsd:documentation>public</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sessionManaged" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Boolean indicating whether the client participates in OpenID session management.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session managed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="preAuthorizedScope" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Space separated list of scope values that the client can use when requesting access tokens that are deemed to have been pre-approved by the resource owner and therefore does not require the resource owner's consent.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>PreAuthorized scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="introspectTokens" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Boolean value specifying whether the client is allowed to access the introspection endpoint to introspect tokens issued by the authorization server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Introspect tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowRegexpRedirects" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow redirect URLs to contain regular expressions. The default is false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow regular expression redirects</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="functionalUserId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A user identifier to be associated with access tokens obtained by this client using the client credentials grant type. When this client parameter is specified, the value is returned in the functional_user_id response parameter from the introspect endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Functional user ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Client is enabled if true, disabled if false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appPasswordAllowed" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, the OAuth client is allowed to request application passwords.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application password allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appTokenAllowed" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, the OAuth client is allowed to request application tokens.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application token allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="proofKeyForCodeExchange" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Proof key for code exchange support for OAuth clients.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proof key for code exchange</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="publicClient" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify whether OAuth client is public.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Public OAuth client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.client-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.client"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.database.store"> 
        <xsd:annotation> 
            <xsd:documentation>Clients are defined and tokens are cached in the database.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Database Store</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="dataSource" minOccurs="0" maxOccurs="1" type="com.ibm.ws.jdbc.dataSource"> 
                <xsd:annotation> 
                    <xsd:documentation>Reference to the data source for the store.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Source</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="dataSourceRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to the data source for the store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data source reference</ext:label> 
                    <ext:reference>dataSource</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cleanupExpiredTokenInterval" use="optional" default="3600" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The interval to use for cleaning up expired tokens from the database store. The valid range is 0 to Integer.MAX_VALUE in seconds. A value of 0 indicates that no cleanup is performed. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Database cleanup interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="user" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>User</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password used to access the database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="schema" use="optional" default="OAuthDBSchema" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Schema</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Schema</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.database.store-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.database.store"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.user"> 
        <xsd:annotation> 
            <xsd:documentation>User who has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a user who has the security role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A user access ID in the general form user:realmName/userUniqueId. A value will be generated if one is not specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.user-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.user"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider"> 
        <xsd:annotation> 
            <xsd:documentation>OAuth provider definition.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OAuth Provider Definition</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="localStore" type="com.ibm.ws.security.oauth20.server.store"> 
            </xsd:element> 
            <xsd:element name="databaseStore" type="com.ibm.ws.security.oauth20.database.store"> 
            </xsd:element> 
            <xsd:element name="customStore" type="com.ibm.ws.security.oauth20.provider.custom.store"> 
            </xsd:element> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Reference to shared library containing the mediator plugin class.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="mediatorClassname" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Mediator plugin class name.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Mediator class name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="grantType" default="authorization_code" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>An OAuth 2.0 grant type, as detailed in the OAuth 2.0 specification, that is allowed for the provider. By default, all grant types are allowed. The supported values are authorization_code, client_credentials, refresh_token, password, implicit and urn:ietf:params:oauth:grant-type:jwt-bearer.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>OAuth grant type</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="autoAuthorizeClient" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Name of a client that is allowed to use auto authorization.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Auto authorize client</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tokenFormat"> 
                <xsd:annotation> 
                    <xsd:documentation>The type of token to be produced. One of opaque, jwt, or mpjwt. Mpjwt is microprofile standardized format. The default is opaque.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Type of JWT token issued</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="opaque"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>opaque</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="jwt"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>jwt</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="mpjwt"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>mpjwt</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="jwtGrantType" type="com.ibm.ws.security.oauth20.provider.granttype.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="httpsRequired" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>SSL communication between the OAuth client and provider is required.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Require SSL communication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationGrantLifetime" use="optional" default="604800" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Authorization grant lifetime (seconds). Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization grant lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationCodeLifetime" use="optional" default="60" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Authorization code lifetime (seconds). Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization code lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationCodeLength" use="optional" default="30" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Length of the generated authorization code.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization code length</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenLifetime" use="optional" default="7200" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Time that access token is valid (seconds). Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenLength" use="optional" default="40" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Length of the generated OAuth access token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token length</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issueRefreshToken" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A value of false disables generation and the use of refresh tokens.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Refresh token use flag</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="refreshTokenLength" use="optional" default="50" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Length of generated refresh token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Refresh token length</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="revokeAccessTokensWithRefreshTokens" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A value of false disables revocation of associated access tokens when a refresh token is revoked. The default value is true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Revoke access tokens when refresh token revoked</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to shared library containing the mediator plugin class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared library reference</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowPublicClients" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A value of false disables the access of public clients as detailed in the OAuth specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow public clients to access OAuth provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationFormTemplate" use="optional" default="template.html" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL of a custom authorization page template.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom authorization form</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationErrorTemplate" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL of a custom authorization error page template.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom authorization error form</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="customLoginURL" use="optional" default="login.jsp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URL of a custom login page.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom login form</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoAuthorizeParam" use="optional" default="autoauthz" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>To use auto authorization, append the autoAuthorize parameter to requests with a value of true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto authorization parameter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoAuthorize" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>To use auto authorization, append the autoAuthorize parameter to requests with a value of true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Auto authorization parameter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientURISubstitutions" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Optional value to replace client URI strings for dynamic host names.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client URI substitution</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientTokenCacheSize" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of entries in the client token cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client token cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userClientTokenLimit" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Token limit for each user and client combination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User client token limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="filter" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>URI filter selects requests to be authorized by this provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Request filter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="characterEncoding" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Set request character encoding to this value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Character encoding</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="oauthOnly" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the value is true, then requests matching the filter must have an access token or they will be failed. If false, then matching requests will be checked for other authentication data if no access token is present.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Fail authentication if OAuth access token missing</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeTokenInSubject" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the value is true, add the com.ibm.wsspi.security.oauth20.token.WSOAuth20Token as a private credential.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include OAuth token in subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consentCacheEntryLifetime" use="optional" default="1800" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Time that an entry in the consent cache is valid (seconds). Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Consent cache entry lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consentCacheSize" use="optional" default="1000"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of entries allowed in the consent cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Consent cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenCacheEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable caching to save access tokens in the database and in-memory cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache access tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="certAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable the authentication of client certificate in the https request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable client certificate authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowCertAuthentication" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the authentication of a client certificate if a client certificate is included in the https request. This attribute allows client certificates to be used for authentication even if the certAuthentication attribute is set to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow client certificate authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowSpnegoAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the authentication of an SPNEGO token in the https request. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow SPNEGO authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwtAccessToken" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Generate the Json Web Token, serialize it as a string and put in the place of the access token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token is JWT</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="coverageMapSessionMaxAge" use="optional" default="600" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The max-age value (seconds) for the cache-control header of the coverage map service. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Coverage map session max age</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="skipResourceOwnerValidation" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the value is true, skip validation of resource owner.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Skip resource owner validation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenEncoding" use="optional" default="plain"> 
            <xsd:annotation> 
                <xsd:documentation>The encoding type for the stored access token. The default is set to plain, for compatibility with earlier versions. PBKDF2WithHmacSHA512 is recommended. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token encoding</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="plain"> 
                                <xsd:annotation> 
                                    <xsd:documentation>plain</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="PBKDF2WithHmacSHA512"> 
                                <xsd:annotation> 
                                    <xsd:documentation>PBKDF2WithHmacSHA512</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="logoutRedirectURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Optional URL that the client is redirected to after successfully invoking the logout endpoint. If a URL is not supplied, then a minimal default logout page is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL used after logout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="passwordGrantRequiresAppPassword" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, OAuth authorization flows that use the resource owner password credentials grant type must use an application password instead of the password configured for a user in the user registry. When this attribute is enabled, OAuth clients must obtain an application password from this OAuth provider to use the password grant type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password grant requires application password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appPasswordLifetime" use="optional" default="90d" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the lifetime of application passwords that are generated by this OAuth provider. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application password lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appTokenLifetime" use="optional" default="90d" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the lifetime of application tokens that are generated by this OAuth provider. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application token lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="appTokenOrPasswordLimit" use="optional" default="100" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>Token limit for each user and client combination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Application token or password limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internalClientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The ID of an existing client that will be used to generate tokens for PersonalTokenManagement and UsersTokenManagement UI pages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client ID used to generate tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internalClientSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of an existing client that will be used to generate tokens for PersonalTokenManagement and UsersTokenManagement UI pages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client secret used to generate tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecretEncoding" use="optional" default="xor"> 
            <xsd:annotation> 
                <xsd:documentation>The encoding type for the stored client secret. The default is set to XOR, for compatibility with earlier versions. PBKDF2WithHmacSHA512 is recommended. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client secret encoding</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="xor"> 
                                <xsd:annotation> 
                                    <xsd:documentation>xor</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="PBKDF2WithHmacSHA512"> 
                                <xsd:annotation> 
                                    <xsd:documentation>PBKDF2WithHmacSHA512</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="ropcPreferUserSecurityName" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the user security name differs from the username that is supplied in the ROPC (Resource Owner Password Credentials) request, then the username is set to the user security name for all tokens that are created by the ROPC grant type. The default is false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ROPC grant prefers user security name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oauth20.provider-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oauth20.provider"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openid20.openidClientConfig"> 
        <xsd:annotation> 
            <xsd:documentation>OpenId authentication.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OpenId Authentication</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="userInfo" type="com.ibm.ws.security.openid20.openidClientConfig.userInfo-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a list of userInfo references separated by commas for the OpenID provider to include in the response.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User Information Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="useClientIdentity" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use the client OpenID identity to create a user subject. If set to true, only the OpenID client identity is used.  If set to false and the first element of userInfoRef is found, we use it to create a user subject. Otherwise, we use the OpenID identity to create a user subject. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use client identity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapIdentityToRegistryUser" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map identity to registry user. The user registry is not used to create the user subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map identity to registry user</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration is used to connect to the OpenID provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpsRequired" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Require SSL communication between the OpenID relying party and provider service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Require SSL communication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hashAlgorithm" use="optional" default="SHA256"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the hash algorithm that is used to sign and encrypt the OpenID provider response parameters. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hash algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SHA1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Secure hash algorithm SHA1</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SHA256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Secure hash algorithm SHA256</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="userInfoRef" use="optional" default="email" type="pidListType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a list of userInfo references separated by commas for the OpenID provider to include in the response.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information reference</ext:label> 
                    <ext:reference>userInfo</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authenticationMode" use="optional" default="checkid_setup"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OpenID provider authentication mode either checkid_immediate or checkid_setup. checkid_setup is the default authentication mode.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OpenID provider authentication mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="checkid_setup"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The checkid_setup enables the openID provider to interact with the user, to request authentication or self-registration before returning a result to the openId relying party. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="checkid_immediate"> 
                                <xsd:annotation> 
                                    <xsd:documentation>The checkid_immediate disables the browser interact with the user.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameVerificationEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether enable host name verification or not.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name verification enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the attribute for the OpenID provider name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OpenID provider realm identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="providerIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a default OpenID provider URL where users get the Open IDs. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OpenID provider URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openid20.openidClientConfig.userInfo"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the user information that is included in the response of the openID provider.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Information</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="alias" use="optional" default="email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an alias name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="uriType" use="optional" default="http://axschema.org/contact/email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a URI type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URI type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="count" use="optional" default="1"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how much userInfo is included in the response of the openID provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Count</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="required" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether user information is required or not.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Required</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openid20.openidClientConfig.userInfo-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.openid20.openidClientConfig.userInfo"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.client.webapp"> 
        <xsd:annotation> 
            <xsd:documentation>Description of service</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OpenID Connect Client Web Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="contextPath" use="optional" default="/oidcclient" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Description of service</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.client.oidcClientConfig"> 
        <xsd:annotation> 
            <xsd:documentation>OpenID Connect client.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OpenID Connect Client</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authzParameter" type="com.ibm.ws.security.openidconnect.client.param-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies custom parameters to send to authorization endpoint of the OpenID Connect provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom Parameters For Authorization Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tokenParameter" type="com.ibm.ws.security.openidconnect.client.param-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies custom parameters to send to token endpoint of the OpenID Connect provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom Parameters For Token Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="audiences" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a comma-separated list of trusted audiences that is verified against the aud claim in the JSON web token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted audiences</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="resource" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Resource parameter is included in the request.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Resource request parameter</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="forwardLoginParameter" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a comma-separated list of parameter names to forward to the OpenID Connect provider. If a protected resource request includes one or more of the specified parameters, the OpenID Connect client will include those parameters and their values in the authorization endpoint request to the OpenID Connect provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Forward login parameter</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="scope" use="optional" default="openid profile" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>OpenID Connect scope (as detailed in the OpenID Connect specification) that is allowed for the provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdentityToCreateSubject" use="optional" default="sub" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a user identity in the ID token used to create the user subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User identity use to create a subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpsRequired" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Require SSL communication between the OpenID relying party and provider service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Require SSL communication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="grantType" use="optional" default="authorization_code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the grant type to use for this client. Use of the responseType attribute is preferred instead.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Grant type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="authorization_code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code grant type</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="implicit"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Implicit grant type</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Identity of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client identity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Secret key of the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client secret key</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>After authorization, the relying party will be redirected to this destination, instead of the default.  The default is the origin of the relying party request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Redirect destination sent to the relying party</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="redirectJunctionPath" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a path fragment to be inserted into the redirect URL, after the host name and port.  The default is an empty string.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Path fragment inserted into redirect URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the client supports redirect at client side.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client side redirect</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuerIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A case-sensitive URL using the HTTPS scheme that contains scheme, host and optionally port number and path components. Specify multiple values as a comma separated list.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapIdentityToRegistryUser" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map the identity to a registry user. If this is set to false, then the user registry is not used to create the user subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map identity to registry user</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the public key necessary for verifying the signature of the ID token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustAliasName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Key alias name to locate public key for signature validation with asymmetric algorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonceEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable the nonce parameter in the authorization code flow.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable the nonce parameter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a realm name to be used to create the user subject when the mapIdentityToRegistryUser is set to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the OpenID Connect provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="HS256"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the signature algorithm that will be used to verify the signature of the ID token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID token signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Tokens are not required to be signed</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="RS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the RS256 signature algorithm to sign and verify tokens</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the HS256 signature algorithm to sign and verify tokens</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="includeIdTokenInSubject" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to include ID token in the client subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include ID token in the client subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenInLtpaCookie" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the LTPA token includes the access token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>LTPA token includes the access token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="initialStateCacheCapacity" use="optional" default="3000"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the beginning capacity of state cache. The capacity grows bigger when needed by itself.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Beginning capacity of state cache</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameVerificationEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to enable host name verification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name verification enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="discoveryEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a discovery endpoint URL for an OpenID Connect provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Discovery endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization endpoint URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token endpoint URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userInfoEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a User Info endpoint URL</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>UserInfo endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userInfoEndpointEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the User info endpoint is contacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User info endpoint enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JWK endpoint URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JSON web key (JWK) endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkClientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the client identifier to include in the basic authentication scheme of the JWK request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK client identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkClientSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the client password to include in the basic authentication scheme of the JWK request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK client password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the response requested from the provider, either an authorization code or implicit flow tokens.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="id_token"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ID token</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="id_token token"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ID token and access token</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="token"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Access token</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="userIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON attribute in the ID token that is used as the user principal name in the subject. If no value is specified, the JSON attribute "sub" is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Principal identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdentifier" use="optional" default="groupIds" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON attribute in the ID token that is used as the name of the group that the authenticated principal is a member of.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmIdentifier" use="optional" default="realmName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON attribute in the ID token that is used as the realm name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="uniqueUserIdentifier" use="optional" default="uniqueSecurityName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON attribute in the ID token that is used as the unique user name as it applies to the WSCredential in the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="post"> 
            <xsd:annotation> 
                <xsd:documentation>The method to use for sending credentials to the token endpoint of the OpenID Connect provider in order to authenticate the client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method of token endpoint</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="inboundPropagation" use="optional" default="none"> 
            <xsd:annotation> 
                <xsd:documentation>Controls the operation of the token inbound propagation of the OpenID relying party.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable token inbound propagation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="supported"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Support inbound token propagation</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="required"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Require inbound token propagation</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not support inbound token propagation</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="validationMethod" use="optional" default="introspect"> 
            <xsd:annotation> 
                <xsd:documentation>The method of validation on the token inbound propagation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Method of validating the inbound token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="introspect"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Validate inbound tokens using token introspection</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="userinfo"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Validate inbound tokens using the userinfo endpoint</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="headerName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the header which carries the inbound token in the request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of the header containing the inbound token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="validationEndpointUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The endpoint URL for validating the token inbound propagation. The type of endpoint is decided by the validationMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Endpoint URL for validation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableIssChecking" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Require the issuer claim to be absent when validating the json response for inbound token propagation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable issuer checking</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authnSessionDisabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>An authentication session cookie will not be created for inbound propagation. The client is expected to send a valid OAuth token for every request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication session cookie disabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableLtpaCookie" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Do not create an LTPA Token during processing of the OAuth token. Create a cookie of the specific Service Provider instead.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable LTPA token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect client creates HTTP client connections.  Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reAuthnOnAccessTokenExpire" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Authenticate a user again when its authenticating access token expires and disableLtpaCookie is set to true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reauthenticate when access token expires</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reAuthnCushion" use="optional" default="0s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The time period to authenticate a user again when its tokens are about to expire. The expiration time of an ID token is specified by its exp claim. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cushion time for reauthentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="createSession" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to create an HttpSession if the current HttpSession does not exist.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create session</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authenticationTimeLimit" use="optional" default="420s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum duration in milliseconds between redirection to the authentication server and return from the authentication server.  Cookies expire after this duration. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication time limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="discoveryPollingRate" use="optional" default="300s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration rate in milliseconds at which the OpenID Connect client checks for updates to the discovery file. The checking is done only if there is an authentication failure. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Next discovery interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenReuse" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether JSON web tokens can be reused. Tokens must contain a jti claim for this attribute to be effective. The jti claim is a token identifier that is used along with the iss claim to uniquely identify a token and associate it with a specific issuer. A request is rejected when this attribute is set to false and the request contains a JWT with a jti and iss value combination that has already been used within the lifetime of the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow re-use of JSON web tokens (JWT)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.client.oidcClientConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.openidconnect.client.oidcClientConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.client.param"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies additional parameters to include in the requests to send to the provider.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Custom Parameters To Include In Requests</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies name of the additional parameter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom request parameter name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies value of the additional parameter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom request parameter value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.client.param-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.openidconnect.client.param"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.scopeToClaimMap"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the claims for the scope.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Scope To Claims Map</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.oidcs.property-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="profile" use="optional" default="name, family_name, given_name, middle_name, nickname, preferred_username, profile, picture, website, gender, birthdate, zoneinfo, locale, updated_at" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify a comma-separated list of claims associated with the profile scope. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Profile scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="email" use="optional" default="email, email_verified" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify a comma-separated list of claims associated with the email scope. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Email scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="address" use="optional" default="address" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify a comma-separated list of claims associated with the address scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="phone" use="optional" default="phone_number, phone_number_verified" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify a comma-separated list of claims associated with the phone scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Phone scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the claims for the scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Scope to claims map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.scopeToClaimMap-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oidcs.scopeToClaimMap"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.claimToUserRegistryMap"> 
        <xsd:annotation> 
            <xsd:documentation>Specify the user registry key for the claim.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Claim To User Registry Map</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="property" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.security.oidcs.property-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" default="displayName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the name claim.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="given_name" use="optional" default="givenName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the given_name claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Given name claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="picture" use="optional" default="photoURL" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the picture claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Picture claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="email" use="optional" default="mail" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the email claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Email claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="address" use="optional" default="postalAddress" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the address claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Address claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="phone_number" use="optional" default="telephoneNumber" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key that will be retrieved for the phone_number claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Phone number claim</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the user registry key for the claim.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim to user registry map</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.claimToUserRegistryMap-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oidcs.claimToUserRegistryMap"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.property"> 
        <xsd:annotation> 
            <xsd:documentation>Specify a property in addition to the parent element properties</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Additional Property</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the name of the property</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Property name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the value of the property</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.property-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oidcs.property"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.server.oidcServerConfig"> 
        <xsd:annotation> 
            <xsd:documentation>OpenID Connect server provider</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OpenID Connect Server Provider</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="oauthProvider" type="com.ibm.ws.security.oauth20.provider"> 
                <xsd:annotation> 
                    <xsd:documentation>A reference to the ID of an OAuth provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>OAuth Provider Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="customClaims" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The extra claims to be put in the payloads of the ID Token, in addition to the default realmName, uniqueSecurityName and groupIds claims.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Extra claims of ID token</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="scopeToClaimMap" type="com.ibm.ws.security.oidcs.scopeToClaimMap"> 
            </xsd:element> 
            <xsd:element name="claimToUserRegistryMap" type="com.ibm.ws.security.oidcs.claimToUserRegistryMap"> 
            </xsd:element> 
            <xsd:element name="discovery" type="com.ibm.ws.security.oidcs.discovery"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="oauthProviderRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A reference to the ID of an OAuth provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth provider reference</ext:label> 
                    <ext:reference>oauthProvider</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuerIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify an issuer identifier for the issuer of the response.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowDefaultSsoCookieName" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When this property is set to true, the default SSO cookie name, ltpaToken2, is used if a custom SSO cookie name is not configured.  If a custom cookie name is configured for SSO, that cookie name is used.  If a custom cookie name is not configured and this property is set to false, an auto-generated SSO cookie name will be used.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow default SSO cookie name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables or disables JWK.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable JSON web key(JWK)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idTokenCacheEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable caching to save ID tokens in the database and in-memory cache.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cache ID tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkRotationTime" use="optional" default="720m" type="minuteDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time after which a new JWK will be generated. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK rotation time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkSigningKeySize" use="optional" default="2048"> 
            <xsd:annotation> 
                <xsd:documentation>Size measured in bits of the signing key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK signing key size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="longType"> 
                            <xsd:enumeration value="1024"> 
                                <xsd:annotation> 
                                    <xsd:documentation>1024 bits</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="2048"> 
                                <xsd:annotation> 
                                    <xsd:documentation>2048 bits</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="4096"> 
                                <xsd:annotation> 
                                    <xsd:documentation>4096 bits</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="HS256"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the signature algorithm that will be used to sign the ID token.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID token signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>No signature</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="RS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>RSASSA-PKCS-v1_5 using SHA-256 hash</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="HS256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>HMAC using SHA-256 hash</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreRef" use="optional" default="opKeyStore" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the private key necessary for signing with an asymmetric algorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyAliasName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Key alias name to locate the private key for signing with an asymmetric algorithm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the public key necessary for verifying a signature of the JWT token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sessionManaged" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether session management is supported. Default is false. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session managed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idTokenLifetime" use="optional" default="2h" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Time that ID token is valid (seconds). Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID token lifetime</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.openidconnect.server.oidcServerConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.openidconnect.server.oidcServerConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.discovery"> 
        <xsd:annotation> 
            <xsd:documentation>Discovery is based on OpenID Connect and Jazz Authorization Server Profile.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Discovery</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="responseTypesSupported" default="code"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of the response types that will be supported by the OP.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Response types supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="code"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>code</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="id_token token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>id_token token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="idTokenSigningAlgValuesSupported" default="HS256"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the signature algorithm that will be used to sign the ID token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>ID token signing algorithms supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="none"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>No signature</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="RS256"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>RSASSA-PKCS-v1_5 using SHA-256 hash</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="HS256"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>HMAC using SHA-256 hash</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="scopesSupported" default="openid" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of scopes that will be supported.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Scopes supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="claimsSupported" default="sub" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of claims that will be supported.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Claims supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="responseModesSupported" default="query"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of the response modes that will be used.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Response modes supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="query"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>query</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="fragment"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>fragment</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="form_post"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>form_post</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="grantTypesSupported" default="authorization_code"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of the grant types that will be used.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Grant types supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="authorization_code"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>authorization_code</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="implicit"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>implicit</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="refresh_token"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>refresh_token</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="client_credentials"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>client_credentials</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="password"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>password</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="urn:ietf:params:oauth:grant-type:jwt-bearer"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>urn:ietf:params:oauth:grant-type:jwt-bearer</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
            <xsd:element name="tokenEndpointAuthMethodsSupported" default="client_secret_post"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify by comma the list of the token endpoint authentication methods that will be used.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Token endpoint authentication methods supported</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="none"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>none</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="client_secret_post"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>client_secret_post</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="client_secret_basic"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>client_secret_basic</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="claimsParameterSupported" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether claims parameter is supported.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim parameter supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="requestParameterSupported" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether request parameter is supported.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Request parameter supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="requestUriParameterSupported" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether request URI parameter is supported.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Request URI parameter supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="requireRequestUriRegistration" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicate by true or false whether require request URI registration is supported.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Require request URI registration</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.oidcs.discovery-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.oidcs.discovery"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.persistent.executor"> 
        <xsd:annotation> 
            <xsd:documentation>Schedules and runs persistent tasks.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Persistent Scheduled Executor</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="contextService" minOccurs="0" maxOccurs="1" type="com.ibm.ws.context.service"> 
                <xsd:annotation> 
                    <xsd:documentation>Configures how context is captured and propagated to threads.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Thread Context Propagation</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="enableTaskExecution" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether or not this instance may run tasks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable task execution</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="initialPollDelay" use="optional" default="0" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time to wait before this instance might poll the persistent store for tasks to run. A value of -1 delays polling until it is started programmatically. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Initial poll delay</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="retryLimit" use="optional" default="10"> 
            <xsd:annotation> 
                <xsd:documentation>Limit of consecutive retries for a task that has failed or rolled back, after which the task is considered permanently failed and does not attempt further retries. A value of -1 allows for unlimited retries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retry limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:short"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="10000"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="taskStoreRef" use="optional" default="defaultDatabaseStore" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Persistent store for scheduled tasks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persistent task store reference</ext:label> 
                    <ext:reference>databaseStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="contextServiceRef" use="optional" default="DefaultContextService" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Configures how context is captured and propagated to threads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Thread context propagation reference</ext:label> 
                    <ext:reference>contextService</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pollInterval" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Interval at which the executor looks for tasks in the persistent store to run. If unspecified and fail over is enabled, a poll interval is automatically computed. If fail over is not enabled, the default is -1, which disables all polling after the initial poll. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Poll interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pollSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of task entries to find when polling the persistent store for tasks to run. If unspecified, there is no limit.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Poll size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="retryInterval" use="optional" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The amount of time that must pass between consecutive retries of a failed task. The retry interval applies only when failover is disabled. When failover is enabled, servers retry at their next poll. When failover is not enabled, the first retry occurs immediately on the same server, and at the retry interval thereafter. The default retry interval is 1 minute. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retry interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.concurrent.persistent.executor-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.concurrent.persistent.executor"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.request.timing.RequestTimingService"> 
        <xsd:annotation> 
            <xsd:documentation>Provides warnings and diagnostic information for the slow or hung requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Request Timing</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="servletTiming" type="com.ibm.ws.request.timing.servlet.metatype"> 
            </xsd:element> 
            <xsd:element name="jdbcTiming" type="com.ibm.ws.request.timing.jdbc.metatype"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="slowRequestThreshold" use="optional" default="10s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a request can run before being considered slow. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Slow request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hungRequestThreshold" use="optional" default="10m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Duration of time that a request can run before being considered hung. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hung request threshold</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sampleRate" use="optional" default="1"> 
            <xsd:annotation> 
                <xsd:documentation>Rate at which the sampling should happen for the slow request tracking.  To sample one out of every n requests, set sampleRate to n.  To sample all requests, set sampleRate to 1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sampling rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="includeContextInfo" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates if the context information details are included in the log output.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include context information</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="interruptHungRequests" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether a request that is hung is to be interrupted. A value of true causes the requestTiming-1.0 feature to attempt to interrupt the hung request. A value of false allows the request to continue to run.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Interrupt hung requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.management.filetransfer"> 
        <xsd:annotation> 
            <xsd:documentation>This element contains artifacts that control the level of file access exposed for remote connections. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Remote File Access</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="readDir" type="dirLocation"> 
                <xsd:annotation> 
                    <xsd:documentation>A directory that remote clients are allowed to read from. There can be multiple readDir elements, and each represents a single directory that may refer to variables or absolute paths.  Default is ${wlp.install.dir}, ${wlp.user.dir} and ${server.output.dir}</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Read access directory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="writeDir" type="dirLocation"> 
                <xsd:annotation> 
                    <xsd:documentation>A directory that remote clients are allowed to read from and write to. There can be multiple writeDir elements, and each represents a single directory that may refer to variables or absolute paths.  Default is an empty set of directories.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Write access directory</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.trustengine.cert"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies a list of x509 certificates that are used to verify the signature.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>X509 Certificate</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="path" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the path to the x509 certificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>X509 certificate path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.trustengine.cert-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.saml.sso20.trustengine.cert"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.pkixtrustengine"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the PKIX trust information that is used to evaluate the trustworthiness and validity of XML signatures in a SAML response. Do not specify multiple pkixTrustEngine in a samlWebSso20.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>PKIX Trust Engine</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="trustedIssuers" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the identities of trusted IdP issuers. If the value is "ALL_ISSUERS", then all IdP identities are trusted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Trusted issuers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="x509Certificate" type="com.ibm.ws.security.saml.sso20.trustengine.cert-factory"> 
            </xsd:element> 
            <xsd:element name="crl" type="com.ibm.ws.security.saml.sso20.trustengine.crl-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="trustAnchorRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the public key necessary for verifying the signature of the SAMLResponse and Assertion.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust keystore or anchor reference</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.pkixtrustengine-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.saml.sso20.pkixtrustengine"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the operation of the Security Assertion Markup Language Web SSO 2.0 Mechanism.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SAML Web SSO 2.0 Authentication</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authnContextClassRef" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A URI reference identifying an authentication context class that describes the authentication context declaration. The default is null.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication context class reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="pkixTrustEngine" type="com.ibm.ws.security.saml.sso20.pkixtrustengine"> 
            </xsd:element> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="headerName" default="Saml" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The header name of the HTTP request which stores the SAML Token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Header name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="audiences" default="ANY" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The list of audiences which are trusted to verify the audience of the SAML Token. If the value is "ANY", then all audiences are trusted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Audiences of SAML token</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="httpsRequired" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enforce using SSL communication when accessing a SAML WebSSO service provider end point such as acs or metadata.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Require SSL communication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="inboundPropagation" use="optional" default="none"> 
            <xsd:annotation> 
                <xsd:documentation>Controls the operation of the Security Assertion Markup Language Web SSO 2.0 for the inbound propagation of the Web Services Mechanisms.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable SAML inbound propagation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="required"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%inboundPropagation.required</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="none"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%inboundPropagation.none</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="wantAssertionsSigned" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates a requirement for the &lt;saml:Assertion&gt; elements received by this service provider to contain a Signature element that signs the Assertion.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sign SAML assertion</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureMethodAlgorithm" use="optional" default="SHA256"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates the required algorithm by this service provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SHA256"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SHA-256 signature algorithm</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SHA128"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%signatureMethodAlgorithm.SHA128</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SHA1"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SHA-1 signature algorithm</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="createSession" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to create an HttpSession if the current HttpSession does not exist.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create session</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authnRequestsSigned" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether the &lt;samlp:AuthnRequest&gt; messages sent by this service provider will be signed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sign the samlp:AuthnRequest messages</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeX509InSPMetadata" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to include the x509 certificate in the Liberty SP metadata.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include x509 in metadata</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceAuthn" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether the IdP should force the user to re-authenticate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IdP forces user to re-authenticate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isPassive" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates IdP must not take control of the end user interface.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IdP controls the interface of end user</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowCreate" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the IdP to create a new account if the requesting user does not have one.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow create new account</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authnContextComparisonType" use="optional" default="exact"> 
            <xsd:annotation> 
                <xsd:documentation>When an authnContextClassRef is specified, the authnContextComparisonType can be set.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The comparison type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="exact"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Exact. The authentication context in the authentication statement must be an exact match of at least one of the authentication contexts specified.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="minimum"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Minimum. The authentication context in the authentication statement must be at least as strong as one of the authentication contexts specified.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="maximum"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Maximum. The authentication context in the authentication statement must be as strong as possibe without exceeding the strength of at least one of the authentication contexts specified.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="better"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Better. The authentication context in the authentication statement must be stronger than any one of the authentication contexts specified.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="nameIDFormat" use="optional" default="email"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the URI reference corresponding to a name identifier format defined in the SAML core specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique identifier of name id format</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="unspecified"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="email"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="x509SubjectName"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="windowsDomainQualifiedName"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="kerberos"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="entity"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:2.0:nameid-format:entity</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="persistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="transient"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="encrypted"> 
                                <xsd:annotation> 
                                    <xsd:documentation>urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="customize"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Customized Name ID Format.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="customizeNameIDFormat" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the customized URI reference corresponding to a name identifier format that is not defined in the SAML core specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Customized XML name space of name id format</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idpMetadata" use="optional" default="${server.config.dir}/resources/security/idpMetadata.xml" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the IdP metadata file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IdP metadata file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing the private key for the signing of the AuthnRequest, and the decryption of EncryptedAssertion element. The default is the server's default.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore reference</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Key alias name to locate the private key for signing and decryption. This is optional if the keystore has exactly one key entry, or if it has one key with an alias of 'samlsp'.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginPageURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the SAML IdP login application URL to which an unauthenticated request is redirected. This attribute triggers IdP-initiated SSO, and it is only required for IdP-initiated SSO.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User defined login page URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="errorPageURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an error page to be displayed if the SAML validation fails. If this attribute is not specified, and the received SAML is invalid, the user will be redirected back to the SAML IdP to restart SSO.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SAML validation error URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>This is used to specify the allowed clock skew in minutes when validating the SAML token. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The time difference allowed between systems</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenReplayTimeout" use="optional" default="30m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>This property is used to specify how long the Liberty SP should prevent token replay. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The timeout value to prevent token replay</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sessionNotOnOrAfter" use="optional" default="120m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates an upper bound on SAML session durations, after which the Liberty SP should ask the user to re-authenticate to the IdP. If the SAML token returned from the IdP does not contain a sessionNotOnOrAfter assertion, the value specified by this attribute is used. This property is only used if disableLtpaCookie=true. The default value is true. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The default SAML session timeout value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the user principal name in the subject. If no value is specified, the NameID SAML assertion element value is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Principal identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the name of the group that the authenticated principal is a member of. There is no default value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userUniqueIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the unique user name as it applies to the WSCredential in the subject. The default is the same as the userIdentifier attribute value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the realm name. If no value is specified, the Issuer SAML assertion element value is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeTokenInSubject" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to include a SAML assertion in the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include SAML assertion in the subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="No"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how to map an identity to a registry user. The options are No, User, and Group. The default is No, and the user registry is not used to create the user subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map a SAML identity to a registry user</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="No"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not map a SAML identity to a user or group in the registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="User"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Map a SAML identity to a user defined in the registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Group"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Map a SAML identity to a group defined in the user registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableLtpaCookie" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Do not create an LTPA Token during processing of the SAML Assertion. Create a cookie of the specific Service Provider instead.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable LTPA token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a realm name when mapToUserRegistry is set to No or Group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authnRequestTime" use="optional" default="10m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the life time period of an authnReuqest which is generated and sent from the service provider to an IdP for requesting a SAML Token. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>AuthnRequest alive time period</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The service provider is enabled if true and disabled if false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SP enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowCustomCacheKey" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow generating a custom cache key to access the authentication cache and get the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Customized cache key</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="spHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML service provider host name and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SAML host name and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reAuthnOnAssertionExpire" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Authenticate the incoming HTTP request again when a SAML Assertion is about to expire.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authenticate again when assertion expires</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reAuthnCushion" use="optional" default="0m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The time period to authenticate again when a SAML Assertion is about to expire, which is indicated by either the statement NotOnOrAfter or the attribute SessionNotOnOrAfter of the SAML Assertion. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cushion time to authenticate again</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetPageUrl" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The default landing page for the IdP-initiated SSO if the relayState is missing.  This property must be set to a valid URL if useRelayStateForTarget is set to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Target page URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useRelayStateForTarget" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When doing IdP-initiated SSO, this property specifies if the relayState in a SAMLResponse should be used as the target URL.  If set to false, the value for targetPageUrl is always used as the target URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use relayState for target URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="postLogoutRedirectUrl" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The client is redirected to this optional URL after the client invokes the SAML logout endpoint and the logout completes</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>URL used after logout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="spLogout" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Perform a SAML logout when you invoke the HttpServletRequest.logout method or the ibm_security_logout URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatic SAML logout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.saml.sso20"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.trustengine.crl"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the list of crls that are used to evaluate the validity of the signature.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>CRL</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="path" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the path to the crl.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>CRL path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.saml.sso20.trustengine.crl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.saml.sso20.trustengine.crl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.quickStartSecurity"> 
        <xsd:annotation> 
            <xsd:documentation>Simple administrative security configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Quick Start Security</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="userName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Single user defined as part of the quick start security configuration.  This user is granted the Administrator role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userPassword" use="optional" type="passwordHash"> 
            <xsd:annotation> 
                <xsd:documentation>Password for the single user defined as part of the quick start security configuration. It is recommended that you encode or hash this password. To do so, use the securityUtility tool with the encode option.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.management.security.role.reader"> 
        <xsd:annotation> 
            <xsd:documentation>A collection of users, groups, or both that are assigned the server reader role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Reader Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>User assigned a role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="user-access-id" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A user access ID in the general form user:realmName/userUniqueId. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User access ID</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Group assigned a role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group-access-id" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A group access ID in the general form group:realmName/groupUniqueId.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group access ID</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.management.security.role.administrator"> 
        <xsd:annotation> 
            <xsd:documentation>A collection of users, groups, or both that are assigned the server administrator role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Administrator Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>User assigned a role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="user-access-id" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A user access ID in the general form user:realmName/userUniqueId. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User access ID</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Group assigned a role.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group-access-id" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A group access ID in the general form group:realmName/groupUniqueId.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group access ID</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.context"> 
        <xsd:annotation> 
            <xsd:documentation>When specified, the security context of the work initiator is propagated to the unit of work. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Security Context</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.context-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.context"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.cors"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the Cross-Origin Resource Sharing (CORS).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Cross-Origin Resource Sharing</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="domain" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The domain name represents the URL being setup with these CORS settings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Domain name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowedOrigins" use="optional" default="null" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of origins that are allowed to access the configured domain. If this is set to "*", it indicates the resource is publicly accessible, with no access control checks. Also, the value of "null" indicates the domain must not be accessible.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allowed origins</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowedMethods" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of HTTP methods allowed to be used by the origin domain when making requests to the configured domain.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allowed methods</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowedHeaders" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of HTTP headers that are allowed to be used by the origin domain when making requests to the configured domain. If this is set to "*", it indicates the request can include any HTTP headers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allowed headers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="exposeHeaders" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of HTTP headers that are safe to expose to the calling API.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Expose headers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxAge" use="optional" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>A long that indicates how many seconds a response to a preflight request can be cached in the browser.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max age</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowCredentials" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A boolean that indicates if the user credentials can be included in the request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow credentials</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.cors-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.cors"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.session"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for HTTP session management.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Session</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="session.tracking.mechanism" label="Session Tracking Mechanism">Specifies a mechanism for HTTP session management.</ext:groupDecl> 
                <ext:groupDecl id="invalidation" label="Invalidation">Controls how unused sessions are cleaned up.</ext:groupDecl> 
                <ext:groupDecl id="cookies" label="Cookies">Controls how cookies are used.</ext:groupDecl> 
                <ext:groupDecl id="url.rewriting" label="URL Rewriting">Controls how URL rewriting is used.</ext:groupDecl> 
                <ext:groupDecl id="security" label="Security">Controls how sessions are secured.</ext:groupDecl> 
                <ext:groupDecl id="failover" label="Failover">Controls how sessions are passivated and activated between servers.</ext:groupDecl> 
                <ext:groupDecl id="advanced" label="Advanced">The default values of these options work for most environments.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="maxInMemorySessionCount" use="optional" default="1000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of sessions to maintain in memory for each web module.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum in-memory session count</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowOverflow" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allows the number of sessions in memory to exceed the value of the Max in-memory session count property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow session overflow</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslTrackingEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that session tracking uses Secure Sockets Layer (SSL) information as a session identifier.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable SSL identifier tracking</ext:label> 
                    <ext:group id="session.tracking.mechanism"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookiesEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that session tracking uses cookies to carry session identifiers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable cookies</ext:label> 
                    <ext:group id="session.tracking.mechanism"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="urlRewritingEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that the session management facility uses rewritten URLs to carry the session identifiers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable URL rewriting</ext:label> 
                    <ext:group id="session.tracking.mechanism"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="invalidationTimeout" use="optional" default="30m" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time a session can go unused before it is no longer valid, in seconds if unit of time isn't specified. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session timeout</ext:label> 
                    <ext:group id="invalidation"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="reaperPollInterval" use="optional" default="-1" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The wake-up interval, in seconds, for the process that removes invalid sessions. The minimum value is 30 seconds. If a value less than the minimum is entered, an appropriate value is automatically determined and used. This value overrides the default installation value, which is between 30 and 360 seconds, based off the session timeout value. Because the default session timeout is 30 minutes, the reaper interval is usually between 2 and 3 minutes. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reaper poll interval</ext:label> 
                    <ext:group id="invalidation"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceInvalidationMultiple" use="optional" default="3" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>If your requests normally are not bound by a response time limit, specify 0 to indicate that the session manager should wait indefinitely until a request is complete before attempting to invalidate the session. Otherwise, set this property to a positive integer to delay the invalidation of active sessions. Active timed out sessions will not be invalidated by the first invalidation interval pass, but will be invalidated by the interval pass based on this value. For example, a value of 2 would invalidate an active session on the second invalidation interval pass after the session timeout has expired.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Force invalidation multiple</ext:label> 
                    <ext:group id="invalidation"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieName" use="optional" default="JSESSIONID" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A unique name for a session management cookie.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cookie name</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieDomain" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Domain field of a session tracking cookie.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cookie domain</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieMaxAge" use="optional" default="-1" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum amount of time that a cookie can reside on the client browser. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cookie maximum age</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookiePath" use="optional" default="/" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A cookie is sent to the URL designated in the path.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Cookie path</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useContextRootAsCookiePath" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that the cookie path equals the context root of the web module instead of /</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use context root as cookie path</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieSecure" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that the session cookies include the secure field.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Restrict cookies to HTTPS sessions</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieHttpOnly" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that session cookies include the HttpOnly field. Browsers that support the HttpOnly field do not enable cookies to be accessed by client-side scripts. Using the HttpOnly field will help prevent cross-site scripting attacks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include HttpOnly field in session cookies</ext:label> 
                    <ext:group id="cookies"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cookieSameSite" use="optional" default="Disabled"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SameSite attribute value to use for session cookies.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include a SameSite attribute in session cookies</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not set a SameSite attribute value on the session cookies</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Lax"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Set the session cookie SameSite attribute value to Lax</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="None"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Set the session cookie SameSite attribute value to None</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Strict"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Set the session cookie SameSite attribute value to Strict</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="rewriteId" use="optional" default="jsessionid" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Use this property to change the key used with URL rewriting.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Rewrite identifier</ext:label> 
                    <ext:group id="url.rewriting"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="protocolSwitchRewritingEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Adds the session identifier to a URL when the URL requires a switch from HTTP to HTTPS or from HTTPS to HTTP.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable protocol switch rewriting</ext:label> 
                    <ext:group id="url.rewriting"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="alwaysEncodeUrl" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The Servlet 2.5 specification specifies to not encode the URL on a response.encodeURL call if it is not necessary. To support backward compatibility when URL encoding is enabled, set this property to true to call the encodeURL method. The URL is always encoded, even if the browser supports cookies.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Always encode URL</ext:label> 
                    <ext:group id="url.rewriting"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securityIntegrationEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables security integration, which causes the session management facility to associate the identity of users with their HTTP sessions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Associate identity of users with HTTP sessions</ext:label> 
                    <ext:group id="security"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securityUserIgnoreCase" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates that the session security identity and the client security identity should be considered a match even if their cases are different. For example, when this property is set to true, the session security identity USER1 matches the client security identities User1 and user1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Security user ignore case</ext:label> 
                    <ext:group id="security"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="invalidateOnUnauthorizedSessionRequestException" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to true if, in response to an unauthorized request, you want the session manager to invalidate a session instead of issuing an UnauthorizedSessionRequestException. When a session is invalidated, the requester can create a new session, but does not have access to any of the previously saved session data. This allows a single user to continue processing requests to other applications after a logout while still protecting session data.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invalidate sessions requested by invalid users</ext:label> 
                    <ext:group id="security"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cloneId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The clone identifier of the cluster member. Within a cluster, this identifier must be unique to maintain session affinity. When set, this name overwrites the default name generated by the server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Clone identifier</ext:label> 
                    <ext:group id="failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="cloneSeparator" use="optional" default=":" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The single character used to separate the session identifier from the clone identifier in session cookies. The default value should usually be used. On some Wireless Application Protocol (WAP) devices, a colon (:) is not allowed, so a plus sign (+) should be used instead. Different values should rarely be used. You should understand the clone character requirements of other products running on your system before using this property to change the clone separator character. The fact that any character can be specified as the value for this property does not imply that the character you specify will function correctly. This fact also does not imply that IBM is responsible for fixing any problem that might arise from using an alternative character.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Clone separator</ext:label> 
                    <ext:group id="failover"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idLength" use="optional" default="23" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Length of the session identifier.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session identifier length</ext:label> 
                    <ext:group id="advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="idReuse" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>In a multi-JVM environment that is not configured for session persistence, setting this property to "true" enables the session manager to use the same session information for all of a user's requests even if the web applications that are handling these requests are governed by different JVMs. The default value for this property is false. Set this property to true if you want to enable the session manager to use the session identifier sent from a browser to preserve session data across web applications that are running in an environment that is not configured for session persistence.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Reuse identifier</ext:label> 
                    <ext:group id="advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="noAdditionalInfo" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Forces removal of information that is not needed in session identifiers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>No additional info</ext:label> 
                    <ext:group id="advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="debugCrossover" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable this option to perform additional checks to verify that only the session associated with the request is accessed or referenced, and log messages if any discrepancies are detected. Disable this option to skip the additional checks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Debug crossover</ext:label> 
                    <ext:group id="advanced"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional properties related to session management.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.generatePluginConfig"> 
        <xsd:annotation> 
            <xsd:documentation>Properties used when generating the web server plugin configuration file</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Server Plugin</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="httpEndpoint" type="com.ibm.ws.http"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the identifier of the http endpoint to include in the generated plugin-cfg.xml file. The endpoint defines the server in the cluster. The default value is 'defaultHttpEndpoint'.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Http Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="extraConfigProperties" type="com.ibm.ws.generatePluginConfig.properties"> 
                <xsd:annotation> 
                    <xsd:documentation>Additional properties to be added to the Config element in the generated plug-in configuration file.  These properties can be specified by IBM support to modify behavior of the web server plug-in.  They can be found at https://www.ibm.com/support/knowledgecenter/en/SSAW57_9.0.0/com.ibm.websphere.nd.multiplatform.doc/ae/rwsv_plugin_propstable.html</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Additional Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="pluginInstallRoot" use="optional" default="/opt/IBM/WebSphere/Plugins" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Web server plugin installation location in file system of web server host</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Plugin install location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="webserverName" use="optional" default="webserver1" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the web server where this configuration will be used. Used to generate the plugin log file location if that is not specified explicitly by Log file name or directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Web server name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="webserverPort" use="optional" default="80"> 
            <xsd:annotation> 
                <xsd:documentation>Web server HTTP port</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Web server HTTP port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="webserverSecurePort" use="optional" default="443"> 
            <xsd:annotation> 
                <xsd:documentation>Web server HTTPS port</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Web server HTTPS port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sslKeyringLocation" use="optional" default="${pluginInstallRoot}/config/${webserverName}/plugin-key.kdb" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The fully qualified path to the SSL keyring file on the web server host</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location of SSL keyring</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslStashfileLocation" use="optional" default="${pluginInstallRoot}/config/${webserverName}/plugin-key.sth" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The fully qualified path to the SSL stashfile on the web server host</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location of SSL stashfile</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslCertlabel" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the label of the certificate within the keyring that the plug-in is to use when the web container requests a client certificate from the plug-in. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL cert label</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ipv6Preferred" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Used when resolving an application server host name of {null} or {0}, to prefer the type of address when possible</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>IPv6 is preferred</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpEndpointRef" use="optional" default="defaultHttpEndpoint" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the identifier of the http endpoint to include in the generated plugin-cfg.xml file. The endpoint defines the server in the cluster. The default value is 'defaultHttpEndpoint'.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Http endpoint</ext:label> 
                    <ext:reference>httpEndpoint</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectTimeout" use="optional" default="5s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies the maximum amount of time that the application server should maintain a connection with the web server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverIOTimeout" use="optional" default="900s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to send a request or receive a response from the application server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use read/write timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="wsServerIOTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to send a request or receive a websocket response from the application server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use read/write timeout for websockets</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="wsServerIdleTimeout" use="optional" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies the maximum amount of time that the web server plugin waits to terminate an idle websocket connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Websocket idle connection timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="extendedHandshake" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If true, the web server plugin uses an extended handshake to determine if the application server is running.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use extended handshake</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="waitForContinue" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If false (the default value), the web server plugin sends the "Expect: 100-continue" header with HTTP requests that have a message body. When set to true, the web server plugin sends the "Expect: 100-continue" header with every HTTP request. Consider setting this value to true if you have a firewall between the web server and the application server, and are sensitive to requests retries with no request body.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Always use "Expect: 100-continue" headers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logFileName" use="optional" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>A fully qualified path to to the web server plug-in log file. Directory component must already exist.  For Apache-based web servers, a path that begins with a pipe character is interpreted as an external piped logger.  If specified, the path overrides logDirLocation.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Log file name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logDirLocation" use="optional" default="${pluginInstallRoot}/logs/${webserverName}" type="dirLocation"> 
            <xsd:annotation> 
                <xsd:documentation>Deprecated: Identifies the directory where the http_plugin.log file is located. See Log file name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Directory of the http_plugin.log file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverIOTimeoutRetry" use="optional" default="-1"> 
            <xsd:annotation> 
                <xsd:documentation>Limits the number of request retries after a read or write timeout. The default value, {-1}, applies no additional limits, so retries are limited by the number of available servers in the cluster.  A {0} value indicates there should be no retries. This value is scoped to the server cluster and does not apply to connection failures or timeouts due to the HTTP plug-in Connection timeout, or to web socket timeouts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum retries after read or write timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="loadBalanceWeight" use="optional" default="20" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>This value is dynamically changed during run time. The weight of a server is lowered each time a request is assigned to that server. When all weights for all servers drop to 0 or a lesser value, the web server plug-in readjusts all the weights so that they are greater than 0.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Starting weight of the server</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverRole" use="optional" default="PRIMARY"> 
            <xsd:annotation> 
                <xsd:documentation>The server role identifies a server as primary or backup. When primary servers are available, the web server plug-in uses them for load balance and failover. However, if none of the primary servers are available, the web server plug-in uses only backup servers for load balance and failover.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Designation of the server role</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="PRIMARY"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Primary</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="BACKUP"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Backup</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="ESIEnable" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>ESIEnable property enables Edge Side Include processing to cache the responses. This property provides the option to disable ESI in the web server plugin configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the ESIEnable property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ESIMaxCacheSize" use="optional" default="1024" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>ESIMaxCacheSize is the maximum size of the cache which defaults to 1MB. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the ESIMaxCacheSize property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ESIInvalidationMonitor" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>ESIInvalidationMonitor specifies if the ESI processor should receive invalidations from the application server. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the ESIInvalidationMonitor property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ESIEnableToPassCookies" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>ESIEnableToPassCookies allows forwarding of session cookies to WebSphere Application Server. This property provides the option to override the value in the web server plugin configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the ESIEnableToPassCookies property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedProxyEnable" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables trusted proxies to be used. When specified, this property overrides the value in the web server plug-in configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the TrustedProxyEnable property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustedProxyGroup" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma-separated list of trusted proxies. When specified, this property overrides the value in the web server plug-in configuration file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Override the TrustedProxyGroup property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the web container.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Container</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="listeners" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A comma separated list of listener classes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Listeners</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decodeUrlAsUtf8" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Decode URLs using an encoding setting of UTF-8.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decode URLs using UTF-8 encoding</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fileServingEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable file serving if this setting was not explicitly specified for the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable file serving</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disallowAllFileServing" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disables all file serving by applications. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disallowAllFileServing.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disallow all file serving</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="directoryBrowsingEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable directory browsing of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable directory browsing</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serveServletsByClassnameEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable servlets to be accessed in a web application using a class name if not explicitly specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Serve servlets by class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disallowServeServletsByClassName" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disallows the use of serveServletsByClassnameEnabled on the application server level. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disallowserveservletsbyclassname.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disallow serve servlet by class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="doNotServeByClassName" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A semi-colon delimited list of classes to be completely disallowed from being served by classname. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.donotservebyclassname.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Do not serve by class name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpsIndicatorHeader" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>For SSL offloading, set to the name of the HTTP header variable inserted by the SSL accelerator/proxy/load balancer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTPS indicator header</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="exposeWebInfOnDispatch" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If true, a servlet can access files in the WEB-INF directory. If false (default), a servlet cannot access files the WEB-INF directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Expose web info on dispatch</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="decodeUrlPlusSign" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Decode the plus sign when it is part of the URL. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.decodeurlplussign.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Decode url plus sign</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suppressHtmlRecursiveErrorOutput" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Suppresses the exception information from appearing in the HTML output when there is a recursive error that cannot be handled by an application's configured error page. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.suppressHtmlRecursiveErrorOutput.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suppress recursive exception in the HTML response</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fileWrapperEvents" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container will generate SMF and PMI data when  serving the static files. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.fileWrapperEvents.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>File wrapper events</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultTraceRequestBehavior" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Restore HTTP TRACE processing. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.DefaultTraceRequestBehavior.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow the HTTP TRACE request method to be invoked</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultHeadRequestBehavior" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Restore the behavior where the HEAD request is not subject to the security constraint defined for the GET method. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.DefaultHeadRequestBehavior.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow the HTTP HEAD request method to be invoked</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tolerateSymbolicLinks" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables the web container to support the use of  symbolic links. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.TolerateSymbolicLinks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Tolerate symbolic links</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="symbolicLinksCacheSize" use="optional" default="1000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Initial size of the symbolic link cache. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.SymbolicLinksCacheSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Symbolic link cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableErrorExceptionTypeFirst" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container is updated to search and use the exception-type before the error-code. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.enableErrorExceptionTypeFirst.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable error exception type first</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="copyAttributesKeySet" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container will return an enumeration of a copy of the list of attributes to the servlet to avoid a concurrent access error by the servlet. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.copyattributeskeyset.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Copy the request attributes list</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dispatcherRethrowsEr" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container will re-throw errors allowing interested resources to process them. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.dispatcherRethrowser.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Rethrow error</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreSessiononStaticFileRequest" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Improves performance by preventing the web container from accessing a session for static file requests involving filters. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.IgnoreSessiononStaticFileRequest.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore session for static file requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="invokeFilterInitAtStartup" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container will call the filter's init() method at application startup. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.invokeFilterInitAtStartup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invoke filter init at startup</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableJspMappingOverride" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the JSP mapping to be overridden so that the application can serve the JSP contents itself. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.enablejspmappingoverride.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JSP mapping override</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableDefaultIsElIgnoredInTag" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Always evaluate whether to ignore EL expressions in tag files. If parent JSP files have different isELIgnored settings, the setting will be re-evaluated in the tag file. The equivalent custom property in the full profile application server is com.ibm.ws.jsp.enabledefaultiselignoredintag.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Evaluate isELIgnored behavior in JSP tag files</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="parseUtf8PostData" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Web container will detect non URL encoded UTF-8 post data and include it in the parameter values. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.parseutf8postdata.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Parse UTF-8 post data</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logServletContainerInitializerClassLoadingErrors" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Log servlet container class loading errors as warnings rather than logging them only when debug is enabled. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.logservletcontainerinitializerclassloadingerrors.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Warn on ServletContainerIntializer errors</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowIncludeSendError" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow RequestDispatch to send errors on Include methods. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.allowincludesenderror.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow include send errors</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="skipMetaInfResourcesProcessing" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Do not search the meta-inf directory for application resources. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.skipmetainfresourcesprocessing.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Skip meta-inf resources processing</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="metaInfResourcesCacheSize" use="optional" default="20" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Initial size (number of entries) of the meta-inf resource cache. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.metainfresourcescachesize.name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Meta-inf resources cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="xPoweredBy" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alternative string for the X-Powered-By header setting. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.xpoweredby. There is no default value for this property. If the property is not set, the value of the X-Powered-By header is set to Servlet/&lt;servlet spec version&gt;, as defined by the Servlet specification.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>X-Powered-By</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableXPoweredBy" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disable setting the X-Powered-By header. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.disablexpoweredby.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable the X-Powered-By header</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="deferServletLoad" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Defer servlet loading from application server startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Defer servlet load</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="asyncMaxSizeTaskPool" use="optional" default="5000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum size of tasks in the Async task pool before automatically purging canceled tasks. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asyncmaxsizetaskpool.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Async servlet maximum pool size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="asyncPurgeInterval" use="optional" default="30000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Time interval to wait between each required purge of the cancelled task pool. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asyncpurgeinterval.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Async servlet purge interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="asyncTimeoutDefault" use="optional" default="30000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Async servlet timeout value used when a timeout value has not been explcitly specified. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asynctimeoutdefault.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default async timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="asyncTimerThreads" use="optional" default="2" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of threads to use for async servlet timeout processing. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.asynctimerthreads.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Async timer threads</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="setContentLengthOnClose" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle to set content length when an application explicitly closes the response. The default value is true; however, set this value to false if an application response contains double-byte characters.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Set content length on close</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="emptyServletMappings" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle if you want to return an empty collection, instead of null, when no servlet mappings are added. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.emptyservletmappings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Return empty servlet mappings</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="deferServletRequestListenerDestroyOnError" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle if you want to defer ServletRequestListener destroy when there is an error serving the request. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.deferServletRequestListenerDestroyOnError.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Defer servlet request listener destroy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowExpressionFactoryPerApp" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle to load the ExpressionFactory that is set by the application. Enable this custom property if you are using a custom EL implementation (for example, JUEL) that needs to set its own ExpressionFactory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow expression factory per application</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ignoreSemiColonOnRedirectToWelcomePage" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle to ignore the trailing semicolon when redirecting to the welcome page. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.ignoreSemiColonOnRedirectToWelcomePage.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Ignore semicolon on redirect to welcome page</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSemiColonAsDelimiterInURI" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle to use the semicolon as a delimiter in the request URI. The default value is false. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.useSemiColonAsDelimiterInURI. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use semicolon as delimiter in URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="servletDestroyWaitTime" use="optional" default="60" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Wait time in seconds for an active request to complete when the owning application is stopped. The default value is 60 seconds. The equivalent custom property in the full application server profile is com.ibm.ws.webcontainer.servletDestroyWaitTime.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Wait for an active request to complete</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="servletPathForDefaultMapping" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Set the servlet path value to the request URI minus the context path. The path information is null when a servlet is used as a default mapping. The default value is true for version 4.0 or later of the servlet feature. It is false for other servlet features. When mapping is to the /* pattern, the servlet path is empty and the path information starts with a leading slash (/).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Set the servlet path value for a default mapping</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="throwExceptionWhenUnableToCompleteOrDispatch" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Throw an illegal state exception when an asynchronous request cannot be completed or dispatched. The default is true. If the asynchronous request must complete or the dispatch method must return, even if the call does not succeed, set the property to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Throw exception for not complete or dispatch asyn</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="getRealPathReturnsQualifiedPath" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Return non-null paths from the ServletContext.getRealPath(String) method, even if no resource exists at the given path. The default is true. If applications expect the getRealPath method to return null when given a path for which no resource exists, set the property to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Always return a non-null path from getRealPath</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.generatePluginConfig.properties"> 
        <xsd:annotation> 
            <xsd:documentation>Additional properties to be added to the Config element in the generated plug-in configuration file.  These properties can be specified by IBM support to modify behavior of the web server plug-in.  They can be found at https://www.ibm.com/support/knowledgecenter/en/SSAW57_9.0.0/com.ibm.websphere.nd.multiplatform.doc/ae/rwsv_plugin_propstable.html</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Additional Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>[extraProperties.com.ibm.ws.generatePluginConfig.properties.description, extraProperties.description]</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.generatePluginConfig.properties-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.generatePluginConfig.properties"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.session.cache"> 
        <xsd:annotation> 
            <xsd:documentation>Controls how HTTP sessions are persisted using JCache.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Session Cache</ext:label> 
                <ext:groupDecl id="performance" label="Performance">Use these properties to tune performance.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary"> 
                <xsd:annotation> 
                    <xsd:documentation>Identifies JCache provider files.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Shared Library</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="properties" type="com.ibm.ws.session.cache.properties"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="writeContents" use="optional" default="ONLY_SET_ATTRIBUTES"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies which session data is written to the persistent store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write contents</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ONLY_SET_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Only attributes for which setAttribute is invoked are written to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="GET_AND_SET_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Attributes for which getAttribute or setAttribute is invoked are written to the persistent store. This can be useful for applications that use getAttribute to obtain and mutate attribute values without using setAttribute to explicitly request that they be written to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ALL_SESSION_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All attributes are written to the persistent store regardless of whether getAttribute or setAttribute are invoked.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="writeFrequency" use="optional" default="END_OF_SERVLET_SERVICE"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when session data is written to the persistent store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write frequency</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="END_OF_SERVLET_SERVICE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session data is written to the persistent store after the servlet completes execution.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MANUAL_UPDATE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session data is written to the persistent store upon programmatic sync of the IBMSession object.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TIME_BASED_WRITE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session data is written to the persistent store according to the write interval.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="writeInterval" use="optional" default="2m" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how often to write session data to the persistent store. This value is used when a time-based write frequency is enabled. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write interval</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="libraryRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Identifies JCache provider files.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Shared Library</ext:label> 
                    <ext:reference>library</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="uri" use="optional" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Vendor specific JCache configuration URI, which is passed to the JCache provider when obtaining the CacheManager.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JCache configuration URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scheduleInvalidationFirstHour" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Enable this option to reduce the number of cache updates required to remove invalidated HTTP sessions. Specify an hour of the day when there is the least activity. When this option is disabled, the invalidator process runs every few minutes to remove invalidated HTTP sessions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>First hour of scheduled invalidation</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="23"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="scheduleInvalidationSecondHour" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Enable this option to reduce the number of cache updates required to remove invalidated HTTP sessions. Specify an hour of the day when there is the least activity. When this option is disabled, the invalidator process runs every few minutes to remove invalidated HTTP sessions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Second hour of scheduled invalidation</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="23"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.session.cache.properties"> 
        <xsd:annotation> 
            <xsd:documentation>List of vendor specific JCache configuration properties, which are passed to the JCache provider when obtaining the CacheManager.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JCache Configuration Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>List of vendor specific JCache configuration properties, which are passed to the JCache provider when obtaining the CacheManager.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Vendor specific properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.session.db"> 
        <xsd:annotation> 
            <xsd:documentation>Controls how HTTP sessions are persisted to a database.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>HTTP Session Database</ext:label> 
                <ext:extraProperties/> 
                <ext:groupDecl id="performance" label="Performance">Changing these settings may enhance performance.</ext:groupDecl> 
                <ext:groupDecl id="advanced.performance" label="Advanced Performance">Changing these settings may enhance performance, but the default values work for most environments.</ext:groupDecl> 
                <ext:groupDecl id="db2" label="DB2 Only">These optional settings are only applicable to DB2 databases.</ext:groupDecl> 
                <ext:groupDecl id="oracle" label="Oracle Only">These optional settings are only applicable to Oracle databases.</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="dataSourceRef" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The identifier of the data source the session manager should use to persist HTTP session data.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data source</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tableName" use="optional" default="sessions" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The database table name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Table name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useMultiRowSchema" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When enabled, each session data attribute is placed in a separate row in the database, allowing larger amounts of data to be stored for each session. This configuration can yield better performance when session attributes are very large and few changes are required to the session attributes. When disabled, all session data attributes are placed in the same row for each session.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use multi row schema</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="skipIndexCreation" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to "true" to disable index creation on server startup. This custom property should only be used if you want to manually create your own database indices for session persistence. However, it is recommended that you let session manager create database indices. Before enabling this property, make sure that the correct index does exist on your session database.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Skip index creation</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="writeFrequency" use="optional" default="END_OF_SERVLET_SERVICE"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies when session data is written to the persistent store. By default, session data is written to the persistent store after the servlet completes execution. Changing this value can improve performance in some environments.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write frequency</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="END_OF_SERVLET_SERVICE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session data is written to the persistent store after the servlet completes execution.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MANUAL_UPDATE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>A programmatic sync on the IBMSession object is required to write the session data to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TIME_BASED_WRITE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session data is written to the persistent store based on the specified write interval value.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="writeInterval" use="optional" default="2m" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Number of seconds that should pass before writing session data to the persistent store. The default is 120 seconds. This value is only used when a time based write frequency is enabled. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write interval</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="writeContents" use="optional" default="ONLY_UPDATED_ATTRIBUTES"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how much session data should be written to the persistent store.  By default, only updated attributes are written, but all attributes can be written instead (regardless of whether or not they changed).</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Write contents</ext:label> 
                    <ext:group id="performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ONLY_UPDATED_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Only updated attributes are written to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="GET_AND_SET_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Attributes for which getAttribute or setAttribute is invoked are written to the persistent store. This can be useful for applications that use getAttribute to obtain and mutate attribute values without using setAttribute to explicitly request that they be written to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ALL_SESSION_ATTRIBUTES"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All attributes are written to the persistent store.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="scheduleInvalidation" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enable this option to reduce the number of database updates required to keep the HTTP sessions alive. Specify the two hours of a day when there is the least activity in the application server. When this option is disabled, the invalidator process runs every few minutes to remove invalidated HTTP sessions.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Schedule invalidation</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scheduleInvalidationFirstHour" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates the first hour during which the invalidated sessions are cleared from the persistent store. Specify this value as an integer between 0 and 23. This value is valid only when schedule invalidation is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>First hour of day</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scheduleInvalidationSecondHour" use="optional" default="0" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates the second hour during which the invalidated sessions are cleared from the persistent store. Specify this value as an integer between 0 and 23. This value is valid only when schedule invalidation is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Second hour of day</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="noAffinitySwitchBack" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to "true" to maintain affinity to the new member even after original one comes back up. When a cluster member fails, its requests routed to a different cluster member, and sessions are activated in that other member. Thus, session affinity is maintained to the new member, and when failed cluster member comes back up, the requests for sessions that were created in the original cluster member are routed back to it. Allowed values are true or false, with the default being false. Set this property to true when you have distributed sessions configured with time-based write. Note that this property has no affect on the behavior when distributed sessions are not enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>No affinity switchBack</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useInvalidatedId" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to "true" to reuse the incoming identifier if the session with that identifier was recently invalidated. This is a performance optimization because it prevents checking the persistent store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use invalidated identifier</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="onlyCheckInCacheDuringPreInvoke" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>A value of true indicates that the last access time of a session should only be updated if a request gets the session. A value of false indicates that the last access time of a session should be updated upon every request. Changing this value can improve performance in some environments.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Only check in cache during pre invoke</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="optimizeCacheIdIncrements" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>If the user's browser session is moving back and forth across multiple web applications, you might see extra persistent store activity as the in-memory sessions for a web module are refreshed from the persistent store. As a result, the cache identifiers are continually increasing and the in-memory session attributes are overwritten by those of the persistent copy.  Set this property to true if you want to prevent the cache identifiers from continually increasing. A value of true indicates that the session manager should assess whether the in-memory session for a web module is older than the copy in persistent store. If the configuration is a cluster, ensure that the system times of each cluster member are as identical as possible.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Optimize cache identifier increments</ext:label> 
                    <ext:group id="advanced.performance"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="db2RowSize" use="optional" default="4KB"> 
            <xsd:annotation> 
                <xsd:documentation>Table space page size configured for the sessions table, if using a DB2 database. Increasing this value can improve database performance in some environments.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DB2 row size</ext:label> 
                    <ext:group id="db2"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="4KB"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use the default table space page size of 4 KB. You do not need to create a DB2 buffer pool or table space, and you do not need to specify a table space name.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="8KB"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a table space page size of 8 KB. You must additionally create a DB2 buffer pool and table space, and specify 8KB as the page size for both. You must also specify the name of the table space you created.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="16KB"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a table space page size of 16 KB. You must additionally create a DB2 buffer pool and table space, and specify 16KB as the page size for both. You must also specify the name of the table space you created.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="32KB"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a table space page size of 32 KB. You must additionally create a DB2 buffer pool and table space, and specify 32KB as the page size for both. You must also specify the name of the table space you created.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="tableSpaceName" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Table space to be used for the sessions table. This value is only required when the DB2 Row Size is greater than 4KB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Table space name</ext:label> 
                    <ext:group id="db2"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="usingCustomSchemaName" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to "true" if you are using DB2 for session persistence and the currentSchema property is set in the data source.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use custom schema name</ext:label> 
                    <ext:group id="db2"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useOracleBlob" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set this property to "true" to create the database table using the Binary Large Object (BLOB) data type for the medium column. This value increases performance of persistent sessions when Oracle databases are used. Due to an Oracle restriction, BLOB support requires use of the Oracle Call Interface (OCI) database driver for more than 4000 bytes of data. You must also ensure that a new sessions table is created before the server is restarted by dropping your old sessions table or by changing the datasource definition to reference a database that does not contain a sessions table.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Binary Large Object (BLOB) for medium column</ext:label> 
                    <ext:group id="oracle"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Additional properties related to session persistence.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jain.protocol.ip.sip"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP stack</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Stack</ext:label> 
                <ext:groupDecl id="timers" label="SIP Timers">Override RFC3261 SIP Timers default values</ext:groupDecl> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="hideMessageHeaders" default="Authorization" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A comma-separated list of headers that is not output to the SIP container logs.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Hide message headers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="commaSeparatedHeaders" default="" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A list of header fields that should be comma-separated. If there are multiple values of the same header, the headers are not duplicated and the value will be in the same header separated by a comma.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Comma separated headers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sipQuotedParameters" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>A list of header parameters with values that are quoted.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SIP quoted parameters</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="hideMessageBody" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Hide message content in the SIP container logs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hide message body</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hideMessageReqUri" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Hide the message request URI in the SIP container logs.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Hide message request URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="auto100OnInvite" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The SIP container automatically sends a 100 response code when an INVITE request is received.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatic 100 on invite</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="auto482OnMergedRequests" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>The SIP container automatically sends a 482 response code when a merged request is received. This behavior is defined in the SIP RFC 3261 Section 8.2.2.2.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatic 482 on merged requests</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceConnectionReuse" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Connections are reused in subsequent requests even if the alias parameter exists in the via header.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Force connection reuse</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="acceptNonUtf8Bytes" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Accept byte sequences that are not encoded in UTF-8.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Accept non-UTF-8 bytes</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="networkAddressCacheTtl" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The amount of time that the SIP container keeps a cached InetAddress entry and does not resolve it again.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Network address cache TTL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerT1" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The round-trip time (RTT) estimate, in milliseconds, as defined in RFC 3261. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>T1</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerT2" use="optional" default="4000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum retransmit interval, in milliseconds, for non-INVITE requests and INVITE responses, as defined in RFC 3261. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>T2</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerT4" use="optional" default="5000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum duration that a message remains in the network in milliseconds, as defined in RFC 3261. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>T4</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerA" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The initial INVITE request retransmit interval for UDP only, in milliseconds, as defined in RFC 3261. The default value equals T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>A</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerB" use="optional" default="32000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The INVITE client transaction timeout timer, in milliseconds, as defined in RFC 3261. The default value equals 64*T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>B</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerD" use="optional" default="32000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The wait time for INVITE response retransmits, in milliseconds, as defined in RFC 3261. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>D</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerE" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The initial non-INVITE request retransmit interval for UDP only, in milliseconds, as defined in RFC 3261. The default value equals T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>E</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerF" use="optional" default="32000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The non-INVITE transaction timeout timer, in milliseconds, as defined in RFC 3261. The default value equals 64*T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>F</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerI" use="optional" default="5000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The wait time for ACK retransmits, in milliseconds, as defined in RFC 3261. The default value equals T4. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>I</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerJ" use="optional" default="32000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The wait time for non-INVITE request retransmits, in milliseconds, as defined in RFC 3261. The default value equals 64*T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>J</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerK" use="optional" default="5000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The wait time for non-INVITE response retransmits, in milliseconds, as defined in RFC 3261. The default value equals T4. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>K</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pathMtu" use="optional" default="1500" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum transmission unit (MTU) for outbound UDP requests, as defined in RFC 3261-18.1.1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Path maximum transmission unit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="compactHeaders" use="optional" default="MtuExceeds"> 
            <xsd:annotation> 
                <xsd:documentation>Defines when the SIP stack uses compact headers when encoding a message.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Compact headers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Never"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Headers are never sent in compact form</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MtuExceeds"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Headers are sent in compact form only when MTU is exceeded</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="API"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Headers are sent according to JSR289 javax.servlet.sip.SipServletMessage.setHeaderForm(javax.servlet.sip.SipServletMessage.HeaderForm)</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Always"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Headers are always sent in compact form</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timerG" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The initial INVITE response retransmit interval,  in milliseconds, as defined in RFC 3261. The default value equals T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>G</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timerH" use="optional" default="32000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The wait time for ACK receipts,  in milliseconds, as defined in RFC 3261. The default value equals 64*T1. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>H</ext:label> 
                    <ext:group id="timers"/> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.ar"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP application router</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Application Router</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sipDarConfiguration" use="optional" default="" type="fileLocation"> 
            <xsd:annotation> 
                <xsd:documentation>The location of the default application router (DAR) properties file. This value is mapped to JSR 289 javax.servlet.sip.ar.dar.configuration. The DAR must be configured as specified in JSR 289.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SIP application router DAR file location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sipNoRouteErrorCode" use="optional" default="403" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The error response code that is sent by the SIP container when no active servlet can be mapped to an incoming initial request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SIP response error code when no route found</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="carProvider" use="optional" default="*" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The fully qualified domain name (FQDN) of the custom application router provider. Set to an asterisk  (*) to use an arbitrary available provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom application router provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enable.car" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Applications are routed using the available custom application router; otherwise, the default application router is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable custom application router loading</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.container.resolver.DomainResolverImpl"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP domain resolver</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Domain Resolver</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="dnsServers" minOccurs="0" maxOccurs="2" default="" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Allows a SIP URI to be resolved through DNS into the IP address, port, and transport protocol. The value is a String that contains exactly one or two address and port tuples, where two tuples are separated by a space.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>DNS servers</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="dnsAutoResolve" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Resolve domain names automatically.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS auto resolve</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dnsEdns" use="optional" default="Y"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the transport protocol for DNS lookup to resolve RFC 3263 SIP URIs. If set to Y, UDP is used. If set to N, TCP is used. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS UDP lookup method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Y"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Y</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="N"> 
                                <xsd:annotation> 
                                    <xsd:documentation>N</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dnsUdpPayloadSize" use="optional" default="1280"> 
            <xsd:annotation> 
                <xsd:documentation>The UDP payload size in bytes for the DNS resolver service.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS UDP payload size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:short"> 
                            <xsd:minInclusive value="512"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="32767"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="dnsSingleQueryTimeoutSec" use="optional" default="5s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The number of seconds after which a single query times out for the DNS failover mechanism. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS single query timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dnsAllowedFailures" use="optional" default="5" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The number of allowed DNS lookup failures for the DNS failover mechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS allowed failures</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dnsWindowSizeMin" use="optional" default="600" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The minimum window size for the DNS failover mechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS minimum window size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dnsWindowSizeInterval" use="optional" default="10" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The resolver service window size interval for the DNS failover mechanism.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS window size interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dnsRequestCacheTimeoutMin" use="optional" default="10m" type="minuteDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The minimum time in minutes after which cached DNS queries time out. Specify a positive integer followed by a unit of time, which can be hours (h) or minutes (m). For example, specify 30 minutes as 30m. You can include multiple values in a single entry. For example, 1h30m is equivalent to 90 minutes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>DNS request cache timeout minimum</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="addTtl" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Add an IBMTTL parameter to the SIP URI.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Add TTL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.container.internal.SipContainerComponent"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP servlets container</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Container</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="sipIntrospect" type="com.ibm.ws.sip.introspector"> 
                <xsd:annotation> 
                    <xsd:documentation>Configuration for the SIP introspect</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SIP Introspect</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sipTasksDispatcher" type="com.ibm.ws.sip.container.was.ExecutorMessageDispatchingHandler"> 
                <xsd:annotation> 
                    <xsd:documentation>Configuration for the executor of parallel SIP tasks</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SIP Performance</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="invalidateSessionOnShutdown" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When the SIP container shuts down, the sessions are no longer valid.  By default, sessions remain active until they expire.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Invalidate sessions on shutdown</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="msgArrivalTimeAttr" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Save the message arrival time as an attribute of the message.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Save message arrival time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="markInternalResponse" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Mark internally generated responses by setting the com.ibm.websphere.sip.container.internal.message attribute on the response.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Add mark internally generated response header</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="messageQueueBurstFactor" use="optional" default="10" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The burst factor for the message queue size. The message queue size is set to (dispatcher message queue size) * (message queue burst factor). Setting a burst factor handles bursts in traffic by providing additional space in the queue before new messages are dropped.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message queue burst factor</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxAppSessions" use="optional" default="120000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of SIP application sessions allowed at once.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max application sessions</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxMessageRate" use="optional" default="5000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of messages allowed per averaging period.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max message rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dispatcherMessageQueueSize" use="optional" default="1000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of tasks that a SIP container queue can contain before it declares an overload state.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Dispatcher message queue size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxResponseTime" use="optional" default="0ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum response time allowed in milliseconds. When set to 0, the response time is unlimited. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Max response time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.container.was.ExecutorMessageDispatchingHandler"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the executor of parallel SIP tasks</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Performance</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="concurrentContainerTasks" use="optional" default="15" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of concurrent SIP tasks that can be dispatched to the executor.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Concurrent SIP tasks</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.container.was.ExecutorMessageDispatchingHandler-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sip.container.was.ExecutorMessageDispatchingHandler"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.endpoint"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP endpoint </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Endpoint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines TCP protocol settings</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Endpoint Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines SSL protocol settings</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SSL Endpoint Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines TCP protocol settings</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslOptionsRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines SSL protocol settings</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL options reference</ext:label> 
                    <ext:reference>sslOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sipTCPPort" use="optional" default="5060" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The TCP port used by the SIP endpoint. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SIP TCP port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sipUDPPort" use="optional" default="5060" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The UDP port used by the SIP endpoint. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SIP UDP port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sipTLSPort" use="optional" default="5061" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The TLS port used by the SIP endpoint. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SIP secure TLS port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bindRetries" use="optional" default="60" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The number of retries that are attempted when port binding is unsuccessful.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retries</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="bindRetryDelay" use="optional" default="5000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The delay between retries in milliseconds. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retries delay</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The IP of the endpoint host</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                    <ext:variable>defaultHostName</ext:variable> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.endpoint-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sip.endpoint"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.introspector"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the SIP introspect</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SIP Introspect</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="method" use="optional" default="SUCCINCT"> 
            <xsd:annotation> 
                <xsd:documentation>The level of SIP state details to include when generating server dump. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Dump verbosity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SUCCINCT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server dumps include only the SIP application sessions and SIP sessions IDs</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="VERBOSE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Includes the detailed state of the SIP application sessions and the SIP sessions in the server dump.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sip.introspector-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sip.introspector"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.linkedin"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the social login for Linkedin.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Linkedin Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="clientId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpoint" use="optional" default="https://www.linkedin.com/oauth/v2/authorization" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" default="https://www.linkedin.com/oauth/v2/accessToken" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApi" use="optional" default="https://api.linkedin.com/v2/emailAddress?q=members&amp;projection=(elements*(handle~))" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of retrieving the user information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" default="r_emailaddress r_liteprofile" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="emailAddress" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="Linkedin" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" default="https://www.linkednin.com" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.google"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the social login for Google.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Google Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="clientId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpoint" use="optional" default="https://accounts.google.com/o/oauth2/v2/auth" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" default="https://www.googleapis.com/oauth2/v4/token" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwksUri" use="optional" default="https://www.googleapis.com/oauth2/v3/certs" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON Web Key service URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK endpoint url</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" default="openid profile email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="Google" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" default="https://accounts.google.com" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuer" use="optional" default="https://accounts.google.com" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The url of the issuer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmNameAttribute" use="optional" default="iss" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject realm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the realm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupNameAttribute" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the user group membership.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the group</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userUniqueIdAttribute" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject uniqueId.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as subject unique id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="300000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum time difference in milliseconds between when a key is issued and when it can be used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Clock skew</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="RS256" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The algorithm that is used to sign a token or key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="id_token token"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ID token and access token</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.github"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the social login for GitHub.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>GitHub Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="clientId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpoint" use="optional" default="https://github.com/login/oauth/authorize" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" default="https://github.com/login/oauth/access_token" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApi" use="optional" default="https://api.github.com/user/emails" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of retrieving the user information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" default="user" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="GitHub" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" default="https://github.com" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.twitter"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the social login for Twitter.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Twitter Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="consumerKey" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Consumer key issued by Twitter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Consumer key</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="consumerSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Consumer secret issued by Twitter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Consumer secret</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="requestTokenUrl" use="optional" default="https://api.twitter.com/oauth/request_token" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The request token endpoint of Twitter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Request token URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userAuthorizationUrl" use="optional" default="https://api.twitter.com/oauth/authenticate" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The user authorization end point URL of Twitter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenUrl" use="optional" default="https://api.twitter.com/oauth/access_token" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The token end point URL of Twitter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApi" use="optional" default="https://api.twitter.com/1.1/account/verify_credentials.json" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of retrieving the user information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="Twitter" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" default="https://twitter.com" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.webapp"> 
        <xsd:annotation> 
            <xsd:documentation>Social Login Web Application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Social Login Web Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="contextPath" use="optional" default="/ibm/api/social-login" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The context path that the social login web application redirect servlet listens on.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableLocalAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When this property is set to true and a custom social media selection page is not configured, the default social media selection page will include inputs for a user name and password. Users may choose to authenticate with a user name and password instead of selecting a social media provider. The user name and password will be verified against the configured user registry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable local authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="socialMediaSelectionPageUrl" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of a custom web page that can display social media options that are available to use for authentication. The value must be an absolute URI that uses the HTTP or HTTPS protocol, or a relative URI. The web page must be able to receive HTTP request parameters that include the server configuration information that is required to display and submit the appropriate options. See the product documentation for more information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Social media selection page</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.facebook"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of the social login for Facebook.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Facebook Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="clientId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginDialogEndpoint" use="optional" default="https://www.facebook.com/v2.8/dialog/oauth" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The login authorization end point URL of Facebook.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login dialog end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" default="https://graph.facebook.com/v2.8/oauth/access_token" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApi" use="optional" default="https://graph.facebook.com/v2.8/me?fields=id,name,email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of retrieving the user information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="permissions" use="optional" default="public_profile email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the required scope from Facebook.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth permissions</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="Facebook" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" default="https://www.facebook.com" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.oidclogin"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of a social login that uses OIDC.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OIDC Social Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
            <xsd:element name="authzParameter" type="com.ibm.ws.security.social.client.param-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies custom parameters to send to the authorization endpoint of the OpenID Connect provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom Parameters For Authorization Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tokenParameter" type="com.ibm.ws.security.social.client.param-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies custom parameters to send to the token endpoint of the OpenID Connect provider.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Custom Parameters For Token Endpoint</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The unique ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique ID</ext:label> 
                    <ext:unique>uniqueId</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientId" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpoint" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userInfoEndpoint" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a UserInfo end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Userinfo end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userInfoEndpointEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the User Info endpoint is contacted.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Userinfo endpoint enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwksUri" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a JSON Web Key service URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK endpoint url</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" default="openid profile email" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="sub" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustAliasName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a trusted key alias for using the public key to verify the signature of the token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trusted alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" default="oidcLogin" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="issuer" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The url of the issuer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Issuer</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmNameAttribute" use="optional" default="iss" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject realm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the realm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupNameAttribute" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the user group membership.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the group</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userUniqueIdAttribute" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject uniqueId.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as subject unique id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="300000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum time difference in milliseconds between when a key is issued and when it can be used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Clock skew</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="signatureAlgorithm" use="optional" default="RS256" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The algorithm that is used to sign a token or key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Signature algorithm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="hostNameVerificationEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to enable host name verification when the client contacts the provider. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name verification enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="id_token token"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ID token and access token</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="discoveryEndpoint" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a discovery endpoint URL for an OpenID Connect provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Discovery endpoint URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="discoveryPollingRate" use="optional" default="300s" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Rate in milliseconds at which the OpenID Connect client checks for updates to the discovery file. The check is done only if an authentication failure exists. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Next discovery interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkClientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the client identifier to include in the basic authentication scheme of the JWK request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK client identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="jwkClientSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the client password to include in the basic authentication scheme of the JWK request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>JWK client password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.oidclogin-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.social.oidclogin"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.login.jwt"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the information that is used to build the JWT tokens. This information includes the JWT builder reference and the claims from the id token.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>JWT Builder</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="claims" minOccurs="0" maxOccurs="400" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies a comma-separated list of claims to copy from the user information or the id token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>List of claims to copy to the JWT token</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="builder" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The referenced JWT builder creates a JWT token, and the token is added to the authenticated subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Builder reference</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.login.jwt-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.social.login.jwt"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.client.param"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies additional parameters to include in the requests to send to the provider.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Custom Parameters To Include In Requests</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the name of the additional parameter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom request parameter name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the value of the additional parameter.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Custom request parameter value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.client.param-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.social.client.param"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.oauth2login"> 
        <xsd:annotation> 
            <xsd:documentation>The configuration of a generic social media login. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>OAuth Login</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="jwt" type="com.ibm.ws.security.social.login.jwt"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The unique ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique ID</ext:label> 
                    <ext:unique>uniqueId</ext:unique> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the social login configuration for display.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of social login</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="website" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The website address.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Website</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authorizationEndpoint" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an Authorization end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authorization end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpoint" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a token end point URL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Token end point URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="responseType" use="optional" default="code"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the OAuth response type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth response type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="code"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Authorization code</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="tokenEndpointAuthMethod" use="optional" default="client_secret_post"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required authentication method.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication method</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="client_secret_basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_basic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="client_secret_post"> 
                                <xsd:annotation> 
                                    <xsd:documentation>client_secret_post</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies an ID of the SSL configuration that is used to connect to the social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="scope" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies required scope.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth scope</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="redirectToRPHostAndPort" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a callback host and port number.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Callback host and port number</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The application or client ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientSecret" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The secret of the application or client.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secret of application or client</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userNameAttribute" use="optional" default="email" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is authenticated user principal.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApi" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The URL of retrieving the user information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User information URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmName" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The realm name for this social media.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmNameAttribute" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject realm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the realm</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupNameAttribute" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the user group membership.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as the group</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userUniqueIdAttribute" use="optional" type="tokenType"> 
            <xsd:annotation> 
                <xsd:documentation>The value of the claim is used as the subject uniqueId.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Claim as subject unique id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to map userIdentifier to registry user.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map user identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="isClientSideRedirectSupported" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client side redirection is supported. Examples of a client include a browser or a standalone JavaScript application. If set to true, the client must support JavaScript.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Is client side redirection supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSystemPropertiesForHttpClientConnections" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use Java system properties when the OpenID Connect or OAuth client creates HTTP client connections. Set this property to true if you want the connections to use the http* or javax* system properties.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use system properties for HTTP client connections</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userApiType" use="optional" default="basic"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates which specification to use for the user API.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User API specification</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="basic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Indicates that the user API can be directly started with an HTTP GET request.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="kube"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Indicates that the user API is a Kubernetes TokenReview API.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="introspect"> 
                                <xsd:annotation> 
                                    <xsd:documentation>internal</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="userApiToken" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the access token that has permission to call the user API. For OpenShift, the token is from a service account with permission to call the TokenReview API, which usually requires the system:auth-delegator role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token for user API calls</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenRequired" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether the access token that is provided in the request is used for authentication. If true, the client must provide a valid access token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token authentication required</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenSupported" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Determines whether to support access token authentication if an access token is provided in the request. If true, and an access token is provided in the request, the access token is used as an authentication token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Access token authentication supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="accessTokenHeaderName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the header to use when an OAuth access token is forwarded.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>OAuth access token header name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.social.oauth2login-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.social.oauth2login"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.spnego"> 
        <xsd:annotation> 
            <xsd:documentation>Controls the operation of the Simple and Protected GSS-API Negotiation Mechanism. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Spnego Authentication</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="authFilter" minOccurs="0" maxOccurs="1" type="com.ibm.ws.security.authentication.filter"> 
                <xsd:annotation> 
                    <xsd:documentation>Specifies the authentication filter reference. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Filter Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="authFilterRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication filter reference. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication filter reference</ext:label> 
                    <ext:reference>authFilter</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="canonicalHostName" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether you want to use the canonical host name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use canonical host name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="krb5Config" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the fully qualified Kerberos configuration path and name. Standard variable substitutions, such as ${server.config.dir}, can be used when specifying the directory path.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The Kerberos configuration file with full path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="krb5Keytab" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the fully qualified Kerberos keytab  path and name. Standard variable substitutions, such as ${server.config.dir}, can be used when specifying the directory path. The Kerberos keytab file contains a list of keys that are analogous to user passwords. It is important for hosts to protect their Kerberos keytab files by storing them on the local disk.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The Kerberos keytab file name and include path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="servicePrincipalNames" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a list of Kerberos service principal names separated by a comma. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The Kerberos service principal names (SPN)</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="disableFailOverToAppAuthType" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies that SPNEGO is used to log in to WebSphere Application Server first. However, if the login fails, then the application authentication mechanism is used to log in to the WebSphere Application Server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Disable fall back to application authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="spnegoNotSupportedErrorPageURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the URL of a resource that contains the content which SPNEGO includes in the HTTP response that is displayed by the browser client application if it does not support SPNEGO authentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SPNEGO not supported error page URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ntlmTokenReceivedErrorPageURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the URL of a resource that contains the content which SPNEGO includes in the HTTP response, which is displayed by the browser client application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>NTLM token received error page URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trimKerberosRealmNameFromPrincipal" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether SPNEGO removes the suffix of the Kerberos principal user name, starting from the @ that precedes the Kerberos realm name. If this attribute is set to true, the suffix of the principal user name is removed. If this attribute is set to false, the suffix of the principal name is retained.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remove the realm name from a Kerberos principal</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeClientGSSCredentialInSubject" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the client delegation credentials should be stored in a client subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Add the client delegation credentials to subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.springappcfg"> 
        <xsd:annotation> 
            <xsd:documentation>Defines the properties of a Spring Boot application.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Spring Boot Application</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="applicationArgument" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Defines an application argument which is passed to the main method of the start class for a Spring Boot application.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Application argument</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="classloader" type="com.ibm.ws.classloading.classloader"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="location" use="required" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>Location of an application expressed as an absolute path or a path relative to the server-level apps directory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of an application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="autoStart" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates whether or not the server automatically starts the application.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Automatically start</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useJandex" use="optional" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables use of Jandex index files if they are supplied in the application</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use Jandex</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.app.manager.springappcfg-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.app.manager.springappcfg"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.default"> 
        <xsd:annotation> 
            <xsd:documentation>The default repertoire for SSL services.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SSL Default Repertoire</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sslRef" use="optional" default="defaultSSLConfig" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the SSL repertoire that will be used as the default.  The default SSL repertoire called defaultSSLConfig is used if none is specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default SSL repertoire</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outboundSSLRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the SSL repertoire that will be used as the default for outbound SSL connections.  The default SSL repertoire will be used if no SSL repertoire is specified.  This attribute is ignored if the transportSecurity-1.0 feature is not specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Outbound default SSL repertoire</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpHostNameVerification" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether SSL outbound host name verification is enabled. The default is false. If set to true, then during the outbound SSL handshake requests, the JDK will verify that the returned certificate contains a host name that matches the outbound HTTP request.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Perform outbound host name verification</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.repertoire"> 
        <xsd:annotation> 
            <xsd:documentation>An SSL repertoire with an ID, a defined keystore, and an optional truststore.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SSL Repertoire</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="keyStore" type="com.ibm.ws.ssl.keystore"> 
                <xsd:annotation> 
                    <xsd:documentation>A keystore containing key entries for the SSL repertoire. This attribute is required.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Keystore</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="trustStore" type="com.ibm.ws.ssl.keystore"> 
                <xsd:annotation> 
                    <xsd:documentation>A keystore containing trusted certificate entries used by the SSL repertoire for signing verification. This attribute is optional. If unspecified, the same keystore is used for both key and trusted certificate entries.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Truststore</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="outboundConnection" type="com.ibm.ws.ssl.repertoire.config.outboundConnection-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="keyStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing key entries for the SSL repertoire. This attribute is required.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustStoreRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore containing trusted certificate entries used by the SSL repertoire for signing verification. This attribute is optional. If unspecified, the same keystore is used for both key and trusted certificate entries.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore</ext:label> 
                    <ext:reference>keyStore</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslProtocol" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The SSL handshake protocol. Protocol values can be found in the documentation for the underlying JRE's Java Secure Socket Extension (JSSE) provider.  When using the IBM JRE the default value is SSL_TLS and when using the Oracle JRE the default value is SSL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL protocol</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientAuthentication" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether client authentication is enabled. If set to true then client authentication is required and the client must provide a certificate for the server trusts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientAuthenticationSupported" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether a client authentication is supported.  If set to true then the client authentication support means the server will check trust from a client if the client presents a certificate.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client authentication is supported</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="securityLevel" use="optional" default="HIGH"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the cipher suite group used by the SSL handshake.  HIGH are 3DES and 128 bit and higher ciphers, MEDIUM are DES and 40 bit ciphers, LOW are ciphers without encryption.  If the enabledCiphers attribute is used the securityLevel list is ignored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Security level</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="HIGH"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Cipher suites 3DES and 128 bit and higher</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MEDIUM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%repertoire.MEDIUM</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="LOW"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%repertoire.LOW</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CUSTOM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%repertoire.CUSTOM</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientKeyAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the alias of the certificate in the keystore that is used as the key to send to a server that has client authentication enabled.  This attribute is only needed if the keystore has more than one key entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client key alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="serverKeyAlias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the alias of the certificate in the keystore used as the server's key.  This attribute is only needed if the keystore has more then one key entry. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Server key alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enabledCiphers" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a custom list of ciphers. Separate each cipher in the list with a space. The supported cipher will depend on the underlying JRE used.  Please check the JRE for valid ciphers.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled ciphers</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="verifyHostname" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether host name verification for outbound connections using a specific SSL configuration is enabled. If set to true, then all outbound SSL connections that use the specified SSL configuration undergo verification of the target server host name against that server's certificate. The attribute is set to false by default.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host name verification</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trustDefaultCerts" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the trust manager can establish trust by using the default certificates. If set to true, then the default certificates are used in addition to the configured truststore file to establish trust. The attribute is set to false by default.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Trust the default certificates</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.repertoire-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ssl.repertoire"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.keystore"> 
        <xsd:annotation> 
            <xsd:documentation>A repository of security certificates used for SSL encryption.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Keystore</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="keyEntry" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.ssl.keystore.config.keyEntry-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="id" use="optional" default="defaultKeyStore" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The password used to load the keystore file. The value can be stored in clear text or encoded form. Use the securityUtility tool to encode the password.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="location" use="optional" default="${server.output.dir}/resources/security/key.p12" type="location"> 
            <xsd:annotation> 
                <xsd:documentation>An absolute or relative path to the keystore file. If a relative path is provided, the server will attempt to locate the file in the ${server.output.dir}/resources/security directory. Use the keystore file for a file-based keystore, the keyring name for SAF keyrings, or the device configuration file for hardware cryptography devices. In the SSL minimal configuration, the location of the file is assumed to be ${server.output.dir}/resources/security/key.jks.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="type" use="optional" default="PKCS12" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A keystore type supported by the target SDK.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="fileBased" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify true if the keystore is file based and false if the keystore is a SAF keyring or hardware keystore type.  </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>File based keystore</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="readOnly" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specify true if the keystore is to be used by the server for reading and false if write operations will be performed by the server on the keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read only keystore</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pollingRate" use="optional" default="500ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Rate at which the server checks for updates to a keystore file. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore file polling rate</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="updateTrigger" use="optional" default="mbean"> 
            <xsd:annotation> 
                <xsd:documentation>Keystore file update method or trigger.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore file update trigger</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="polled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will scan for keystore file changes at the polling interval and update if the keystore file has detectable changes.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="mbean"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Server will only update the keystore when prompted by the FileNotificationMbean. The FileNotificationMbean is typically called by an external program such as an integrated development environment or a management application.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Disables all update monitoring. Changes to the keystore file will not be applied while the server is running.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.keystore-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ssl.keystore"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.repertoire.config.outboundConnection"> 
        <xsd:annotation> 
            <xsd:documentation>Dynamic outbound connection information tells the server which SSL connection to use based on host and port filters.  This element is ignored if the transportSecurity-1.0 feature is not specified.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Dynamic Outbound Connection Information</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="host" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The server uses this SSL configuration when it accesses the specified host name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote host name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="port" use="optional" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The server uses this SSL configuration when it accesses the remote host name at the specified port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientCertificate" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The client uses this certificate alias if you make a connection to a server that supports or requires client authentication.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client certificate alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.repertoire.config.outboundConnection-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ssl.repertoire.config.outboundConnection"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.keystore.config.keyEntry"> 
        <xsd:annotation> 
            <xsd:documentation>Information about a private key entry specified in the keystore.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Key Entry Information</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the private key entry in the keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key entry name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyPassword" use="required" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password of the private key entry in the keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key entry password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.ssl.keystore.config.keyEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.ssl.keystore.config.keyEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sslchannel.options"> 
        <xsd:annotation> 
            <xsd:documentation>The SSL protocol configuration for a transport.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SSL Options</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sessionTimeout" use="optional" default="1d" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time to wait for a read or write request to complete on a socket. This value is overridden by protocol-specific timeouts. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Session timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="suppressHandshakeErrors" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Disable logging of SSL handshake errors. SSL handshake errors can occur during normal operation, however these messages can be useful when SSL is behaving unexpectedly.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Suppress SSL handshake errors</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>The default SSL configuration repertoire. The default value is defaultSSLSettings.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default SSL repertoire</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslSessionTimeout" use="optional" default="8640ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>The timeout limit for an SSL session that is established by the SSL Channel. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL session timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sslchannel.options-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sslchannel.options"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.transaction"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for the Transaction Manager service</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Transaction Manager</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="dataSource" minOccurs="0" maxOccurs="1" type="com.ibm.ws.jdbc.dataSource"> 
                <xsd:annotation> 
                    <xsd:documentation>This is an optional property. By default the transaction service stores its recovery logs in a file. As an alternative it is possible to store the logs in an RDBMS. This is achieved by setting this property which defines a non-transactional data source where the transaction logs will be stored.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Non-transactional Data Source</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="OnePCOptimization" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the transaction manager optimizes when all resources but one vote read only.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable 1PC optimization</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoverOnStartup" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the server should begin transaction recovery at server startup.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Recover on startup</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="waitForRecovery" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the server should wait for transaction recovery to complete before accepting new transactional work.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Wait for recovery</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="acceptHeuristicHazard" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether all applications on this server accept the possibility of a heuristic hazard occurring in a two-phase transaction that contains a one-phase resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Accept heuristic hazard</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientInactivityTimeout" use="optional" default="60s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum duration between transactional requests from a remote client. Any period of client inactivity that exceeds this timeout results in the transaction being rolled back in this application server. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client inactivity timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="heuristicRetryInterval" use="optional" default="60s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Amount of time that the application server waits before retrying a completion signal, such as commit or rollback, after a transient exception from a resource manager or remote partner. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Heuristic retry wait</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="heuristicRetryWait" use="optional" default="5" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The number of times that the application server retries a completion signal, such as commit or rollback. Retries occur after a transient exception from a resource manager or remote partner.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Heuristic retry limit</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="propogatedOrBMTTranLifetimeTimeout" use="optional" default="0" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Upper limit of the transaction timeout for transactions that run in this server. This value should be greater than or equal to the value specified for the total transaction timeout. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum transaction timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="totalTranLifetimeTimeout" use="optional" default="120s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Default maximum time allowed for transactions started on this server to complete. Any such transactions that do not complete before this timeout occurs are rolled back. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Total transaction lifetime timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transactionLogDirectory" use="optional" default="${server.output.dir}/tranlog/" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A directory for this server where the transaction service stores log files for recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction log directory</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transactionLogSize" use="optional" default="1024" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the size of transaction log files in Kilobytes.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction log size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryIdentity" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Unique identity of this server for transaction peer recovery.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Identity of server for tran peer recovery</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="recoveryGroup" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the recovery group that this server belongs too. Members of a recovery group can recover the transaction logs of other servers in the group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of the recovery group</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="enableLoggingForHeuristicReporting" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the application server logs about-to-commit-one-phase-resource events from transactions that involve both a one-phase commit resource and two-phase commit resources.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable logging for heuristic reporting</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="transactionLogDBTableSuffix" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>When recovery logs are stored in an RDBMS table, this property allows the table name to be post-pended with a string to make it unique for this Server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transaction log database table suffix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="timeoutGracePeriodEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether there is a delay between a transaction timeout and the abnormal ending of the servant region that was running the transaction.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable transaction timeout grace period</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="lpsHeuristicCompletion" use="optional" default="ROLLBACK"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the direction that is used to complete a transaction that has a heuristic outcome; either the application server commits or rolls back the transaction, or depends on manual completion by the administrator.  Allowed values are: COMMIT, ROLLBACK and MANUAL</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Heuristic completion direction</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ROLLBACK"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Rollback</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="COMMIT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Commit</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="MANUAL"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Manual</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="defaultMaxShutdownDelay" use="optional" default="2s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>Default maximum shutdown delay. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default maximum shutdown delay</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dataSourceRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>This is an optional property. By default the transaction service stores its recovery logs in a file. As an alternative it is possible to store the logs in an RDBMS. This is achieved by setting this property which defines a non-transactional data source where the transaction logs will be stored.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Non-transactional data source reference</ext:label> 
                    <ext:reference>dataSource</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueue.properties.wasJms.javax.jms.Queue-com.ibm.ws.sib.api.jms.impl.JmsQueueImpl"> 
        <xsd:annotation> 
            <xsd:documentation>The name of the queue that this JMS queue is assigned to.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="deliveryMode" use="optional" default="Application"> 
            <xsd:annotation> 
                <xsd:documentation>The delivery mode for messages sent to this destination. This controls the persistence of messages on this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delivery mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Application"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Application</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Persistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Persistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="queueName" use="optional" default="Default.Queue" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the associated Queue</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Queue name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="AsConnection"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="AsConnection"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AsConnection</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeToLive" use="optional" default="0s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The default time in milliseconds from its dispatch time that the system must keep the messages live in the destination. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time to live</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="priority" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The relative priority for messages sent to this destination, in the range 0 to 9, with 0 as the lowest priority and 9 as the highest priority.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Priority</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="9"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueue.properties.wasJms.javax.jms.Queue-com.ibm.ws.sib.api.jms.impl.JmsQueueImpl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsQueue.properties.wasJms.javax.jms.Queue-com.ibm.ws.sib.api.jms.impl.JmsQueueImpl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopicConnectionFactory.properties.wasJms.javax.jms.TopicConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>A JMS topic connection factory is used to create connections to the associated JMS provider of JMS destinations, for publish/subscribe messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="busName" use="optional" default="defaultBus" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of a bus when connecting to the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bus name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientID" use="optional" default="clientID" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JMS client identifier needed for durable(and for shared non-durable) topic subscriptions on all connections. This identifier is required if the application is doing durable(and for shared non-durable) publish/subscribe messaging.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="durableSubscriptionHome" use="optional" default="defaultME" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Durable subscription home defines ME name to which connection needs to be established.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Durable subscription home</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentMapping" use="optional" default="ExpressNonPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to Non-persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Non-persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="persistentMapping" use="optional" default="ReliablePersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="Default"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="temporaryTopicNamePrefix" use="optional" default="temp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The prefix of up to twelve characters used for the temporary topics created by applications that use this topic connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary topic name prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="remoteServerAddress" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The remote server address that has triplets separated by a comma, with the syntax hostName:portNumber:chainName, used to connect to a bootstrap server. For example, Merlin:7276:BootstrapBasicMessaging. If hostName is not specified, the default is localhost. If portNumber is not specified, the default is 7276. If chainName is not specified, the default is BootstrapBasicMessaging. Refer to the information center for more information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote server address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="shareDurableSubscription" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether or not durable subscription can be shared across connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Share durable subscription</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetTransportChain" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Transport chains specify the communication protocols that can be used to communicate with the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transport chain</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopicConnectionFactory.properties.wasJms.javax.jms.TopicConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsTopicConnectionFactory.properties.wasJms.javax.jms.TopicConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsConnectionFactory.properties.wasJms.javax.jms.ConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>A JMS connection factory is used to create connections to the associated JMS provider of JMS destinations, for both point-to-point and publish/subscribe messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="busName" use="optional" default="defaultBus" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of a bus when connecting to the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bus name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientID" use="optional" default="clientID" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JMS client identifier needed for durable(and for shared non-durable) topic subscriptions on all connections. This identifier is required if the application is doing durable(and for shared non-durable) publish/subscribe messaging.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="durableSubscriptionHome" use="optional" default="defaultME" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Durable subscription home defines ME name to which connection needs to be established.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Durable subscription home</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentMapping" use="optional" default="ExpressNonPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to Non-persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Non-persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="persistentMapping" use="optional" default="ReliablePersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="Default"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="remoteServerAddress" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The remote server address that has triplets separated by a comma, with the syntax hostName:portNumber:chainName, used to connect to a bootstrap server. For example, Merlin:7276:BootstrapBasicMessaging. If hostName is not specified, the default is localhost. If portNumber is not specified, the default is 7276. If chainName is not specified, the default is BootstrapBasicMessaging. Refer to the information center for more information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote server address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="temporaryQueueNamePrefix" use="optional" default="temp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The prefix of up to twelve characters used for the temporary queues created by applications that use this queue connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary queue name prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="temporaryTopicNamePrefix" use="optional" default="temp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The prefix of up to twelve characters used for the temporary topics created by applications that use this topic connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary topic name prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="shareDurableSubscription" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether or not durable subscription can be shared across connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Share durable subscription</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetTransportChain" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Transport chains specify the communication protocols that can be used to communicate with the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transport chain</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsConnectionFactory.properties.wasJms.javax.jms.ConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsConnectionFactory.properties.wasJms.javax.jms.ConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopic.properties.wasJms.javax.jms.Topic-com.ibm.ws.sib.api.jms.impl.JmsTopicImpl"> 
        <xsd:annotation> 
            <xsd:documentation>The name of the topic that this JMS topic is assigned to, in the topic space defined by the Topic space property.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="deliveryMode" use="optional" default="Application"> 
            <xsd:annotation> 
                <xsd:documentation>The delivery mode for messages sent to this destination. This controls the persistence of messages on this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delivery mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Application"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Application</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Persistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Persistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="AsConnection"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="AsConnection"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AsConnection</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeToLive" use="optional" default="0s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The default time in milliseconds from its dispatch time that the system must keep the messages live in the destination. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Time to live</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="topicName" use="optional" default="Default.Topic" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the topic that this JMS topic is assigned to, in the topic space defined by the Topic space property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Topic name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="topicSpace" use="optional" default="Default.Topic.Space" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A topic space is a location for publish/subscribe messaging.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Topic space</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="priority" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The relative priority for messages sent to this destination, in the range 0 to 9, with 0 as the lowest priority and 9 as the highest priority.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Priority</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="0"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="9"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsTopic.properties.wasJms.javax.jms.Topic-com.ibm.ws.sib.api.jms.impl.JmsTopicImpl-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsTopic.properties.wasJms.javax.jms.Topic-com.ibm.ws.sib.api.jms.impl.JmsTopicImpl"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueueConnectionFactory.properties.wasJms.javax.jms.QueueConnectionFactory"> 
        <xsd:annotation> 
            <xsd:documentation>A JMS queue connection factory is used to create connections to the associated JMS provider of JMS queues, for point-to-point messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="busName" use="optional" default="defaultBus" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of a bus when connecting to the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bus name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="nonPersistentMapping" use="optional" default="ExpressNonPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to Non-persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Non-persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="persistentMapping" use="optional" default="ReliablePersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability applied to persistent JMS messages sent using this connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Persistent reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="Default"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="temporaryQueueNamePrefix" use="optional" default="temp" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The prefix of up to twelve characters used for the temporary queues created by applications that use this queue connection factory.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Temporary queue name prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="remoteServerAddress" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The remote server address that has triplets separated by a comma, with the syntax hostName:portNumber:chainName, used to connect to a bootstrap server. For example, Merlin:7276:BootstrapBasicMessaging. If hostName is not specified, the default is localhost. If portNumber is not specified, the default is 7276. If chainName is not specified, the default is BootstrapBasicMessaging. Refer to the information center for more information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote server address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetTransportChain" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Transport chains specify the communication protocols that can be used to communicate with the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transport chain</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>It is recommended to use a container managed authentication alias instead of configuring this property.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsQueueConnectionFactory.properties.wasJms.javax.jms.QueueConnectionFactory-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsQueueConnectionFactory.properties.wasJms.javax.jms.QueueConnectionFactory"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsActivationSpec.properties.wasJms.javax.jms.MessageListener"> 
        <xsd:annotation> 
            <xsd:documentation>A JMS activation specification is associated with one or more message-driven beans and provides the configuration necessary for them to receive messages.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Embedded Messaging</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="acknowledgeMode" use="optional" default="Auto-acknowledge"> 
            <xsd:annotation> 
                <xsd:documentation>The acknowledge mode indicates how a message received by a message-driven bean should be acknowledged.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Acknowledge mode</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Auto-acknowledge"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Auto-acknowledge</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Dups-ok-acknowledge"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Dups-ok-acknowledge</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="busName" use="optional" default="defaultBus" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of a bus when connecting to the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Bus name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="destinationType" use="optional" default="javax.jms.Queue"> 
            <xsd:annotation> 
                <xsd:documentation>The type of the destination, which is javax.jms.Queue or javax.jms.Topic.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Destination type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="javax.jms.Queue"> 
                                <xsd:annotation> 
                                    <xsd:documentation>javax.jms.Queue</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="javax.jms.Topic"> 
                                <xsd:annotation> 
                                    <xsd:documentation>javax.jms.Topic</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="maxConcurrency" use="optional" default="5"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of endpoints to which the messages are delivered concurrently. The increase in the number can improve the performance, but it also increases the number of threads that are in use at the specified time. If the message order must be retained for all the failed deliveries, set the maximum concurrent endpoints value to 1.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum concurrent MDB</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2147483647"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="readAhead" use="optional" default="Default"> 
            <xsd:annotation> 
                <xsd:documentation>Read ahead is an optimization that preemptively assigns messages to consumers. This processes the consumer requests faster.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Read ahead</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Default"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Default</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOn"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOn</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AlwaysOff"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AlwaysOff</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="retryInterval" use="optional" default="30s" type="secondDuration"> 
            <xsd:annotation> 
                <xsd:documentation>The delay (in seconds) between attempts to connect to a messaging engine, both for the initial connection, and any subsequent attempts to establish a better connection. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), or seconds (s). For example, specify 30 seconds as 30s. You can include multiple values in a single entry. For example, 1m30s is equivalent to 90 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Retry interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="subscriptionDurability" use="optional" default="NonDurable"> 
            <xsd:annotation> 
                <xsd:documentation>Type of MS topic subscription. The value can be any of following values: Durable DurableShared NonDurable NonDurableShared </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Subscription durability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="NonDurable"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NonDurable</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="NonDurableShared"> 
                                <xsd:annotation> 
                                    <xsd:documentation>NonDurableShared</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Durable"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Durable</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="DurableShared"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DurableShared</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="targetTransportChain" use="optional" default="InboundBasicMessaging"> 
            <xsd:annotation> 
                <xsd:documentation>Transport chains specify the communication protocols that can be used to communicate with the service integration bus in WebSphere Application Server traditional.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Transport chain</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="InboundBasicMessaging"> 
                                <xsd:annotation> 
                                    <xsd:documentation>InboundBasicMessaging</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="InboundSecureMessaging"> 
                                <xsd:annotation> 
                                    <xsd:documentation>InboundSecureMessaging</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="clientId" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JMS client identifier needed for durable(and for shared non-durable) topic subscriptions on all connections. This identifier is required if the application is doing durable(and for shared non-durable) publish/subscribe messaging.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Client id</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="connectionFactoryLookup" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>This property can be used to specify the lookup name of an administratively-defined javax.jms.ConnectionFactory, javax.jms.QueueConnectionFactory or javax.jms.TopicConnectionFactory object that is used to connect to the JMS provider from which the endpoint (message-driven bean) can receive messages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Connection factory jndi name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="destination" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to a JMS destination</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Destination reference</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="destinationLookup" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>This property can be used to specify the lookup name of the administratively-defined javax.jms.Queue or javax.jms.Topic objects that define the JMS queue or topic from which the endpoint (message-driven bean) can receive messages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Destination jndi name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="destinationRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to a JMS destination</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Destination reference</ext:label> 
                    <ext:reference>adminObject</ext:reference> 
                    <ext:reference>jmsQueue</ext:reference> 
                    <ext:reference>jmsTopic</ext:reference> 
                    <ext:reference>jmsDestination</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxBatchSize" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of messages received from the messaging engine in a single batch.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum batch size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="2147483647"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="messageSelector" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The JMS message selector used to determine which messages the message-driven bean receives. The value is a string that is used to select a subset of the available messages.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Message selector</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="remoteServerAddress" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The remote server address that has triplets separated by a comma, with the syntax hostName:portNumber:chainName, used to connect to a bootstrap server. For example, Merlin:7276:BootstrapBasicMessaging. If hostName is not specified, the default is localhost. If portNumber is not specified, the default is 7276. If chainName is not specified, the default is BootstrapBasicMessaging. Refer to the information center for more information.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Remote server address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="shareDurableSubscription" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Controls whether or not durable subscription can be shared across connections.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Share durable subscription</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="subscriptionName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The subscription name needed for durable(and for shared non-durable). Required field when using a durable(and for shared non-durable) topic subscription.This subscription name must be unique within a given client identifier.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Subscription name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.jca.jmsActivationSpec.properties.wasJms.javax.jms.MessageListener-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.jca.jmsActivationSpec.properties.wasJms.javax.jms.MessageListener"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.comms.wasJmsOutbound"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for WAS JMS outgoing connection requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WAS JMS Outbound</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>TCP protocol options for WAS JMS outbound </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>SSL protocol options for WAS JMS outbound</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SSL Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the WAS JMS outbound.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>WAS JMS outbound name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useSSL" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Set the value to true to enable the secure communication channel</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable SSL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>TCP protocol options for WAS JMS outbound </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslOptionsRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>SSL protocol options for WAS JMS outbound</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL options reference</ext:label> 
                    <ext:reference>sslOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.comms.wasJmsOutbound-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.comms.wasJmsOutbound"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security"> 
        <xsd:annotation> 
            <xsd:documentation>Security for the wasJmsServer-1.0 feature</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Messaging Security</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="role" minOccurs="1" maxOccurs="unbounded" type="com.ibm.ws.messaging.security.role-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A set of permissions that are mapped to the users and groups</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Role</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.user"> 
        <xsd:annotation> 
            <xsd:documentation>Users that are assigned to the particular role</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The user that is defined as part of the registry</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.user-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.user"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.group"> 
        <xsd:annotation> 
            <xsd:documentation>Groups that are assigned to the role</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The group that is defined as part of the user registry</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.group-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.group"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.topicPermission"> 
        <xsd:annotation> 
            <xsd:documentation>Permission that is defined on a topic for a set of users and groups</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Topic Permission</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="action" minOccurs="1" maxOccurs="3"> 
                <xsd:annotation> 
                    <xsd:documentation>Operations that are allowed on the destination</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Action</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="SEND"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>SEND</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="RECEIVE"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>RECEIVE</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ALL"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>ALL</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="topicName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the Topic inside the TopicSpace</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Topic name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="topicSpaceRef" use="optional" default="Default.Topic.Space" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to the TopicSpace defined in the Messaging Engine</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TopicSpace reference</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.topicPermission-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.topicPermission"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.role"> 
        <xsd:annotation> 
            <xsd:documentation>A set of permissions that are mapped to the users and groups</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="queuePermission" type="com.ibm.ws.messaging.security.queuePermission-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Permission that is defined on a queue for a set of users and groups</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Queue Permission</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tempDestinationPermission" type="com.ibm.ws.messaging.security.tempDestinationPermission-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Permission that is defined on a temporary destination for a set of users and groups</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Temporary Destination Permission</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="topicPermission" type="com.ibm.ws.messaging.security.topicPermission-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Permission that is defined on a topic for a set of users and groups</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Topic Permission</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="user" type="com.ibm.ws.messaging.security.user-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Users that are assigned to the particular role</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.messaging.security.group-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Groups that are assigned to the role</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the role</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.role-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.role"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.queuePermission"> 
        <xsd:annotation> 
            <xsd:documentation>Permission that is defined on a queue for a set of users and groups</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Queue Permission</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="action" minOccurs="1" maxOccurs="4"> 
                <xsd:annotation> 
                    <xsd:documentation>Operations that are allowed on the destination</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Action</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="SEND"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>SEND</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="RECEIVE"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>RECEIVE</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="BROWSE"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>BROWSE</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ALL"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>ALL</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="queueRef" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Reference to the Queue defined in the Messaging Engine</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Queue reference</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.queuePermission-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.queuePermission"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.tempDestinationPermission"> 
        <xsd:annotation> 
            <xsd:documentation>Permission that is defined on a temporary destination for a set of users and groups</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Temporary Destination Permission</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="action" minOccurs="1" maxOccurs="4"> 
                <xsd:annotation> 
                    <xsd:documentation>Operations that are allowed on the destination</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Action</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
                <xsd:simpleType> 
                    <xsd:union memberTypes="variableType"> 
                        <xsd:simpleType> 
                            <xsd:restriction base="xsd:string"> 
                                <xsd:enumeration value="SEND"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>SEND</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="RECEIVE"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>RECEIVE</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="CREATE"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>CREATE</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                                <xsd:enumeration value="ALL"> 
                                    <xsd:annotation> 
                                        <xsd:documentation>ALL</xsd:documentation> 
                                    </xsd:annotation> 
                                </xsd:enumeration> 
                            </xsd:restriction> 
                        </xsd:simpleType> 
                    </xsd:union> 
                </xsd:simpleType> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="prefix" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Prefix defined for a temporary destination</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.security.tempDestinationPermission-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.messaging.security.tempDestinationPermission"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.comms.server"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for WAS JMS incoming connection requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WAS JMS Endpoint</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>SSL protocol options for the WAS JMS endpoint.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SSL Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>TCP protocol options for the WAS JMS endpoint. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="enabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Toggle the availability of WAS JMS Endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="host" use="optional" default="localhost" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>IP address, domain name server (DNS) host name with domain name suffix, or just the DNS host name, used by a client to request a resource. Use '*' for all available network interfaces.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="wasJmsPort" use="optional" default="7276"> 
            <xsd:annotation> 
                <xsd:documentation>The port used for WAS JMS client messaging application connection requests. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="wasJmsSSLPort" use="optional" default="7286"> 
            <xsd:annotation> 
                <xsd:documentation>The port used for WAS JMS client messaging application connection requests secured with SSL. Use -1 to disable this port.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Secure port</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:int"> 
                            <xsd:minInclusive value="-1"> 
                            </xsd:minInclusive> 
                            <xsd:maxInclusive value="65535"> 
                            </xsd:maxInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sslOptionsRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>SSL protocol options for the WAS JMS endpoint.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL options reference</ext:label> 
                    <ext:reference>sslOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>TCP protocol options for the WAS JMS endpoint. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.messaging.runtime"> 
        <xsd:annotation> 
            <xsd:documentation>A messaging engine is a component, running inside a server, that manages messaging resources. Applications are connected to a messaging engine when they send and receive messages.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Messaging Engine</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="fileStore" type="com.ibm.ws.sib.fileStore"> 
                <xsd:annotation> 
                    <xsd:documentation>Messaging file store.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>File Store</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="queue" type="com.ibm.ws.sib.queue-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A queue destination represents a message queue and is used for point-to-point messaging.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Queue</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="topicSpace" type="com.ibm.ws.sib.topicSpace-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>A topic space destination represents a set of "publish and subscribe" topics and is used for publish/subscribe messaging.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Topic Space</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="alias" type="com.ibm.ws.sib.alias-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>An alias destination maps an alternative name for a bus destination. You can use an alias destination for point-to-point messaging or publish/subscribe messaging.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Alias</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="messagingSecurity" type="com.ibm.ws.messaging.security"> 
                <xsd:annotation> 
                    <xsd:documentation>Security for the wasJmsServer-1.0 feature.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Messaging Security</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.fileStore"> 
        <xsd:annotation> 
            <xsd:documentation>Messaging file store.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>File Store</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="path" use="optional" default="${server.output.dir}/messaging/messageStore" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Path to the file store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>File store path</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logFileSize" use="optional" default="10"> 
            <xsd:annotation> 
                <xsd:documentation>Size in megabytes of the log file. The log file size cannot exceed half the size of the file store size. For a file store size set to 400 MB, the log file size cannot exceed 200 MB. The maximum recommended log file size is 25% of the file store size. For a file store size set to 400 MB, the maximum recommended setting for log file size would be 100 MB.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Log size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="10"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="fileStoreSize" use="optional" default="400"> 
            <xsd:annotation> 
                <xsd:documentation>The combined size in megabytes for both permanent and temporary store. The file store size is equally divided between permanent  and temporary store. For example, if you specify 400 MB as file store size then 200 MB is used for permanent store and 200 MB is used for temporary store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>File store size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="20"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.fileStore-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sib.fileStore"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.topicSpace"> 
        <xsd:annotation> 
            <xsd:documentation>A topic space destination represents a set of "publish and subscribe" topics and is used for publish/subscribe messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Topic Space</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the topic space.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Topic space name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceReliability" use="optional" default="AssuredPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability assigned to a message produced to this destination when an explicit reliability has not been set by the producer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Force reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="exceptionDestination" use="optional" default="_SYSTEM.Exception.Destination" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The destination to which a message is forwarded by the system when it cannot be delivered to this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Exception destination name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="failedDeliveryPolicy" use="optional" default="SEND_TO_EXCEPTION_DESTINATION"> 
            <xsd:annotation> 
                <xsd:documentation>Lists the actions that the messaging engine must take when the maxredeliverycount is reached for a message.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failed delivery policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SEND_TO_EXCEPTION_DESTINATION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SEND_TO_EXCEPTION_DESTINATION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="DISCARD"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DISCARD</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="KEEP_TRYING"> 
                                <xsd:annotation> 
                                    <xsd:documentation>KEEP_TRYING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redeliveryInterval" use="optional" default="5000" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>When no exception destination is configured, the time interval to apply between retry attempts, after the maximum failed deliveries limit is reached, for this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Redelivery interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxRedeliveryCount" use="optional" default="5" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of failed attempts to process a message. After this number of failed attempts, if an exception destination is configured, the message is forwarded from the intended destination to its exception destination. If an exception destination is not configured, a time interval between retry attempts is applied.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum redelivery count</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sendAllowed" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Producers can send messages to this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="receiveAllowed" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Clear this option (setting it to false) to prevent consumers from being able to receive messages from this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Receive allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maintainStrictOrder" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Maintains the order in which a producer sends messages to the destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maintain strict message order</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxMessageDepth" use="optional" default="50000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of messages that the messaging engine can place on its message points.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum message depth</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.topicSpace-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sib.topicSpace"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.queue"> 
        <xsd:annotation> 
            <xsd:documentation>A queue destination represents a message queue and is used for point-to-point messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Queue</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the queue.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Queue name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceReliability" use="optional" default="AssuredPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability assigned to a message produced to this destination when an explicit reliability has not been set by the producer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Force reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="exceptionDestination" use="optional" default="_SYSTEM.Exception.Destination" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The destination to which a message is forwarded by the system when it cannot be delivered to this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Exception destination name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="failedDeliveryPolicy" use="optional" default="SEND_TO_EXCEPTION_DESTINATION"> 
            <xsd:annotation> 
                <xsd:documentation>Lists the actions that the messaging engine must take when the maxredeliverycount is reached for a message.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failed delivery policy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="SEND_TO_EXCEPTION_DESTINATION"> 
                                <xsd:annotation> 
                                    <xsd:documentation>SEND_TO_EXCEPTION_DESTINATION</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="DISCARD"> 
                                <xsd:annotation> 
                                    <xsd:documentation>DISCARD</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="KEEP_TRYING"> 
                                <xsd:annotation> 
                                    <xsd:documentation>KEEP_TRYING</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="redeliveryInterval" use="optional" default="5000" type="longType"> 
            <xsd:annotation> 
                <xsd:documentation>When no exception destination is configured, the time interval to apply between retry attempts, after the maximum failed deliveries limit is reached, for this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Redelivery interval</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxRedeliveryCount" use="optional" default="5" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of failed attempts to process a message. After this number of failed attempts, if an exception destination is configured, the message is forwarded from the intended destination to its exception destination. If an exception destination is not configured, a time interval between retry attempts is applied.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum redelivery count</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sendAllowed" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Producers can send messages to this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="receiveAllowed" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Clear this option (setting it to false) to prevent consumers from being able to receive messages from this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Receive allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maintainStrictOrder" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Maintains the order in which a producer sends messages to the destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maintain strict message order</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="maxMessageDepth" use="optional" default="50000"> 
            <xsd:annotation> 
                <xsd:documentation>The maximum number of messages that the messaging engine can place on its message points.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum message depth</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:long"> 
                            <xsd:minInclusive value="1"> 
                            </xsd:minInclusive> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.queue-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sib.queue"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.alias"> 
        <xsd:annotation> 
            <xsd:documentation>An alias destination maps an alternative name for a bus destination. You can use an alias destination for point-to-point messaging or publish/subscribe messaging.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Alias</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="id" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the alias queue or alias topic space.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Alias name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="targetDestination" use="optional" default="Default.Queue" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The target destination parameter identifies a destination that might be within the same Bus as the alias destination. By default, if no property is set, it points to Default.Queue.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Target destination</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="forceReliability" use="optional" default="AssuredPersistent"> 
            <xsd:annotation> 
                <xsd:documentation>The reliability assigned to a message produced to this destination when an explicit reliability has not been set by the producer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Force reliability</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BestEffortNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BestEffortNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ExpressNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ExpressNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliableNonPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliableNonPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="ReliablePersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>ReliablePersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="AssuredPersistent"> 
                                <xsd:annotation> 
                                    <xsd:documentation>AssuredPersistent</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="sendAllowed" use="optional" default="true"> 
            <xsd:annotation> 
                <xsd:documentation>Producers can send messages to this destination.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Send allowed</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="true"> 
                                <xsd:annotation> 
                                    <xsd:documentation>true</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="false"> 
                                <xsd:annotation> 
                                    <xsd:documentation>false</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.sib.alias-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.sib.alias"> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl"> 
        <xsd:annotation> 
            <xsd:documentation>Configures web container application security.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Web Container Application Security</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="allowFailOverToBasicAuth" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to fail over to basic authentication when certificate authentication fails. The equivalent custom property in the full application server profile is com.ibm.wsspi.security.web.failOverToBasicAuth.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow failover to HTTP basic auth</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowLogoutPageRedirectToAnyHost" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Warning, security risk: Setting this property to true may open your systems to potential URL redirect attacks. If set to true, any host can be specified for the logout page redirect. If set to false, and the logout page points to a different host, or one not listed in the logout page redirect domain list, then a generic logout page is displayed. The equivalent custom property in the full application server profile is com.ibm.websphere.security.allowAnyLogoutExitPageHost.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow logout page to redirect to any host</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="displayAuthenticationRealm" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Warning, security risk: if this property is set to true, and the user registry's realm name contains sensitive information, it is displayed to the user. For example, if an LDAP configuration is used, the LDAP server hostname and port are displayed. This configuration controls what the HTTP basic authentication login window displays when the realm name is not defined in the application web.xml. If the realm name is defined in the application web.xml file, this property is ignored. If set to true, the realm name displayed will be the user registry realm name for the LTPA authentication mechanism. If set to false, the realm name displayed will be "Default Realm". The equivalent custom property in the full application server profile is com.ibm.websphere.security.displayRealm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Display the realm for HTTP basic auth</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpOnlyCookies" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the HTTP only (HttpOnly) cookies option is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable HTTP only cookies</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logoutOnHttpSessionExpire" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether users will be logged out after the HTTP session timer expires. If set to false, the user credential will stay active until the Single Sign-On token timeout occurs. The equivalent custom property in the full application server profile is com.ibm.ws.security.web.logoutOnHTTPSessionExpire.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Logout users after the HTTP session timer expires</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="wasReqURLRedirectDomainNames" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A pipe (|) separated list of domain names that are allowed for the WASReqURL page redirect. The hostname found on the form login request is implied. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Domain names allowed for WASReqURL page redirect</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="logoutPageRedirectDomainNames" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A pipe (|) separated list of domain names that are allowed for the logout page redirect (localhost is implied). The equivalent custom property in the full application server profile is com.ibm.websphere.security.logoutExitPageDomainList.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Domain names for logout page redirect</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="postParamCookieSize" use="optional" default="16384" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Size of the POST parameter cookie. If the size of the cookie is larger than the browser limit, unexpected behavior may occur. The value of this property must be a positive integer and represents the maximum size of the cookie in bytes. The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.postParamMaxCookieSize.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>POST parameter cookie size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="postParamSaveMethod" use="optional" default="Cookie"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies where POST parameters are stored upon redirect. Valid values are cookie (POST parameters are stored in a cookie), session (POST parameters are stored in the HTTP Session) and none (POST parameters are not preserved). The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.postParamSaveMethod.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>POST parameter store behavior for redirects</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Cookie"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Cookie</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Session"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Session</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="None"> 
                                <xsd:annotation> 
                                    <xsd:documentation>None</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="preserveFullyQualifiedReferrerUrl" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Warning, security risk: Setting this to true may open your systems to potential URL redirect attacks. This property specifies whether the fully qualified referrer URL for form login redirects is preserved. If false, the host for the referrer URL is removed and the redirect is to localhost. The equivalent custom property in the full application server profile is com.ibm.websphere.security.util.fullyQualifiedURL</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Preserve the fully qualified referrer URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="singleSignonEnabled" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether single sign-on is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable single sign-on</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssoCookieName" use="optional" default="LtpaToken2" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Customizes the SSO cookie name. A custom cookie name allows you to logically separate authentication between SSO domains and to enable customized authentication to a particular environment. Before setting this value, consider that setting a custom cookie name can cause an authentication failure. For example, a connection to a server that has a custom cookie property set sends this custom cookie to the browser. A subsequent connection to a server that uses either the default cookie name or a different cookie name, is not able to authenticate the request via a validation of the in-bound cookie. The equivalent custom property in the full application server profile is com.ibm.websphere.security.customSSOCookieName.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Single sign-on cookie name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useOnlyCustomCookieName" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use only the custom cookie name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use only the custom cookie name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssoDomainNames" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A pipe (|) separated list of domain names that SSO Cookies should be presented. The equivalent custom property in the full application server profile is com.ibm.ws.security.config.SingleSignonConfig</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Domain names for SSO cookies</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssoRequiresSSL" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether a SSO cookie is sent over SSL. The equivalent property in the full application server profile is requiresSSL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Single sign-on requires SSL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ssoUseDomainFromURL" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to use the domain name from the request URL for the cookie domain.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use domain name from the request URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useLtpaSSOForJaspic" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Enables the single sign-on behavior using the LTPA token for a JASPIC authentication. After the initial authentication is performed by the JASPIC provider, the LTPA cookie is created and used for subsequent logins to achieve the single-sign on behavior. The JASPIC provider is not called until the token expires. The JASPIC authentication applies when an external provider is used and also when the application uses the Java EE Security API annotations. The single sign-on behavior can also be achieved by enabling the JASPIC session cookie or the application provided RememberMeIdentityStore bean for a JASPIC authentication. In this case, set the useLtpaSSOForJaspic attribute to false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Enable LTPA single sign-on for JASPIC</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="useAuthenticationDataForUnprotectedResource" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether authentication data can be used when accessing an unprotected resource. The unprotected resource can access validated authenticated data that it previously could not access. This option enables the unprotected resource to call the getRemoteUser, isUserInRole, and getUserPrincipal methods to retrieve an authenticated identity. The equivalent custom property in the full application server profile is com.ibm.wsspi.security.web.webAuthReq=persisting.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Use authenticated identity for an unprotected URI</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="webAlwaysLogin" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether the login() method will throw an exception when an identity has already been authenticated.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow login with authenticated identity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginFormURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the global URL of a form login page including the root context. The form login page must be part of the WAR file. If a form login application does not specify the form login page in the web.xml file, it uses the global form login URL. This is required when overrideHttpAuthMethod attribute is set to FORM.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login form URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="loginErrorURL" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the global URL of a form login error page that includes the root context. The form login error page must be part of a WAR file. An application uses the global login error URL if the application uses form login authentication and does not specify either the form login page or the login error page in the auth-method element of the web.xml file. This is required when overrideHttpAuthMethod attribute is set to FORM.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Login error URL</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowAuthenticationFailOverToAuthMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication fail over method that will be used when the certificate authentication fails or if the certificate is missing. Valid values are BASIC, FORM and APP_DEFINED. APP_DEFINED is only valid when overrideHttpAuthMethod attribute is set to CLIENT_CERT. When APP_DEFINED is set, the authentication method which is  configured in the application is used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Failover method when certificate login fails</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BASIC"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%allowAuthenticationFailOverToAuthMethod.BASIC</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FORM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%allowAuthenticationFailOverToAuthMethod.FORM</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="APP_DEFINED"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%allowAuthenticationFailOverToAuthMethod.APP_DEFINED</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="includePathInWASReqURL" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Setting the Path parameter can allow the client/browser to manage multiple WASReqURL cookies during multiple concurrent logins on the same user agent. The equivalent custom property in the full application server profile is com.ibm.websphere.security.setContextRootForFormLogin.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Set the path parameter for the WASReqURL cookie</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="trackLoggedOutSSOCookies" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to track LTPA single signon tokens that are logged out on a server so that it can not be reused on the same server.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Track logged out LTPA single signon tokens</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="overrideHttpAuthMethod" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the authentication method to be used for all applications. This specified value overrides any application defined authentication method. The acceptable value is BASIC, FORM or CLIENT_CERT. When FORM is used, loginFormURL and loginErrorURL attributes are required to be set.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of authentication method to override</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="BASIC"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BASIC</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="FORM"> 
                                <xsd:annotation> 
                                    <xsd:documentation>FORM</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="CLIENT_CERT"> 
                                <xsd:annotation> 
                                    <xsd:documentation>CLIENT_CERT</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="contextRootForFormAuthenticationMechanism" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the context root of a form login page, which is specified by the loginFormURL property. If this value is not set, the first path element of the loginFormURL property is used as a context root. This value is applicable when overrideHttpAuthMethod is set to FORM, or if overrideHttpAuthMethodis is set to CLIENT_CERT and allowAuthenticationFailOverToAuthMethod is set to FORM.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Context root for the Java EE 8 login form</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="basicAuthenticationMechanismRealmName" use="optional" default="defaultRealm" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a realm name for the Java EE 8 Security HTTP basic authentication. This value is applicable when overrideHttpAuthMethod is set to BASIC, or if overrideHttpAuthMethod is set to CLIENT_CERT and allowAuthenticationFailOverToAuthMethod is set to BASIC. The default value is defaultRealm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name of the Java EE 8 basic authentication</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sameSiteCookie" use="optional" default="Disabled"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the SameSite attribute value to use for the SSO cookie.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Add the SameSite attribute to the SSO cookie</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Disabled"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not set the SameSite attribute value on the SSO cookie</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Lax"> 
                                <xsd:annotation> 
                                    <xsd:documentation>%sameSiteCookieLax</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="None"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Set the SSO cookie SameSite attribute value to None </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Strict"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Set the SSO cookie SameSite attribute value to Strict</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wsoc.outbound.wsocOutbound"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for WAS WebSocket outgoing connection requests.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WAS WebSocket Outbound</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>TCP protocol options for WAS WebSocket outbound </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>TCP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="httpOptions" type="com.ibm.ws.http.options"> 
                <xsd:annotation> 
                    <xsd:documentation>HTTPprotocol options for WAS WebSocket outbound </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>HTTP Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options"> 
                <xsd:annotation> 
                    <xsd:documentation>SSL protocol options for WAS WebSocket outbound</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>SSL Options</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="tcpOptionsRef" use="optional" default="defaultTCPOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>TCP protocol options for WAS WebSocket outbound </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>TCP options reference</ext:label> 
                    <ext:reference>tcpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="httpOptionsRef" use="optional" default="defaultHttpOptions" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>HTTPprotocol options for WAS WebSocket outbound </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>HTTP options reference</ext:label> 
                    <ext:reference>httpOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslOptionsRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>SSL protocol options for WAS WebSocket outbound</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL options reference</ext:label> 
                    <ext:reference>sslOptions</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.config"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration for the user registry federation. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Registry Federation</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="realm" type="com.ibm.ws.security.wim.core.realm-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>Reference to the realm.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Realm</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="primaryRealm" type="com.ibm.ws.security.wim.core.realm"> 
                <xsd:annotation> 
                    <xsd:documentation>Primary realm configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Primary Realm</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="supportedEntityType" type="com.ibm.ws.security.wim.core.supportedEntityType-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The default parent for an entity type mapping.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Entity Mapping Reference</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="extendedProperty" type="com.ibm.ws.security.wim.core.extendedProperty-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The extended properties for Person and Group.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Extended Property Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="maxSearchResults" use="optional" default="4500" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum number of entries that can be returned in a search. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Maximum search results</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="searchTimeout" use="optional" default="10m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Maximum amount of time, in milliseconds, to process a search. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Search timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pageCacheSize" use="optional" default="1000" type="intType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the number of pagination requests that can be stored in the cache. The paging cache size needs to be configured based on the number of pagination requests executed on the system and the hardware system resources available.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Paging cache size</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="pageCacheTimeout" use="optional" default="30000ms" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the maximum time that an entry, which added to the page cache, is available. When the specified time has elapsed, the entry from the page cache is cleared. This needs to be configured based on the interval between pagination search requests executed on the system and the hardware system resources available. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Page cache timeout</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.realm"> 
        <xsd:annotation> 
            <xsd:documentation>Realm configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Realm</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="participatingBaseEntry" type="com.ibm.ws.security.wim.core.registryBaseEntry-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The Base Entry that is part of this realm.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Participating Base Entry</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="uniqueUserIdMapping" type="com.ibm.ws.security.wim.uniqueUserIdMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for unique user id used in an user registry operation. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Unique User Id Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="userSecurityNameMapping" type="com.ibm.ws.security.wim.userSecurityNameMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for user security name in an user registry operation.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User Security Name Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="userDisplayNameMapping" type="com.ibm.ws.security.wim.userDisplayNameMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for user display name in an user registry operation.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>User Display Name Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="uniqueGroupIdMapping" type="com.ibm.ws.security.wim.uniqueGroupIdMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for unique group id in an user registry operation.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Unique Group Id Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="groupSecurityNameMapping" type="com.ibm.ws.security.wim.groupSecurityNameMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for group security name in an user registry operation.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group Security Name Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="groupDisplayNameMapping" type="com.ibm.ws.security.wim.groupDisplayNameMapping"> 
                <xsd:annotation> 
                    <xsd:documentation>The input and output property mappings for group display name in an user registry operation.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Group Display Name Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="defaultParents" type="com.ibm.ws.security.wim.core.defaultParents-factory"> 
                <xsd:annotation> 
                    <xsd:documentation>The default parent mapping for the realm.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Default Parent Mapping</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the realm.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="delimiter" use="optional" default="/" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Delimiter used to qualify the realm under which the operation should be executed. For example, userid=test1/myrealm where / is the delimiter and myrealm is the realm name. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Delimiter</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowOpIfRepoDown" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether operation is allowed if a repository is down. The default value is false.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Allow operation if repository is down</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.realm-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.realm"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.defaultParents"> 
        <xsd:annotation> 
            <xsd:documentation>The default parent mapping for the realm.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Default Parent Mapping</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the entity being mapped. The name of the entity can be PersonAccount or Group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of entity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="parentUniqueName" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The distinguished name under Base distinguished name (DN) in the repository under which all entities of the configured type will be created.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Parent distinguished name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.defaultParents-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.defaultParents"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.userDisplayNameMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The property mapping for userDisplayName (default: principalName).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Display Name Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="principalName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="principalName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.userDisplayNameMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.userDisplayNameMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.supportedEntityType"> 
        <xsd:annotation> 
            <xsd:documentation>The default parent for an entity type mapping.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Entity Mapping Reference</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="name" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The name of the entity being mapped. The name of the entity can be PersonAccount or Group.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Name of entity</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="defaultParent" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>The distinguished name under Base distinguished name (DN) in the repository under which all entities of the configured type will be created.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Parent distinguished name</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.supportedEntityType-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.supportedEntityType"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.extendedProperty"> 
        <xsd:annotation> 
            <xsd:documentation>The extended properties for Person and Group.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Extended Property Mapping</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the name of the property extended for Person and Group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of extended property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dataType" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the data type of the property extended for Person and Group. The basic Java data types are supported.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data type of extended property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="Integer"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Integer</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Long"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Long</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="String"> 
                                <xsd:annotation> 
                                    <xsd:documentation>String</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Boolean"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Boolean</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Date"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Date</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Double"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Double</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="BigInteger"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BigInteger</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="BigDecimal"> 
                                <xsd:annotation> 
                                    <xsd:documentation>BigDecimal</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="entityType" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the entity being mapped. The name of the entity can be PersonAccount or Group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name of entity</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="PersonAccount"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Person</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Group"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Group</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="multiValued" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Defines if the property extended for Person and Group supports multiple values.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Multi-valued</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultValue" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Defines the default value for the property during write operation, if no default value is set.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default value to be set</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.extendedProperty-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.extendedProperty"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.userSecurityNameMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The property mapping for userSecurityName (default: principalName).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User Security Name Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="principalName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="uniqueName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.userSecurityNameMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.userSecurityNameMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.registryBaseEntry"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration of the registry base entry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Registry Base Entry</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of the base entry.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Base entry name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.core.registryBaseEntry-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.core.registryBaseEntry"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.uniqueGroupIdMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The property mapping for uniqueGroupId (default: uniqueName).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Unique Group ID Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="uniqueName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.uniqueGroupIdMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.uniqueGroupIdMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.uniqueUserIdMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The input and output mapping for the unique user id. </xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Unique User ID Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="uniqueName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="uniqueName" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of PersonAccount entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.uniqueUserIdMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.uniqueUserIdMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.groupDisplayNameMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The property mapping for groupDisplayName (default: cn).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group Display Name Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.groupDisplayNameMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.groupDisplayNameMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.groupSecurityNameMapping"> 
        <xsd:annotation> 
            <xsd:documentation>The property mapping for groupSecurityName (default: cn).</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group Security Name Mapping Properties</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="inputProperty" use="optional" default="cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for input. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry input property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="outputProperty" use="optional" default="cn" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The property that maps to the user registry attribute for output. The valid values are: uniqueId, uniqueName, externalId, externalName and the attributes of Group entity type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User registry output property</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.security.wim.groupSecurityNameMapping-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.security.wim.groupSecurityNameMapping"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wsat.service.wsatconfigservice"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration properties for the Web Services Atomic Transaction feature.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WS-AtomicTransaction</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="sslEnabled" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, WS-AtomicTransaction internal event messages sent between the WS-AT coordinator and participant are encrypted using SSL.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="sslRef" use="optional" default="defaultSSLConfig" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the SSL configuration to be used for the WS-AtomicTransaction protocol when SSL is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL reference</ext:label> 
                    <ext:reference>ssl</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clientAuth" use="optional" default="false" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether additional client authentication is enabled for the WS-AtomicTransaction protocol when SSL is enabled.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>SSL client authentication enabled</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="externalURLPrefix" use="optional" default="" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Optionally specifies the host and port address of a proxy server used to route the WS-AtomicTransaction protocol.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Proxy server address</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.config"> 
        <xsd:annotation> 
            <xsd:documentation>Web Services Security default configuration for provider.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WS-Security Provider</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="callerToken" type="com.ibm.ws.wssecurity.caller.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Caller token.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>WebSphere Caller</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="signatureProperties" type="com.ibm.ws.wssecurity.sig.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Required signature configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Signature Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="encryptionProperties" type="com.ibm.ws.wssecurity.enc.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Required encryption configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Encryption Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="samlToken" type="com.ibm.ws.wssecurity.config.samltoken"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="ws-security.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>User information to create Username Token. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.callback-handler" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Password callback handler implementation class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password callback handler</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.encryption.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias used for accessing encryption keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encryption alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.signature.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias used for accessing signature keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Signature alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.enable.nonce.cache" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Whether to cache UsernameToken nonces.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Nonce cache</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of additional properties for web services security.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.client.config"> 
        <xsd:annotation> 
            <xsd:documentation>Web Services Security default configuration for client.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WS-Security Client</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="signatureProperties" type="com.ibm.ws.wssecurity.sig.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Required signature configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Signature Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="encryptionProperties" type="com.ibm.ws.wssecurity.enc.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Required encryption configuration.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Encryption Properties</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="ws-security.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>User information to create Username Token. </xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>User password information needed to create Username Token.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.callback-handler" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Password callback handler implementation class.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Password callback handler</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.encryption.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias used for accessing encryption keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Encryption alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="ws-security.signature.username" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Alias used for accessing signature keystore.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Signature alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of additional properties for web services security.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.enc.config"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration information such as keystore type, keystore password</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WS-Security Encryption</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JKS, JCEKS or PKCS11</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.alias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The default keystore alias to use, if none is specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password to access keystore file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.provider" use="optional" default="org.apache.ws.security.components.crypto.Merlin" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Provider used to create Crypto instances. Defaults to "org.apache.ws.security.components.crypto.Merlin".</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>WSS4J provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of the keystore</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.provider" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The provider used to load keystores. Defaults to installed provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.cert.provider" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The provider used to load certificates. Defaults to keystore provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.x509crl.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of an (X509) CRL file to use.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>X509 CRL file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.private.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The default password used to load the private key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of the truststore</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The truststore password.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The truststore type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of additional properties for web services security.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.enc.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.wssecurity.enc.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.caller.config"> 
        <xsd:annotation> 
            <xsd:documentation>Required configuration for caller processing.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WebSphere Caller</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specify token name. The options are Usernametoken, X509token, Samltoken.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Caller token</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the user principal name in the subject. The default is NameID assertion.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Principal identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="groupIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the name of the group that the authenticated principal is a member of. There is no default value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="userUniqueIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the unique user name as it applies to the WSCredential in the subject. The default is the same as the userIdentifier attribute value.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Unique identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="realmIdentifier" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a SAML attribute that is used as the realm name. The default is issuer.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm identifier</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="includeTokenInSubject" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies whether to include a SAML assertion in the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Include SAML assertion in the subject</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="mapToUserRegistry" use="optional" default="No"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies how to map an identity to a registry user. The options are No, User, and Group. The default is No, and the user registry is not used to create the user subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Map a SAML identity to a registry user</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="No"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Do not map a SAML identity to a user or group in the registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="User"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Map a SAML identity to a user defined in the registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="Group"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Map a SAML identity to a group defined in the user registry</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="realmName" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies a realm name when mapToUserRegistry is set to No or Group.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Realm name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="allowCustomCacheKey" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the generation of a custom cache key to access the authentication cache and get the subject.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Customized cache key</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.caller.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.wssecurity.caller.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.sig.config"> 
        <xsd:annotation> 
            <xsd:documentation>Configuration information such as keystore type, keystore password</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>WS-Security Signature</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>JKS, JCEKS or PKCS11</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.alias" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The default keystore alias to use, if none is specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore alias</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>Password to access keystore file.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of the keystore</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of the truststore</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The truststore password.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.truststore.type" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The truststore type.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Truststore type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.provider" use="optional" default="org.apache.ws.security.components.crypto.Merlin" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Provider used to create Crypto instances. Defaults to "org.apache.ws.security.components.crypto.Merlin".</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>WSS4J provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.provider" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The provider used to load keystores. Defaults to installed provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Keystore provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.cert.provider" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The provider used to load certificates. Defaults to keystore provider.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Certificate provider</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.x509crl.file" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The location of an (X509) CRL file to use.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>X509 CRL file</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="org.apache.ws.security.crypto.merlin.keystore.private.password" use="optional" type="password"> 
            <xsd:annotation> 
                <xsd:documentation>The default password used to load the private key.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key password</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of additional properties for web services security.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.sig.config-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.wssecurity.sig.config"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.config.samltoken"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies the properties that are used to evaluate the trustworthiness and validity of a SAML Assertion.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>SAML Token Properties</ext:label> 
                <ext:extraProperties/> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="audienceRestrictions" minOccurs="0" maxOccurs="unbounded" type="xsd:string"> 
                <xsd:annotation> 
                    <xsd:documentation>Specify the allowed audiences of the SAML Assertion. Default is all audiences allowed. </xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>The audience restrictions</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:attribute name="wantAssertionsSigned" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>Indicates a requirement for the &lt;saml:Assertion&gt; elements received by this service provider to be signed.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Sign SAML assertion</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="clockSkew" use="optional" default="5m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>This is used to specify the allowed clock skew in minutes when validating the SAML token. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>The time difference allowed between systems</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="requiredSubjectConfirmationMethod" use="optional" default="bearer"> 
            <xsd:annotation> 
                <xsd:documentation>Specify whether the Subject Confirmation Method is required in the SAML Assertion. Default is true.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Subject confirmation method required</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="bearer"> 
                                <xsd:annotation> 
                                    <xsd:documentation>bearer</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="timeToLive" use="optional" default="30m" type="duration"> 
            <xsd:annotation> 
                <xsd:documentation>Specify the default life time of a SAML Assertion in the case it does not define the NoOnOrAfter condition. Default is 30 minutes. Specify a positive integer followed by a unit of time, which can be hours (h), minutes (m), seconds (s), or milliseconds (ms). For example, specify 500 milliseconds as 500ms. You can include multiple values in a single entry. For example, 1s500ms is equivalent to 1.5 seconds.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default life time</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="internal.properties" type="internalPropertiesType" use="optional"> 
            <xsd:annotation> 
                <xsd:documentation>Collection of additional properties for web services security.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Additional properties</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.wssecurity.config.samltoken-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.wssecurity.config.samltoken"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.persistence.databaseStore"> 
        <xsd:annotation> 
            <xsd:documentation>Specifies a relational database as a persistent store for server features.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Database Store</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="dataSource" type="com.ibm.ws.jdbc.dataSource"> 
                <xsd:annotation> 
                    <xsd:documentation>Data source that connects to the persistent store.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Data Source</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
            <xsd:element name="authData" type="com.ibm.ws.security.jca.internal.authdata.config"> 
                <xsd:annotation> 
                    <xsd:documentation>Authentication data for task scheduling, queries, and execution.</xsd:documentation> 
                    <xsd:appinfo> 
                        <ext:label>Authentication Data</ext:label> 
                    </xsd:appinfo> 
                </xsd:annotation> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="createTables" use="optional" default="true" type="booleanType"> 
            <xsd:annotation> 
                <xsd:documentation>When set to true, database tables are created.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Create database tables</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="dataSourceRef" use="optional" default="DefaultDataSource" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Data source that connects to the persistent store.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Data source reference</ext:label> 
                    <ext:reference>dataSource</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="keyGenerationStrategy" use="optional" default="AUTO"> 
            <xsd:annotation> 
                <xsd:documentation>The preferred strategy for generating unique primary keys. If the selected strategy is not supported for the database, a different strategy might be used.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Key generation strategy</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="AUTO"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Automatically select the strategy to generate unique primary keys. </xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IDENTITY"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a database identity column to generate unique primary keys.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="SEQUENCE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a database sequence to generate unique primary keys.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="TABLE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Use a database table to generate unique primary keys.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:attribute name="tablePrefix" use="optional" default="WLP" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name prefix for tables, sequences, and other database artifacts.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Table name prefix</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="authDataRef" use="optional" type="pidType"> 
            <xsd:annotation> 
                <xsd:documentation>Authentication data for task scheduling, queries, and execution.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Authentication data reference</ext:label> 
                    <ext:reference>authData</ext:reference> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="schema" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Schema name with read and write access to the database tables.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Schema name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.persistence.databaseStore-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.persistence.databaseStore"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.group"> 
        <xsd:annotation> 
            <xsd:documentation>Group that has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Group</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a group that has the security role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A group access ID in the general form group:realmName/groupUniqueId. A value will be generated if one is not specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Group access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.group-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.security.feature.authorization.group"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.user"> 
        <xsd:annotation> 
            <xsd:documentation>User who has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>User</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Name of a user who has the security role.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="access-id" use="optional" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>A user access ID in the general form user:realmName/userUniqueId. A value will be generated if one is not specified.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>User access ID</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.user-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.security.feature.authorization.user"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorizationConfig"> 
        <xsd:annotation> 
            <xsd:documentation>A collection of role names and mappings of the roles to users, groups, or special subjects</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Feature Authorization Role Mapping</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:sequence> 
            <xsd:element name="security-role" minOccurs="0" maxOccurs="unbounded" type="com.ibm.ws.webcontainer.security.feature.authorizationConfig.role-factory"> 
            </xsd:element> 
        </xsd:sequence> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorizationConfig-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.security.feature.authorizationConfig"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorizationConfig.role"> 
        <xsd:annotation> 
            <xsd:documentation>A role that is mapped to users and groups in a user registry.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Security Role</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="user" type="com.ibm.ws.webcontainer.security.feature.authorization.user-factory"> 
            </xsd:element> 
            <xsd:element name="group" type="com.ibm.ws.webcontainer.security.feature.authorization.group-factory"> 
            </xsd:element> 
            <xsd:element name="special-subject" type="com.ibm.ws.webcontainer.security.feature.authorization.specialsubject-factory"> 
            </xsd:element> 
        </xsd:choice> 
        <xsd:attribute name="name" use="required" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>Role name.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Role name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorizationConfig.role-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.security.feature.authorizationConfig.role"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.specialsubject"> 
        <xsd:annotation> 
            <xsd:documentation>Special subject that has the security role.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Special Subject</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation><!--Idiom for "empty element context" (whitespace accepted and ignored)--> 
        <xsd:sequence> 
            <xsd:sequence/> 
        </xsd:sequence> 
        <xsd:attribute name="type" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>One of the following special subject types: ALL_AUTHENTICATED_USERS, EVERYONE.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Special subject type</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="ALL_AUTHENTICATED_USERS"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All authenticated users.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="EVERYONE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>All users for every request, even if the request was not authenticated.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:complexType name="com.ibm.ws.webcontainer.security.feature.authorization.specialsubject-factory"> 
        <xsd:complexContent> 
            <xsd:extension base="com.ibm.ws.webcontainer.security.feature.authorization.specialsubject"> 
                <xsd:attribute name="id" type="factoryIdType" use="optional"> 
                    <xsd:annotation> 
                        <xsd:documentation>A unique configuration ID.</xsd:documentation> 
                        <xsd:appinfo> 
                            <ext:label>ID</ext:label> 
                        </xsd:appinfo> 
                    </xsd:annotation> 
                </xsd:attribute> 
            </xsd:extension> 
        </xsd:complexContent> 
    </xsd:complexType> 
    <xsd:simpleType name="variableType"> 
        <xsd:restriction base="xsd:string"> 
            <xsd:pattern value=".*$\{[^\s\}]*\}.*"/> 
        </xsd:restriction> 
    </xsd:simpleType> 
    <xsd:simpleType name="location"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="booleanType"> 
        <xsd:union memberTypes="xsd:boolean variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="singlePidType"> 
        <xsd:restriction base="xsd:string"> 
            <xsd:pattern value="[^, ]+"/> 
        </xsd:restriction> 
    </xsd:simpleType> 
    <xsd:simpleType name="pidType"> 
        <xsd:union memberTypes="singlePidType variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="multiplePidType"> 
        <xsd:restriction base="xsd:string"> 
            <xsd:pattern value="[^, ]+(\s*,\s*[^, ]+)*"/> 
        </xsd:restriction> 
    </xsd:simpleType> 
    <xsd:simpleType name="pidListType"> 
        <xsd:union memberTypes="multiplePidType variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="secondDuration"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="duration"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="dirLocation"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="passwordHash"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="hourDuration"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="intType"> 
        <xsd:union memberTypes="xsd:int variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="fileLocation"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="password"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="longType"> 
        <xsd:union memberTypes="xsd:long variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="shortType"> 
        <xsd:union memberTypes="xsd:short variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="minuteDuration"> 
        <xsd:union memberTypes="xsd:string variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="tokenType"> 
        <xsd:union memberTypes="xsd:token variableType"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="factoryIdType"> 
        <xsd:restriction base="xsd:string"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="internalPropertiesType"> 
        <xsd:restriction base="xsd:string"/> 
    </xsd:simpleType> 
    <xsd:simpleType name="schemaPropertiesType"> 
        <xsd:restriction base="xsd:string"/> 
    </xsd:simpleType> 
    <xsd:complexType name="includeType"> 
        <xsd:annotation> 
            <xsd:documentation>Specify a configuration resource to include in the server's configuration.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Include</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:attribute name="optional" type="xsd:boolean" use="optional" default="false"> 
            <xsd:annotation> 
                <xsd:documentation>Allow the included resource to be skipped if it cannot be found.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Resource is optional</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="location" type="location" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the resource location. This can be a file path or a URI for a remote resource.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Location</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="onConflict" use="optional" default="MERGE"> 
            <xsd:annotation> 
                <xsd:documentation>Specifies the behavior that is used to merge elements when conflicts are found.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>On conflict</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
            <xsd:simpleType> 
                <xsd:union memberTypes="variableType"> 
                    <xsd:simpleType> 
                        <xsd:restriction base="xsd:string"> 
                            <xsd:enumeration value="MERGE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Conflicting elements will be merged together.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="REPLACE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>When elements conflict, the element from the included file will replace the conflicting element.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                            <xsd:enumeration value="IGNORE"> 
                                <xsd:annotation> 
                                    <xsd:documentation>Conflicting elements in the included file will be ignored.</xsd:documentation> 
                                </xsd:annotation> 
                            </xsd:enumeration> 
                        </xsd:restriction> 
                    </xsd:simpleType> 
                </xsd:union> 
            </xsd:simpleType> 
        </xsd:attribute> 
    </xsd:complexType> 
    <xsd:complexType name="variableDefinitionType"> 
        <xsd:annotation> 
            <xsd:documentation>Declare a new variable by specifying the name and value for the variable.</xsd:documentation> 
            <xsd:appinfo> 
                <ext:label>Variable Declaration</ext:label> 
            </xsd:appinfo> 
        </xsd:annotation> 
        <xsd:attribute name="name" type="xsd:string" use="required"> 
            <xsd:annotation> 
                <xsd:documentation>The name of the variable.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Name</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="value" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The value to be assigned to the variable.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
        <xsd:attribute name="defaultValue" type="xsd:string"> 
            <xsd:annotation> 
                <xsd:documentation>The defaultValue to be assigned to the variable if no value is available.</xsd:documentation> 
                <xsd:appinfo> 
                    <ext:label>Default value</ext:label> 
                </xsd:appinfo> 
            </xsd:annotation> 
        </xsd:attribute> 
    </xsd:complexType> 
    <xsd:complexType name="serverType"> 
        <xsd:choice minOccurs="0" maxOccurs="unbounded"> 
            <xsd:element name="include" type="includeType"/> 
            <xsd:element name="variable" type="variableDefinitionType"/> 
            <xsd:element name="webApplication" type="com.ibm.ws.app.manager.webappcfg-factory"/> 
            <xsd:element name="enterpriseApplication" type="com.ibm.ws.app.manager.earappcfg-factory"/> 
            <xsd:element name="trustAssociation" type="com.ibm.ws.security.authentication.tai-factory"/> 
            <xsd:element name="jaasLoginContextEntry" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginContextEntry-factory"/> 
            <xsd:element name="jaasLoginModule" type="com.ibm.ws.security.authentication.internal.jaas.jaasLoginModuleConfig-factory"/> 
            <xsd:element name="applicationManager" type="com.ibm.ws.app.management"/> 
            <xsd:element name="applicationMonitor" type="com.ibm.ws.app.manager.monitor"/> 
            <xsd:element name="application" type="com.ibm.ws.app.manager-factory"/> 
            <xsd:element name="classloading" type="com.ibm.ws.classloading.global"/> 
            <xsd:element name="auditFileHandler" type="com.ibm.ws.security.audit.file.handler-factory"/> 
            <xsd:element name="auditEvent" type="com.ibm.ws.security.audit.event-factory"/> 
            <xsd:element name="authFilter" type="com.ibm.ws.security.authentication.filter-factory"/> 
            <xsd:element name="basicRegistry" type="com.ibm.ws.security.registry.basic.config-factory"/> 
            <xsd:element name="batchPersistence" type="com.ibm.ws.jbatch.container.persistence"/> 
            <xsd:element name="batchJobLogging" type="com.ibm.ws.jbatch.joblog"/> 
            <xsd:element name="batchJmsDispatcher" type="com.ibm.ws.jbatch.jms.dispatcher-factory"/> 
            <xsd:element name="batchJmsExecutor" type="com.ibm.ws.jbatch.jms.executor-factory"/> 
            <xsd:element name="batchJmsEvents" type="com.ibm.ws.jbatch.jms.events-factory"/> 
            <xsd:element name="bell" type="com.ibm.ws.classloading.bell-factory"/> 
            <xsd:element name="authentication" type="com.ibm.ws.security.authentication"/> 
            <xsd:element name="authCache" type="com.ibm.ws.security.authentication.cache"/> 
            <xsd:element name="cdi12" type="com.ibm.ws.cdi12.cdiContainer"/> 
            <xsd:element name="channelfw" type="com.ibm.ws.channelfw"/> 
            <xsd:element name="tcpOptions" type="com.ibm.ws.tcpchannel.options-factory"/> 
            <xsd:element name="library" type="com.ibm.ws.classloading.sharedlibrary-factory"/> 
            <xsd:element name="authData" type="com.ibm.ws.security.jca.internal.authdata.config-factory"/> 
            <xsd:element name="cloudantDatabase" type="com.ibm.ws.cloudant.cloudantDatabase-factory"/> 
            <xsd:element name="cloudant" type="com.ibm.ws.cloudant.cloudant-factory"/> 
            <xsd:element name="concurrencyPolicy" type="com.ibm.ws.concurrency.policy.concurrencyPolicy-factory"/> 
            <xsd:element name="managedExecutorService" type="com.ibm.ws.concurrent.managedExecutorService-factory"/> 
            <xsd:element name="managedThreadFactory" type="com.ibm.ws.concurrent.managedThreadFactory-factory"/> 
            <xsd:element name="contextService" type="com.ibm.ws.context.service-factory"/> 
            <xsd:element name="managedScheduledExecutorService" type="com.ibm.ws.concurrent.managedScheduledExecutorService-factory"/> 
            <xsd:element name="connectionManager" type="com.ibm.ws.jca.connectionManager-factory"/> 
            <xsd:element name="constrainedDelegation" type="com.ibm.ws.security.s4u2proxy.KerberosExtService"/> 
            <xsd:element name="couchdb" type="com.ibm.ws.couchdb.couchdb-factory"/> 
            <xsd:element name="distributedMap" type="com.ibm.ws.cache-factory"/> 
            <xsd:element name="ejbApplication" type="com.ibm.ws.app.manager.ejbappcfg-factory"/> 
            <xsd:element name="eventLogging" type="com.ibm.ws.event.logging"/> 
            <xsd:element name="mimeTypes" type="com.ibm.ws.http.mimetype"/> 
            <xsd:element name="httpDispatcher" type="com.ibm.ws.http.dispatcher"/> 
            <xsd:element name="httpEncoding" type="com.ibm.ws.transport.http.encoding"/> 
            <xsd:element name="httpAccessLogging" type="com.ibm.ws.http.log.access-factory"/> 
            <xsd:element name="httpProxyRedirect" type="com.ibm.ws.http.proxyredirect-factory"/> 
            <xsd:element name="samesite" type="com.ibm.ws.http.samesite-factory"/> 
            <xsd:element name="httpEndpoint" type="com.ibm.ws.http-factory"/> 
            <xsd:element name="httpOptions" type="com.ibm.ws.http.options-factory"/> 
            <xsd:element name="remoteIp" type="com.ibm.ws.http.remoteip-factory"/> 
            <xsd:element name="virtualHost" type="com.ibm.ws.http.virtualhost-factory"/> 
            <xsd:element name="orb" type="com.ibm.ws.transport.iiop.internal.ORBWrapper-factory"/> 
            <xsd:element name="iiopServerPolicies" type="com.ibm.ws.transport.iiop.internal.ServerPolicySourceImpl-factory"/> 
            <xsd:element name="iiopEndpoint" type="com.ibm.ws.transport.iiop.internal.IIOPEndpointImpl-factory"/> 
            <xsd:element name="webTarget" type="com.ibm.ws.jaxrs20.common.clientConfig-factory"/> 
            <xsd:element name="resourceAdapter" type="com.ibm.ws.jca.resourceAdapter-factory"/> 
            <xsd:element name="adminObject" type="com.ibm.ws.jca.adminObject-factory"/> 
            <xsd:element name="activationSpec" type="com.ibm.ws.jca.activationSpec-factory"/> 
            <xsd:element name="connectionFactory" type="com.ibm.ws.jca.connectionFactory-factory"/> 
            <xsd:element name="jmsActivationSpec" type="com.ibm.ws.jca.jmsActivationSpec-factory"/> 
            <xsd:element name="jmsTopicConnectionFactory" type="com.ibm.ws.jca.jmsTopicConnectionFactory-factory"/> 
            <xsd:element name="jmsQueue" type="com.ibm.ws.jca.jmsQueue-factory"/> 
            <xsd:element name="jmsQueueConnectionFactory" type="com.ibm.ws.jca.jmsQueueConnectionFactory-factory"/> 
            <xsd:element name="jmsTopic" type="com.ibm.ws.jca.jmsTopic-factory"/> 
            <xsd:element name="jmsDestination" type="com.ibm.ws.jca.jmsDestination-factory"/> 
            <xsd:element name="jmsConnectionFactory" type="com.ibm.ws.jca.jmsConnectionFactory-factory"/> 
            <xsd:element name="mailSession" type="com.ibm.ws.javamail.mailSession-factory"/> 
            <xsd:element name="javaPermission" type="com.ibm.ws.security.java2sec.policyConfig-factory"/> 
            <xsd:element name="jdbcDriver" type="com.ibm.ws.jdbc.jdbcDriver-factory"/> 
            <xsd:element name="dataSource" type="com.ibm.ws.jdbc.dataSource-factory"/> 
            <xsd:element name="jndiEntry" type="com.ibm.ws.jndi.internal.JNDIEntry-factory"/> 
            <xsd:element name="jndiURLEntry" type="com.ibm.ws.jndi.internal.JNDIURLEntry-factory"/> 
            <xsd:element name="jndiObjectFactory" type="com.ibm.ws.jndi.objectFactory-factory"/> 
            <xsd:element name="jndiReferenceEntry" type="com.ibm.ws.jndi.referenceEntry-factory"/> 
            <xsd:element name="jpa" type="com.ibm.ws.jpacomponent"/> 
            <xsd:element name="jspEngine" type="com.ibm.ws.jsp.2.2"/> 
            <xsd:element name="jwtBuilder" type="com.ibm.ws.security.jwt.builder-factory"/> 
            <xsd:element name="jwtConsumer" type="com.ibm.ws.security.jwt.consumer-factory"/> 
            <xsd:element name="jwtSso" type="com.ibm.ws.security.jwtsso"/> 
            <xsd:element name="mpJwt" type="com.ibm.ws.security.mp.jwt-factory"/> 
            <xsd:element name="featureManager" type="com.ibm.ws.kernel.feature"/> 
            <xsd:element name="executor" type="com.ibm.ws.threading"/> 
            <xsd:element name="config" type="com.ibm.ws.config"/> 
            <xsd:element name="fileset" type="com.ibm.ws.kernel.metatype.helper.fileset-factory"/> 
            <xsd:element name="securewayLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.secureway-factory"/> 
            <xsd:element name="ldapRegistry" type="com.ibm.ws.security.registry.ldap.config-factory"/> 
            <xsd:element name="edirectoryLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.eDirectory-factory"/> 
            <xsd:element name="activedLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.actived-factory"/> 
            <xsd:element name="idsLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.ids-factory"/> 
            <xsd:element name="iplanetLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.iPlanet-factory"/> 
            <xsd:element name="domino50LdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.domino50-factory"/> 
            <xsd:element name="customLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.custom-factory"/> 
            <xsd:element name="netscapeLdapFilterProperties" type="com.ibm.ws.security.registry.ldap.internal.filters.netscape-factory"/> 
            <xsd:element name="logging" type="com.ibm.ws.logging"/> 
            <xsd:element name="logstashCollector" type="com.ibm.ws.logstash.collector.internal.LogstashCollector"/> 
            <xsd:element name="ltpa" type="com.ibm.ws.security.token.ltpa.LTPAConfiguration"/> 
            <xsd:element name="ejbContainer" type="com.ibm.ws.ejbcontainer.runtime"/> 
            <xsd:element name="mongo" type="com.ibm.ws.mongo.mongo-factory"/> 
            <xsd:element name="mongoDB" type="com.ibm.ws.mongo.mongoDB-factory"/> 
            <xsd:element name="monitor" type="com.ibm.ws.monitor.internal.MonitoringFrameworkExtender"/> 
            <xsd:element name="mpMetrics" type="com.ibm.ws.microprofile.metrics"/> 
            <xsd:element name="oauth-roles" type="com.ibm.ws.security.oauth20.roles-factory"/> 
            <xsd:element name="oauthProvider" type="com.ibm.ws.security.oauth20.provider-factory"/> 
            <xsd:element name="openId" type="com.ibm.ws.security.openid20.openidClientConfig"/> 
            <xsd:element name="userInfo" type="com.ibm.ws.security.openid20.openidClientConfig.userInfo-factory"/> 
            <xsd:element name="oidcClientWebapp" type="com.ibm.ws.security.openidconnect.client.webapp"/> 
            <xsd:element name="openidConnectClient" type="com.ibm.ws.security.openidconnect.client.oidcClientConfig-factory"/> 
            <xsd:element name="openidConnectProvider" type="com.ibm.ws.security.openidconnect.server.oidcServerConfig-factory"/> 
            <xsd:element name="persistentExecutor" type="com.ibm.ws.concurrent.persistent.executor-factory"/> 
            <xsd:element name="requestTiming" type="com.ibm.ws.request.timing.RequestTimingService"/> 
            <xsd:element name="remoteFileAccess" type="com.ibm.ws.management.filetransfer"/> 
            <xsd:element name="samlWebSso20" type="com.ibm.ws.security.saml.sso20-factory"/> 
            <xsd:element name="quickStartSecurity" type="com.ibm.ws.security.quickStartSecurity"/> 
            <xsd:element name="reader-role" type="com.ibm.ws.management.security.role.reader"/> 
            <xsd:element name="administrator-role" type="com.ibm.ws.management.security.role.administrator"/> 
            <xsd:element name="cors" type="com.ibm.ws.webcontainer.cors-factory"/> 
            <xsd:element name="httpSession" type="com.ibm.ws.session"/> 
            <xsd:element name="pluginConfiguration" type="com.ibm.ws.generatePluginConfig"/> 
            <xsd:element name="webContainer" type="com.ibm.ws.webcontainer"/> 
            <xsd:element name="httpSessionCache" type="com.ibm.ws.session.cache"/> 
            <xsd:element name="httpSessionDatabase" type="com.ibm.ws.session.db"/> 
            <xsd:element name="sipStack" type="com.ibm.ws.jain.protocol.ip.sip"/> 
            <xsd:element name="sipApplicationRouter" type="com.ibm.ws.sip.ar"/> 
            <xsd:element name="domainResolver" type="com.ibm.ws.sip.container.resolver.DomainResolverImpl"/> 
            <xsd:element name="sipContainer" type="com.ibm.ws.sip.container.internal.SipContainerComponent"/> 
            <xsd:element name="sipEndpoint" type="com.ibm.ws.sip.endpoint-factory"/> 
            <xsd:element name="linkedinLogin" type="com.ibm.ws.security.social.linkedin"/> 
            <xsd:element name="googleLogin" type="com.ibm.ws.security.social.google"/> 
            <xsd:element name="githubLogin" type="com.ibm.ws.security.social.github"/> 
            <xsd:element name="twitterLogin" type="com.ibm.ws.security.social.twitter"/> 
            <xsd:element name="socialLoginWebapp" type="com.ibm.ws.security.social.webapp"/> 
            <xsd:element name="facebookLogin" type="com.ibm.ws.security.social.facebook"/> 
            <xsd:element name="oidcLogin" type="com.ibm.ws.security.social.oidclogin-factory"/> 
            <xsd:element name="oauth2Login" type="com.ibm.ws.security.social.oauth2login-factory"/> 
            <xsd:element name="spnego" type="com.ibm.ws.security.spnego"/> 
            <xsd:element name="springBootApplication" type="com.ibm.ws.app.manager.springappcfg-factory"/> 
            <xsd:element name="sslDefault" type="com.ibm.ws.ssl.default"/> 
            <xsd:element name="ssl" type="com.ibm.ws.ssl.repertoire-factory"/> 
            <xsd:element name="keyStore" type="com.ibm.ws.ssl.keystore-factory"/> 
            <xsd:element name="sslOptions" type="com.ibm.ws.sslchannel.options-factory"/> 
            <xsd:element name="transaction" type="com.ibm.ws.transaction"/> 
            <xsd:element name="wasJmsOutbound" type="com.ibm.ws.messaging.comms.wasJmsOutbound-factory"/> 
            <xsd:element name="wasJmsEndpoint" type="com.ibm.ws.messaging.comms.server"/> 
            <xsd:element name="messagingEngine" type="com.ibm.ws.messaging.runtime"/> 
            <xsd:element name="webAppSecurity" type="com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl"/> 
            <xsd:element name="wsocOutbound" type="com.ibm.ws.wsoc.outbound.wsocOutbound"/> 
            <xsd:element name="federatedRepository" type="com.ibm.ws.security.wim.core.config-factory"/> 
            <xsd:element name="wsAtomicTransaction" type="com.ibm.ws.wsat.service.wsatconfigservice"/> 
            <xsd:element name="wsSecurityProvider" type="com.ibm.ws.wssecurity.config"/> 
            <xsd:element name="wsSecurityClient" type="com.ibm.ws.wssecurity.client.config"/> 
            <xsd:element name="databaseStore" type="com.ibm.ws.persistence.databaseStore-factory"/> 
            <xsd:element name="authorization-roles" type="com.ibm.ws.webcontainer.security.feature.authorizationConfig-factory"/> 
        </xsd:choice> 
        <xsd:attribute name="description" type="xsd:string" use="optional"/> 
        <xsd:anyAttribute processContents="skip"> 
        </xsd:anyAttribute> 
    </xsd:complexType> 
    <xsd:element name="client" type="serverType"/> 
    <xsd:element name="server" type="serverType"/> 
</xsd:schema> 
