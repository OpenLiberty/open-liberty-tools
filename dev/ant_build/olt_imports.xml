<!--
 * Copyright (c) 2017, 2018 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
-->

<project name="olt_imports">

    <dirname property="olt_imports.basedir" file="${ant.file.olt_imports}" />

    <import file="${olt_imports.basedir}/public_imports/internal_imports/buildtasks.xml" />
    <import file="${olt_imports.basedir}/public_imports/updatesite_imports.xml"/>
    <import file="olt_suppliers_updatesite.xml"/>

   <target name="setOLTUpdateSiteProperties">
  
         <echo>Open OLT setOLTUpdateSiteProperties call</echo>
       
         <condition property="java.executable" value="java" else="java.exe">
           <not>
             <os family="windows" />
           </not>
         </condition>

         <property name="local.workspace" location="${olt_imports.basedir}/.."/>
         <property name="target.jvm" location="${java.home}/bin/${java.executable}" />
         <property name="equinox.launcher" value="org.eclipse.equinox.app_1.3.100.v20120522-1841.jar" /> 
         <property name="delegate.build.dir" location = "${local.workspace}"/>

         <property name="nativeDirectory" value="${local.workspace}/tools.image/update" />
         <property name="sourceDir" value="${nativeDirectory}/staging" />
         <property name="tempDir" value="${sourceDir}/temp" />
         <property name="updateSiteDir" value="${sourceDir}/update-site" />
         <property name="updateSiteDirFull" value="${sourceDir}/update-sitefull" />
         <property name="version" value="${level_tag}" />
         <property name="fileNameVersion" value="${level_tag}" />
       
         <loadresource property="newVersion">
             <propertyresource name="fileNameVersion" />
             <filterchain>
                 <tokenfilter>
                     <filetokenizer />
                     <replacestring from=" " to="_" />
                 </tokenfilter>
             </filterchain>
         </loadresource>
         
         <var name="fileNameVersion" unset="true" />
         <property name="fileNameVersion" value="${newVersion}" />
         <property name="qualifier" value="${buildLabel}"/>
         <property name="updatesite-name" value="openlibertytools-${fileNameVersion}.v${qualifier}" />
         <property name="metadata-updatesite-name" value="openlibertytools-metadata-${fileNameVersion}.v${qualifier}" />         
         <property name="gen.updatesite.file" location="${olt_imports.basedir}/resources/olt_updatesite-properties/generateP2Metadata.xml" />
         <property name="target.updatesite.repository" location="${updateSiteDir}/repository" />
       
         <mkdir dir="${target.updatesite.repository}"/>
     
         <property name="olt.product.toplevelfeatures.list" 
             location="olt_product_updatesite_toplevel_features.properties" />
         <property name="olt.product.features.list" 
             location="olt_product_updatesite_features.properties" />
     
    </target>
    
    <target name="generateOLTUpdateSite" depends="setOLTUpdateSiteProperties">
        
        <echo>Call generateOLTUpdateSite...</echo>

        <!-- Step 1 -->
        <!-- Create site.xml with top level feature(s) -->
        <generateUpdateSite 
            tempDir="${tempDir}" 
            sourceDir="${sourceDir}" 
            outputDir="${updateSiteDir}"
            addIncludedFeatures="false">
                          
            <!-- Add Main feature here -->
            <category name="was4d"  
                label="Open Liberty Tools for Eclipse" 
                description="Open Liberty Tools for Eclipse">
                
                <!-- Features list file -->
                <featuresFile id="Open OLT product updatesite toplevel features" 
                    file="${olt.product.toplevelfeatures.list}" />
                
              </category>
        </generateUpdateSite>
              
        <!-- Step 2 -->
        <!-- Include features -->
        <generateUpdateSite 
            tempDir="${tempDir}" 
            sourceDir="${sourceDir}" 
            outputDir="${updateSiteDirFull}"
            addIncludedFeatures="true">
            
            <!-- Features list file -->
            <featuresFile id="Open OLT product updatesite features" 
                                file="${olt.product.features.list}" />
            
          </generateUpdateSite>
        
          <!-- Step 3 -->
          <!-- Generate P2 metadata -->
          <copy todir="${updateSiteDir}/features" overwrite="true" verbose="true">
              <fileset dir="${updateSiteDirFull}/features">
                  <include name="**/*.jar"/>
              </fileset>
          </copy>  
                      
          <copy todir="${updateSiteDir}/plugins" overwrite="true" verbose="true">
              <fileset dir="${updateSiteDirFull}/plugins">
                  <include name="**/*.jar"/>
              </fileset>
          </copy>

        <ant antfile="${delegate.build.dir}/ant_build/public_imports/updatesite_imports.xml" 
                             target="pde-setup"
                             inheritall="true"
                             inheritrefs="true"/>
        
        <ant antfile="${delegate.build.dir}/ant_build/public_imports/updatesite_imports.xml" 
                                     target="generateP2Metadata"
                                     inheritall="true"
                                     inheritrefs="true"/>
          
          <!-- Step 4 -->
        <!-- Copy site.xml into staging directory for WTP installation compatibility-->
        <copy file="${updateSiteDir}/site.xml" todir="${target.updatesite.repository}" overwrite="true" verbose="true" />

        <property name="artifact.location" value="${nativeDirectory}/${updatesite-name}.zip"/>

          <!-- Step 5 -->
        <!-- Create final zip -->
        <zip destfile="${artifact.location}" basedir="${target.updatesite.repository}"/>

        <copy file="${artifact.location}" todir="${artifacts.dir}"/>

        <echo>***** Build artifact available at ${artifacts.dir}/${updatesite-name}.zip</echo>
    
    </target>
    
   <target name="generateOLTSuppliersUpdateSite" depends="setOLTUpdateSiteProperties">
                
            <echo>Call generateOLTSuppliersUpdateSite...</echo>
            <antcall target="generateSuppliersUpdateSite"/>
       
            <!-- Copy com.ibm.ws.kernel.feature.resolver_*.jar into ${local.workspace}/tools.image/update/plugins to have them signed -->
            <copy todir="${local.workspace}/tools.image/update/plugins" overwrite="true" verbose="true">
                <fileset dir="${sourceDir}/plugins">
                    <include name="com.ibm.ws.kernel.feature.resolver_*.jar"/>
                </fileset>
            </copy>
   
    </target>
    
    <target name="generateOLTSuppliersUpdateSiteRestore" depends="setOLTUpdateSiteProperties">
                
            <echo>Call generateOLTSuppliersUpdateSiteRestore...</echo>
        
            <mkdir dir="${local.workspace}/tools.image/update/features"/>
            <mkdir dir="${sourceDir}/features"/>
                
            <!-- Copy build (signed if disable.run.signjar=false) result content -->
                <copy todir="${sourceDir}/features" overwrite="true" verbose="true">
                    <fileset dir="${local.workspace}/tools.image/update/features">
                        <include name="**/*.jar"/>
                    </fileset>
                </copy>
 
                <copy todir="${sourceDir}/plugins" overwrite="true" verbose="true">
                    <fileset dir="${local.workspace}/tools.image/update/plugins">
                        <include name="**/*.jar"/>
                    </fileset>
                </copy>
        
            <!-- copy com.ibm.ws.kernel.feature.resolver_*.jar into suppliers dir  -->
            <move todir="${sourceDir}/suppliers/update-site/plugins" overwrite="true" verbose="true">
                <fileset dir="${local.workspace}/tools.image/update/plugins">
                    <include name="com.ibm.ws.kernel.feature.resolver_*.jar"/>
                </fileset>
            </move>                            
    </target>
</project>
